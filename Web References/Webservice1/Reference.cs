//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DischargeCommit.Webservice1 {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebEmrServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebEmrService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDistinctMediTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistinctTotalDoseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDaywiseDrugDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistinctCycleDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDayPlanWithDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProtocolInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadiationDoseDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadiationPlanEngineeringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadiationBeamWedgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadiationDosimetryDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadiationPlanDetails2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBeamWedgeDetails2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhysicsCalculationMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhysicsCalculationDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhysicsCalculationMain2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhysicsCalculationDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadiationTreatmentMaster1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMRTreatmentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRotPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRomdmgdocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRomdmguntOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreatmentMasterDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSurgeryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSurgeryHeaderRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadiationTreatmentDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadiationTreatmentDetail1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCPlanNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTASSESSMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTAS_REACOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTCLAUDITOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTDiagnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompletedBrachyNosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTTREAT_DSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTTREAT_MOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTPLANOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTBEAMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROMDMGDOCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROMDMGUNTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTPLANENGOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTTREAT_PhIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTTREAT_PhIIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTTREAT_PhIIIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTAS_REAC1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMTDistDetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssessmentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTTTRTExceptIndex4OperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertIntoTTTRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAssessmentIntoTTTRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertClinicalAuditIntoTTTRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTTREAT_DOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTASSESSM1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetROTCLAUDIT1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCPlansOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJCNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCPlanListByJCNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreatmentDateFromMTRCHEDRGOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistinctDrugNamesByMediTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCPlanByCaseAndJCNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJCNoByCaseNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMTProInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdverseEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSideEffectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResponseEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChemoDrugDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProtocolInfo1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistinctDrugNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLoginValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitDischargeSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchDischargeSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistExamDtTm2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadiologyRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDSiteDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiagMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMA101OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRepWritersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRepWritersFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMycobacteriaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStagingGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTNMStageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcedureName1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMycrobacteriologyReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMycrobaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAntibioticDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpecimenDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonNullAntibioticDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportWritersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportWritersByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcedureDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDmbcCommOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDRequisitnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDCYReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDFReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDHEMCYTO1ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCMServices1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIFMCOEXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIPRSNLHSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDHEMCPDETOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHINTERFACEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportHLF1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportHLF1_RBCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportHLF1_WBCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportHLF1_PlattOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWPSTNCPDTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDHEMCBCDETOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportHLLFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDCBCREP1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDCBCREPAOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTA101OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDCBCSMREP1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBMAMyeloidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBMABCellOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBMATKCellOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBMAOthersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDRequisitn1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBMASubRepOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestReport1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWILExlbrstOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWILExrbrstOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWISysclnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWPSTNCLFTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWPSTNCCLFDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWADJPATDTSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWADJCHMOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWADJRADOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWADJHEMOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWADJTARGTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWADJBISPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWJCPatDtlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClinNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWPSTSRGLFTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWPSTSRGRGTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWPSTSRGPDTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIPATDTLSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWISURGYLFTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWISURGYRGTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIADJCHMEOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIADJTTRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIPRSCOMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIPATDTLS_INTERVNTNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIPITSSUEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWITDIMGOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIPICNEOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIPICLRLROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIPALLCHMOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIPTTTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWIPTHTSRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrugName2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AppendDrugNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDFNReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPMConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConsciousDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOHFDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFollowUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDeathStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrimaryDiseaseDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewRegDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewRequisitionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequisitionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSurgicalListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPAE_No_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Anesthesia_ProcNo_List1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSurgicalListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionDetailAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionMasterByCaseNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionDetailsByPresIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionMasterByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientDetailsByCaseNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionDetailByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConcessionByPrescriptionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionMasterById1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTA101DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConcessionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPresByOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RadioReferral_By_CaseNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RadioReferral_By_CaseNo_ACTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistinctJCNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChemoReferralOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChemoReferralactOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOTProLatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnesProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOTInopFindingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOTReSurgeryDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOTSubSiterDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOTReprocesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxCycleNoFromMTCYCLEDTLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMTDistDetDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCycleDrugDayDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback executespqueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLoginDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLoginDetails1OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequisitionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTJCINVRVWDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRREQUISITNDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoricalExamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTHSTEXDTLByExamNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistExamDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTCANCHISTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCMSERVICESOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMPDTLSLFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTMHSTCMPLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTMHSTCBSDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTMHSTCBSFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTMHSTCBSOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTMHSTCBSPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTMHSTCBSSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiagnosisDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDigStsValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiagnosisDetails1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiagnosisStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInterventionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSurgeryDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalRTDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBrachytherapyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChemotherapyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrugNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrugName1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedicalHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllergyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenstrualHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObstetricHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContraceptiveHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHormoneTherapyHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnvOccupationalHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFamilyHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLifeStyleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCMServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistExamDtTmOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCISReferralOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPalliativeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPalliativeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadicalDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadicalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiagnosisDetails2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvestigationOutReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvestigationOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTJCINVRVWOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRREQUISITNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPREVCANCER_HISTORYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSurgeryAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBrachytherapyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChemotherapyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTDiagnosisOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistExamDtTm1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJCNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClinicalNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdditionalRemarksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCranialDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGaitDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSensoryDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMotorSystemDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMuscleDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReflexesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCerebellarDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEndocrineDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRemarksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClinicExtOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdvancedDiseaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecurrentCancerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCSFDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeningealOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNPSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEyesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalEyeExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInternalEyeExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHeadNeckDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetastasisDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMOCDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJawDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNeckDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTSHNDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemExamDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTumorExamDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTumorDetailsLeftOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetastasisDetails1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResidualDiseaseDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExamNodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfilePathologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcedureUsedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcedureSoftTissueUsedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcedureMandibleUsedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcedureDraftAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSkinHairExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBeSensSignOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBeMotPowerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBeMovRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBeDeformityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBeTendernessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBeSwellingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUroTumorExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGyneTumorExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFemaleGenitaliaExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaleGenitaliaExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerRectalExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrimaryTumorGastroOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAscitesExaminationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPercussionAscitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTumorDetailsRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCVSDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCVSInspectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCVSAuscultationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThoracicTumorExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAbdomenInspectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAbdomenPalpationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClinicalEventHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistinctClinicalEventDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistologyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcedureNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBMAReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JCOutsideTreatmentReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CLINICAL_DIAGNOSIS_DETAILSOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JC_DiagnMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JC_PriSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JC_PriHistologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JC_StageGrouppingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JC_ICD9OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JC_RadicalTreatmentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JC_RadicalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JC_PalliativeTreatmentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JC_PalliativeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ClinicalNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ReferralsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ClinicalDiagnosisOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PreventiveOncologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_REF_CLINDIS_MGMTPLANOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AttendanceCounsellingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ToabccoCessationCounsellingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_RemarksDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AddendumDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_PAE_No_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_PAE_No_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Eval_AnaesthetistOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Pae_ExaminationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_otadviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Anesthesia_ProcNo_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Anesthesia_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Ane_Patient_admit_DtlOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Surgical_ProcNo_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Other_Surgical_ProcNo_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Surgical_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Other_Surgical_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_AnesthProcNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_OTImage_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_OTTINOPFND_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RECON_SURGERY_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Procedure_SURGERY_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_FindSubsiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_FindDefectOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ReProceduresOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ROIS_CourseNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ROIS_PhaseNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ROIS_PlanNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Plan_ROISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_TeleTheradetOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Unit_NameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Unit_Name2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Plan1_ROISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Energy_ROISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Energy1_ROISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Beam_ROISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Beam1_ROISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BeamWed_ROISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BeamWed1_ROISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BeamPlan_ROISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BeamPlan1_ROISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ROTPRDOS_MOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ROTPDOS_M1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ROTPRDOS_DOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyNumber_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyCountIntraCavitaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_IntraCavitary_ROBTINTDETOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_IntraCavitary_ROBTINCPLNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyIntraCavitary_SCHNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyIntraCavitary_OTTSRGRECNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyIntraCavitary_REQN_TYPEOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyIntraCavitary_ROBTREQSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyIntraCavitary_ROBTOTNOTEOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyIntraCavitary_ROBTINTDETOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyCountInterstitialOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Interstitial_ROBTITSDLSOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Interstitial_ROBTISPLNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyInterstitial_SCHNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyInterstitial_OTTSRGRECNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyInterstitial_REQN_TYPEOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyInterstitial_ROBTOTNOTEOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyInterstitial_ROBTOTNOTE_DtlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyInterstitial_ROBTITSDLSOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachyCountSurfaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Surface_ROBTSADLSOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Surface_ROBTSAPLNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachySurface_SCHNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachySurface_OTTSRGRECNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachySurface_REQN_TYPEOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachySurface_ROBTOTNOTEOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachySurface_ROBTOTNOTE_DtlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BrachySurface_ROBTSADLSOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Brachy_HDR_LDROperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_BedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PrimSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CISLIBctdiagnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RadioNumber_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_JC_NoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CPLAN_NoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_JC_ParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CPLAN_ParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetmtproinfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CycleMTCYCLEDTLOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_medTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_DistDrugOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_MTDistDetOperationCompleted;
        
        private System.Threading.SendOrPostCallback MTDistDet_detOperationCompleted;
        
        private System.Threading.SendOrPostCallback MTDistDet_daydetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVIEWChemOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ToxicityJCNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Follow_upOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Follow_up_diedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Follow_up_recordOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Data_VW_WEBCISCOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Data_wipatdtlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Data_wipatdtlsOnINTERVNTNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Data_wiprscomOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Data_WIPITSSUEOperationCompleted;
        
        private System.Threading.SendOrPostCallback getemrVerifyOTPAndCaptchaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getemrOTPCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_IncrementOtpCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ResetOtpCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CheckCaseNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientContactDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAndUpdatePasswordRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseLoginDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPasswordRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogPatientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogPatientInfoByWebEMROperationCompleted;
        
        private System.Threading.SendOrPostCallback executeSQLDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback executeSQLDS1OperationCompleted;
        
        private System.Threading.SendOrPostCallback executeSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_BE_TendernessOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_BE_DeformityOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_BE_MovRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_BE_MotorPowerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_BE_SensationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ScanReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AllRequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DISLIB_RequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_RequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_StaffRequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_EmployeeDtlOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ServiceDescOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Addendum_DOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Addendum_BFOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Addendum_CYOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Addendum_FAOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Addendum_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_RSCBCOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_RSCBC2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DmulProceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Radiology_AllRequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_Radiology_RequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_NuclMed_AllRequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_NuclMed_ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_NuclMed_RequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AllLab_RequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_LabRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Surgical_AllRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_SurgicalRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CytologyRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_CytologyRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CytoRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_CytoRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_FNACRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_FNACRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_BIOChemRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_BIOChemRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_TumourRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_TumourRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_MicroBioRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_MicroBioRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AllRequisition_RptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AllRequisition_Rpt_dTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AllRequisition_Report_DtlOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AllRequisition_MolecuLABOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DFReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_RTIMELOGOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CYTOGREPRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DFNREPORTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMPROCEDUROperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMPROCEDUR_ELTESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMBCCOMMOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DHEMCYTO1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DHEMCPDETOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_HINTERFACEOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DHEMCBCDETOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_REPORTHLF1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_REPORTHLF1_ObserTypewiseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_HINTERFACE_MachineNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_REPORTHLLFOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DCBCREPAOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DBMAREPORTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DBMASUBREPOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DHBFREPORTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DIMBIOCHELOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DIMBIOCHE1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMYCOBACTEOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_MICROPROCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMOPRISMEROperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMSPONANTIOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMBAANTIOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMBAANTI_ANTIBIOTICOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMBSEMCMOOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_MICRO_TESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_dmycobacteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMBSEMCMO_ResOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMUREOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DMSREOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_HaematoOncologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_HaematoOncologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_HaematoPathologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_HaematoPathologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_MedicalOncologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_MedicalOncologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CardiologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_CardiologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_EndoscopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Count_EndoscopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_RadiologyReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_RadiologyRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_NuclearReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_NuclearRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_sPathologyReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_sPathologyRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CytologyReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CytologyRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CytogeneticsReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CytogeneticsRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DISIMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DEDREPORTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DECREPORTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DSTREPORTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ECCHOREPOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_DPFREPORTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_MOLECULABOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_FNACReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_FNACRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_BioChemReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_BioChemRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_TumorReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_TumorRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_MicroBiologyReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_MicroBiologyRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CardiologyReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CardiologyRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_EndoscopyReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_EndoscopyRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_MedOncologyReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_MicrobiologyReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AllLabReqRptOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AllLabReqRpt_DtlOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JointClinicNoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JointClinic_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JCRequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JCInvestigations_ReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JCInvestReview_ReqwiseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_JCInvest_OutsideTMHOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Emr_Marital_StatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Emr_EducationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Emr_OccupationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Emr_NationalityOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Emr_ReligionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Emr_Mother_TongueOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Emr_PatientLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Emr_PatientLogin2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Emr_PatientLogin3OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_LastPatientVisitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_PatientVisitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Emr_PatientDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_DMGRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_UserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback emr_Update_PasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_emrLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PatientAddressDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PatientTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PatientPersonalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PatientDMGDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_WardNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_WardCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AdminDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_BIOHazardOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PreviousRegNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_EmpBasInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_EmpLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_GENCONSENTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CONSTYPEOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ConsentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AdmissionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_DischargeSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_DiagnosisDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_Significant_InvestigationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_RISLIB_RequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_Surgery_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_OT_THREGOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_OT_THREGCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_OT_TSRGRECNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_External_BeamTherapyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_Brachy_TherapyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_ChemotherapyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_Therapeutic_EndoscopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_Other_MedicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_Other_ProceduresOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_IV_FluidsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_Blood_TransfusionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_Medical_AdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_Other_AdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Patient_Significant_New_InvestigationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Clinical_EvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Clinical_Evaluation_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_History_ExamNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_History_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ComplaintsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_History_ExaminationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_AssessmentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Assessment_History_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Assessment_History_DtlOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Assessment_History_ComplaintsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Symptom_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Diagnosis_StatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Diagnosis_MethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Diagnosis_InvestigationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Intervention_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Surgery_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ExternalRT_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Brachytherapy_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Chemotherapy_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Medical_HistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Allergies_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Manstrual_historyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Obstesteric_historyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Contraceptive_historyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Harmone_historyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Env_Occup_historyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Family_historyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_LifeStyle_historyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PrevCancer_historyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ServiceUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_SeenByDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_General_Examination_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Examination_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Pre_Malignant_ConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ConsciousnessOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Other_Higher_FunctionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Cranial_NervesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_GaitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Sensory_SystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Motor_SystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Muscle_Group_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_ReflexesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Cerebellar_SignsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_EndocrinopathiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Neurocutaneous_OtherSyndromesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CSF_DiversionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Meningeal_IrritationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Neurological_PerformanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_EyeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_External_ExaminationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Internal_ExaminationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Head_NeckOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Mouth_Oral_CavityOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Jaw_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Neck_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Tumour_SpecificOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_TNMStageOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Systemic_ExaminationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Tumour_Specific_ExaminationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Tumour_Details_LeftOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Tumour_Details_RightOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_CVSRSOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Inspection_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Asculation_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_TS_ThoracicOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PerAbdomen_InspectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PerAbdomen_PalpationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PerAbdomen_Percussion_AsculationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PerAbdomen_AscitisOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PerAbdomen_TSGastroOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_PerRectal_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Male_GenitaliaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_Female_GenitaliaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_TumorSpecific_GynaecologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_TumorSpecific_UrologyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_SystemicExaminationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_emr_BE_SwellingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebEmrService() {
            this.Url = global::DischargeCommit.Properties.Settings.Default.DischargeCommit_Webservice1_WebEmrService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDistinctMediTypesCompletedEventHandler GetDistinctMediTypesCompleted;
        
        /// <remarks/>
        public event GetDistinctTotalDoseCompletedEventHandler GetDistinctTotalDoseCompleted;
        
        /// <remarks/>
        public event GetDaywiseDrugDetailsCompletedEventHandler GetDaywiseDrugDetailsCompleted;
        
        /// <remarks/>
        public event GetDistinctCycleDaysCompletedEventHandler GetDistinctCycleDaysCompleted;
        
        /// <remarks/>
        public event GetDayPlanWithDateCompletedEventHandler GetDayPlanWithDateCompleted;
        
        /// <remarks/>
        public event GetProtocolInfoCompletedEventHandler GetProtocolInfoCompleted;
        
        /// <remarks/>
        public event GetRadiationDoseDetailsCompletedEventHandler GetRadiationDoseDetailsCompleted;
        
        /// <remarks/>
        public event GetRadiationPlanEngineeringCompletedEventHandler GetRadiationPlanEngineeringCompleted;
        
        /// <remarks/>
        public event GetRadiationBeamWedgeCompletedEventHandler GetRadiationBeamWedgeCompleted;
        
        /// <remarks/>
        public event GetRadiationDosimetryDetailsCompletedEventHandler GetRadiationDosimetryDetailsCompleted;
        
        /// <remarks/>
        public event GetRadiationPlanDetails2CompletedEventHandler GetRadiationPlanDetails2Completed;
        
        /// <remarks/>
        public event GetBeamWedgeDetails2CompletedEventHandler GetBeamWedgeDetails2Completed;
        
        /// <remarks/>
        public event GetPhysicsCalculationMasterCompletedEventHandler GetPhysicsCalculationMasterCompleted;
        
        /// <remarks/>
        public event GetPhysicsCalculationDetailCompletedEventHandler GetPhysicsCalculationDetailCompleted;
        
        /// <remarks/>
        public event GetPhysicsCalculationMain2CompletedEventHandler GetPhysicsCalculationMain2Completed;
        
        /// <remarks/>
        public event GetPhysicsCalculationDetail2CompletedEventHandler GetPhysicsCalculationDetail2Completed;
        
        /// <remarks/>
        public event GetRadiationTreatmentMaster1CompletedEventHandler GetRadiationTreatmentMaster1Completed;
        
        /// <remarks/>
        public event GetEMRTreatmentDetailsCompletedEventHandler GetEMRTreatmentDetailsCompleted;
        
        /// <remarks/>
        public event GetRotPlanCompletedEventHandler GetRotPlanCompleted;
        
        /// <remarks/>
        public event GetRomdmgdocCompletedEventHandler GetRomdmgdocCompleted;
        
        /// <remarks/>
        public event GetRomdmguntCompletedEventHandler GetRomdmguntCompleted;
        
        /// <remarks/>
        public event GetTreatmentMasterDataCompletedEventHandler GetTreatmentMasterDataCompleted;
        
        /// <remarks/>
        public event GetSurgeryRecordCompletedEventHandler GetSurgeryRecordCompleted;
        
        /// <remarks/>
        public event GetSurgeryHeaderRecordCompletedEventHandler GetSurgeryHeaderRecordCompleted;
        
        /// <remarks/>
        public event GetRadiationTreatmentDetailCompletedEventHandler GetRadiationTreatmentDetailCompleted;
        
        /// <remarks/>
        public event GetRadiationTreatmentDetail1CompletedEventHandler GetRadiationTreatmentDetail1Completed;
        
        /// <remarks/>
        public event GetAllCPlanNumbersCompletedEventHandler GetAllCPlanNumbersCompleted;
        
        /// <remarks/>
        public event GetROTASSESSMCompletedEventHandler GetROTASSESSMCompleted;
        
        /// <remarks/>
        public event GetROTAS_REACCompletedEventHandler GetROTAS_REACCompleted;
        
        /// <remarks/>
        public event GetROTCLAUDITCompletedEventHandler GetROTCLAUDITCompleted;
        
        /// <remarks/>
        public event GetCTDiagnsCompletedEventHandler GetCTDiagnsCompleted;
        
        /// <remarks/>
        public event GetCompletedBrachyNosCompletedEventHandler GetCompletedBrachyNosCompleted;
        
        /// <remarks/>
        public event GetROTTREAT_DSummaryCompletedEventHandler GetROTTREAT_DSummaryCompleted;
        
        /// <remarks/>
        public event GetROTTREAT_MCompletedEventHandler GetROTTREAT_MCompleted;
        
        /// <remarks/>
        public event GetROTPLANCompletedEventHandler GetROTPLANCompleted;
        
        /// <remarks/>
        public event GetROTBEAMCompletedEventHandler GetROTBEAMCompleted;
        
        /// <remarks/>
        public event GetROMDMGDOCCompletedEventHandler GetROMDMGDOCCompleted;
        
        /// <remarks/>
        public event GetROMDMGUNTCompletedEventHandler GetROMDMGUNTCompleted;
        
        /// <remarks/>
        public event GetROTPLANENGCompletedEventHandler GetROTPLANENGCompleted;
        
        /// <remarks/>
        public event GetROTTREAT_PhICompletedEventHandler GetROTTREAT_PhICompleted;
        
        /// <remarks/>
        public event GetROTTREAT_PhIICompletedEventHandler GetROTTREAT_PhIICompleted;
        
        /// <remarks/>
        public event GetROTTREAT_PhIIICompletedEventHandler GetROTTREAT_PhIIICompleted;
        
        /// <remarks/>
        public event GetROTAS_REAC1CompletedEventHandler GetROTAS_REAC1Completed;
        
        /// <remarks/>
        public event GetMTDistDetCompletedEventHandler GetMTDistDetCompleted;
        
        /// <remarks/>
        public event GetMedTypesCompletedEventHandler GetMedTypesCompleted;
        
        /// <remarks/>
        public event GetAssessmentDataCompletedEventHandler GetAssessmentDataCompleted;
        
        /// <remarks/>
        public event DeleteTTTRTExceptIndex4CompletedEventHandler DeleteTTTRTExceptIndex4Completed;
        
        /// <remarks/>
        public event InsertIntoTTTRTCompletedEventHandler InsertIntoTTTRTCompleted;
        
        /// <remarks/>
        public event InsertAssessmentIntoTTTRTCompletedEventHandler InsertAssessmentIntoTTTRTCompleted;
        
        /// <remarks/>
        public event InsertClinicalAuditIntoTTTRTCompletedEventHandler InsertClinicalAuditIntoTTTRTCompleted;
        
        /// <remarks/>
        public event GetROTTREAT_DCompletedEventHandler GetROTTREAT_DCompleted;
        
        /// <remarks/>
        public event GetROTASSESSM1CompletedEventHandler GetROTASSESSM1Completed;
        
        /// <remarks/>
        public event GetROTCLAUDIT1CompletedEventHandler GetROTCLAUDIT1Completed;
        
        /// <remarks/>
        public event GetCPlansCompletedEventHandler GetCPlansCompleted;
        
        /// <remarks/>
        public event GetJCNumbersCompletedEventHandler GetJCNumbersCompleted;
        
        /// <remarks/>
        public event GetCPlanListByJCNoCompletedEventHandler GetCPlanListByJCNoCompleted;
        
        /// <remarks/>
        public event GetTreatmentDateFromMTRCHEDRGCompletedEventHandler GetTreatmentDateFromMTRCHEDRGCompleted;
        
        /// <remarks/>
        public event GetDistinctDrugNamesByMediTypeCompletedEventHandler GetDistinctDrugNamesByMediTypeCompleted;
        
        /// <remarks/>
        public event GetCPlanByCaseAndJCNoCompletedEventHandler GetCPlanByCaseAndJCNoCompleted;
        
        /// <remarks/>
        public event GetJCNoByCaseNoCompletedEventHandler GetJCNoByCaseNoCompleted;
        
        /// <remarks/>
        public event GetMTProInfoCompletedEventHandler GetMTProInfoCompleted;
        
        /// <remarks/>
        public event GetAdverseEventCompletedEventHandler GetAdverseEventCompleted;
        
        /// <remarks/>
        public event GetSideEffectsCompletedEventHandler GetSideEffectsCompleted;
        
        /// <remarks/>
        public event GetResponseEvaluationCompletedEventHandler GetResponseEvaluationCompleted;
        
        /// <remarks/>
        public event GetChemoDrugDetailsCompletedEventHandler GetChemoDrugDetailsCompleted;
        
        /// <remarks/>
        public event GetProtocolInfo1CompletedEventHandler GetProtocolInfo1Completed;
        
        /// <remarks/>
        public event GetDistinctDrugNamesCompletedEventHandler GetDistinctDrugNamesCompleted;
        
        /// <remarks/>
        public event IsLoginValidCompletedEventHandler IsLoginValidCompleted;
        
        /// <remarks/>
        public event CommitDischargeSummaryCompletedEventHandler CommitDischargeSummaryCompleted;
        
        /// <remarks/>
        public event SearchDischargeSummaryCompletedEventHandler SearchDischargeSummaryCompleted;
        
        /// <remarks/>
        public event GetPatientInfoCompletedEventHandler GetPatientInfoCompleted;
        
        /// <remarks/>
        public event GetHistExamDtTm2CompletedEventHandler GetHistExamDtTm2Completed;
        
        /// <remarks/>
        public event GetRadiologyRequisitionCompletedEventHandler GetRadiologyRequisitionCompleted;
        
        /// <remarks/>
        public event GetDSiteDetailsCompletedEventHandler GetDSiteDetailsCompleted;
        
        /// <remarks/>
        public event GetDiagMethodCompletedEventHandler GetDiagMethodCompleted;
        
        /// <remarks/>
        public event GetMA101CompletedEventHandler GetMA101Completed;
        
        /// <remarks/>
        public event GetRepWritersCompletedEventHandler GetRepWritersCompleted;
        
        /// <remarks/>
        public event GetRepWritersFCompletedEventHandler GetRepWritersFCompleted;
        
        /// <remarks/>
        public event GetMycobacteriaDataCompletedEventHandler GetMycobacteriaDataCompleted;
        
        /// <remarks/>
        public event GetUserDetailsCompletedEventHandler GetUserDetailsCompleted;
        
        /// <remarks/>
        public event GetStagingGroupCompletedEventHandler GetStagingGroupCompleted;
        
        /// <remarks/>
        public event GetTNMStageCompletedEventHandler GetTNMStageCompleted;
        
        /// <remarks/>
        public event GetTestReportCompletedEventHandler GetTestReportCompleted;
        
        /// <remarks/>
        public event GetProcedureName1CompletedEventHandler GetProcedureName1Completed;
        
        /// <remarks/>
        public event GetMycrobacteriologyReportCompletedEventHandler GetMycrobacteriologyReportCompleted;
        
        /// <remarks/>
        public event GetMycrobaDataCompletedEventHandler GetMycrobaDataCompleted;
        
        /// <remarks/>
        public event GetAntibioticDataCompletedEventHandler GetAntibioticDataCompleted;
        
        /// <remarks/>
        public event GetSpecimenDataCompletedEventHandler GetSpecimenDataCompleted;
        
        /// <remarks/>
        public event GetNonNullAntibioticDataCompletedEventHandler GetNonNullAntibioticDataCompleted;
        
        /// <remarks/>
        public event GetReportWritersCompletedEventHandler GetReportWritersCompleted;
        
        /// <remarks/>
        public event GetReportWritersByUsernameCompletedEventHandler GetReportWritersByUsernameCompleted;
        
        /// <remarks/>
        public event GetProcedureDetailsCompletedEventHandler GetProcedureDetailsCompleted;
        
        /// <remarks/>
        public event GetDmbcCommCompletedEventHandler GetDmbcCommCompleted;
        
        /// <remarks/>
        public event GetDRequisitnCompletedEventHandler GetDRequisitnCompleted;
        
        /// <remarks/>
        public event GetDCYReportCompletedEventHandler GetDCYReportCompleted;
        
        /// <remarks/>
        public event GetDFReportCompletedEventHandler GetDFReportCompleted;
        
        /// <remarks/>
        public event GetDHEMCYTO1ReportCompletedEventHandler GetDHEMCYTO1ReportCompleted;
        
        /// <remarks/>
        public event GetCMServices1CompletedEventHandler GetCMServices1Completed;
        
        /// <remarks/>
        public event GetWIFMCOEXCompletedEventHandler GetWIFMCOEXCompleted;
        
        /// <remarks/>
        public event GetWIPRSNLHSCompletedEventHandler GetWIPRSNLHSCompleted;
        
        /// <remarks/>
        public event GetDHEMCPDETCompletedEventHandler GetDHEMCPDETCompleted;
        
        /// <remarks/>
        public event GetHINTERFACECompletedEventHandler GetHINTERFACECompleted;
        
        /// <remarks/>
        public event GetReportHLF1CompletedEventHandler GetReportHLF1Completed;
        
        /// <remarks/>
        public event GetReportHLF1_RBCCompletedEventHandler GetReportHLF1_RBCCompleted;
        
        /// <remarks/>
        public event GetReportHLF1_WBCCompletedEventHandler GetReportHLF1_WBCCompleted;
        
        /// <remarks/>
        public event GetReportHLF1_PlattCompletedEventHandler GetReportHLF1_PlattCompleted;
        
        /// <remarks/>
        public event GetWPSTNCPDTCompletedEventHandler GetWPSTNCPDTCompleted;
        
        /// <remarks/>
        public event GetDHEMCBCDETCompletedEventHandler GetDHEMCBCDETCompleted;
        
        /// <remarks/>
        public event GetReportHLLFCompletedEventHandler GetReportHLLFCompleted;
        
        /// <remarks/>
        public event GetMachineNoCompletedEventHandler GetMachineNoCompleted;
        
        /// <remarks/>
        public event GetPValueCompletedEventHandler GetPValueCompleted;
        
        /// <remarks/>
        public event GetDCBCREP1CompletedEventHandler GetDCBCREP1Completed;
        
        /// <remarks/>
        public event GetDCBCREPACompletedEventHandler GetDCBCREPACompleted;
        
        /// <remarks/>
        public event GetTA101CompletedEventHandler GetTA101Completed;
        
        /// <remarks/>
        public event GetDCBCSMREP1CompletedEventHandler GetDCBCSMREP1Completed;
        
        /// <remarks/>
        public event GetDBMAMyeloidCompletedEventHandler GetDBMAMyeloidCompleted;
        
        /// <remarks/>
        public event GetDBMABCellCompletedEventHandler GetDBMABCellCompleted;
        
        /// <remarks/>
        public event GetDBMATKCellCompletedEventHandler GetDBMATKCellCompleted;
        
        /// <remarks/>
        public event GetDBMAOthersCompletedEventHandler GetDBMAOthersCompleted;
        
        /// <remarks/>
        public event GetDRequisitn1CompletedEventHandler GetDRequisitn1Completed;
        
        /// <remarks/>
        public event GetDBMASubRepCompletedEventHandler GetDBMASubRepCompleted;
        
        /// <remarks/>
        public event GetTestReport1CompletedEventHandler GetTestReport1Completed;
        
        /// <remarks/>
        public event GetWILExlbrstCompletedEventHandler GetWILExlbrstCompleted;
        
        /// <remarks/>
        public event GetWILExrbrstCompletedEventHandler GetWILExrbrstCompleted;
        
        /// <remarks/>
        public event GetWISysclnCompletedEventHandler GetWISysclnCompleted;
        
        /// <remarks/>
        public event GetWPSTNCLFTCompletedEventHandler GetWPSTNCLFTCompleted;
        
        /// <remarks/>
        public event GetWPSTNCCLFDCompletedEventHandler GetWPSTNCCLFDCompleted;
        
        /// <remarks/>
        public event GetWADJPATDTSCompletedEventHandler GetWADJPATDTSCompleted;
        
        /// <remarks/>
        public event GetWADJCHMOCompletedEventHandler GetWADJCHMOCompleted;
        
        /// <remarks/>
        public event GetWADJRADCompletedEventHandler GetWADJRADCompleted;
        
        /// <remarks/>
        public event GetWADJHEMOCompletedEventHandler GetWADJHEMOCompleted;
        
        /// <remarks/>
        public event GetWADJTARGTCompletedEventHandler GetWADJTARGTCompleted;
        
        /// <remarks/>
        public event GetWADJBISPCompletedEventHandler GetWADJBISPCompleted;
        
        /// <remarks/>
        public event GetWJCPatDtlsCompletedEventHandler GetWJCPatDtlsCompleted;
        
        /// <remarks/>
        public event GetClinNoteCompletedEventHandler GetClinNoteCompleted;
        
        /// <remarks/>
        public event GetWPSTSRGLFTCompletedEventHandler GetWPSTSRGLFTCompleted;
        
        /// <remarks/>
        public event GetWPSTSRGRGTCompletedEventHandler GetWPSTSRGRGTCompleted;
        
        /// <remarks/>
        public event GetWPSTSRGPDTCompletedEventHandler GetWPSTSRGPDTCompleted;
        
        /// <remarks/>
        public event GetWIPATDTLSCompletedEventHandler GetWIPATDTLSCompleted;
        
        /// <remarks/>
        public event GetWISURGYLFTCompletedEventHandler GetWISURGYLFTCompleted;
        
        /// <remarks/>
        public event GetWISURGYRGTCompletedEventHandler GetWISURGYRGTCompleted;
        
        /// <remarks/>
        public event GetWIADJCHMEOCompletedEventHandler GetWIADJCHMEOCompleted;
        
        /// <remarks/>
        public event GetWIADJTTRTCompletedEventHandler GetWIADJTTRTCompleted;
        
        /// <remarks/>
        public event GetWIPRSCOMCompletedEventHandler GetWIPRSCOMCompleted;
        
        /// <remarks/>
        public event GetWIPATDTLS_INTERVNTNCompletedEventHandler GetWIPATDTLS_INTERVNTNCompleted;
        
        /// <remarks/>
        public event GetWIPITSSUECompletedEventHandler GetWIPITSSUECompleted;
        
        /// <remarks/>
        public event GetWITDIMGCompletedEventHandler GetWITDIMGCompleted;
        
        /// <remarks/>
        public event GetWIPICNEOCompletedEventHandler GetWIPICNEOCompleted;
        
        /// <remarks/>
        public event GetWIPICLRLRCompletedEventHandler GetWIPICLRLRCompleted;
        
        /// <remarks/>
        public event GetWIPALLCHMOCompletedEventHandler GetWIPALLCHMOCompleted;
        
        /// <remarks/>
        public event GetWIPTTTCompletedEventHandler GetWIPTTTCompleted;
        
        /// <remarks/>
        public event GetWIPTHTSRTCompletedEventHandler GetWIPTHTSRTCompleted;
        
        /// <remarks/>
        public event GetDrugName2CompletedEventHandler GetDrugName2Completed;
        
        /// <remarks/>
        public event AppendDrugNameCompletedEventHandler AppendDrugNameCompleted;
        
        /// <remarks/>
        public event GetDFNReportCompletedEventHandler GetDFNReportCompleted;
        
        /// <remarks/>
        public event GetPMConditionsCompletedEventHandler GetPMConditionsCompleted;
        
        /// <remarks/>
        public event GetConsciousDataCompletedEventHandler GetConsciousDataCompleted;
        
        /// <remarks/>
        public event GetOHFDataCompletedEventHandler GetOHFDataCompleted;
        
        /// <remarks/>
        public event GetFollowUpCompletedEventHandler GetFollowUpCompleted;
        
        /// <remarks/>
        public event CheckDeathStatusCompletedEventHandler CheckDeathStatusCompleted;
        
        /// <remarks/>
        public event GetPrimaryDiseaseDescriptionCompletedEventHandler GetPrimaryDiseaseDescriptionCompleted;
        
        /// <remarks/>
        public event GetAddressDetailsCompletedEventHandler GetAddressDetailsCompleted;
        
        /// <remarks/>
        public event GetNewRegDataCompletedEventHandler GetNewRegDataCompleted;
        
        /// <remarks/>
        public event GetEmployeeTitleCompletedEventHandler GetEmployeeTitleCompleted;
        
        /// <remarks/>
        public event GetNewRequisitionDataCompletedEventHandler GetNewRequisitionDataCompleted;
        
        /// <remarks/>
        public event GetRequisitionDataCompletedEventHandler GetRequisitionDataCompleted;
        
        /// <remarks/>
        public event GetAllSurgicalListCompletedEventHandler GetAllSurgicalListCompleted;
        
        /// <remarks/>
        public event GetPAE_No_ListCompletedEventHandler GetPAE_No_ListCompleted;
        
        /// <remarks/>
        public event Get_Anesthesia_ProcNo_List1CompletedEventHandler Get_Anesthesia_ProcNo_List1Completed;
        
        /// <remarks/>
        public event GetSurgicalListCompletedEventHandler GetSurgicalListCompleted;
        
        /// <remarks/>
        public event GetPrescriptionMasterCompletedEventHandler GetPrescriptionMasterCompleted;
        
        /// <remarks/>
        public event GetPrescriptionDetailAmountCompletedEventHandler GetPrescriptionDetailAmountCompleted;
        
        /// <remarks/>
        public event GetPrescriptionMasterByCaseNoCompletedEventHandler GetPrescriptionMasterByCaseNoCompleted;
        
        /// <remarks/>
        public event GetPrescriptionDetailsByPresIdCompletedEventHandler GetPrescriptionDetailsByPresIdCompleted;
        
        /// <remarks/>
        public event GetPrescriptionMasterByIdCompletedEventHandler GetPrescriptionMasterByIdCompleted;
        
        /// <remarks/>
        public event GetPatientDetailsByCaseNoCompletedEventHandler GetPatientDetailsByCaseNoCompleted;
        
        /// <remarks/>
        public event GetPrescriptionDetailByIdCompletedEventHandler GetPrescriptionDetailByIdCompleted;
        
        /// <remarks/>
        public event GetConcessionByPrescriptionIdCompletedEventHandler GetConcessionByPrescriptionIdCompleted;
        
        /// <remarks/>
        public event GetPrescriptionMasterById1CompletedEventHandler GetPrescriptionMasterById1Completed;
        
        /// <remarks/>
        public event GetTA101DetailsCompletedEventHandler GetTA101DetailsCompleted;
        
        /// <remarks/>
        public event GetPrescriptionDetailCompletedEventHandler GetPrescriptionDetailCompleted;
        
        /// <remarks/>
        public event GetConcessionDataCompletedEventHandler GetConcessionDataCompleted;
        
        /// <remarks/>
        public event GetNameCompletedEventHandler GetNameCompleted;
        
        /// <remarks/>
        public event GetPresByCompletedEventHandler GetPresByCompleted;
        
        /// <remarks/>
        public event Get_RadioReferral_By_CaseNoCompletedEventHandler Get_RadioReferral_By_CaseNoCompleted;
        
        /// <remarks/>
        public event Get_RadioReferral_By_CaseNo_ACTCompletedEventHandler Get_RadioReferral_By_CaseNo_ACTCompleted;
        
        /// <remarks/>
        public event GetDistinctJCNoCompletedEventHandler GetDistinctJCNoCompleted;
        
        /// <remarks/>
        public event GetChemoReferralCompletedEventHandler GetChemoReferralCompleted;
        
        /// <remarks/>
        public event GetChemoReferralactCompletedEventHandler GetChemoReferralactCompleted;
        
        /// <remarks/>
        public event GetOTProLatCompletedEventHandler GetOTProLatCompleted;
        
        /// <remarks/>
        public event GetAnesProcCompletedEventHandler GetAnesProcCompleted;
        
        /// <remarks/>
        public event GetOTInopFindingsCompletedEventHandler GetOTInopFindingsCompleted;
        
        /// <remarks/>
        public event GetOTReSurgeryDetailsCompletedEventHandler GetOTReSurgeryDetailsCompleted;
        
        /// <remarks/>
        public event GetOTSubSiterDetailsCompletedEventHandler GetOTSubSiterDetailsCompleted;
        
        /// <remarks/>
        public event GetOTReprocesDetailsCompletedEventHandler GetOTReprocesDetailsCompleted;
        
        /// <remarks/>
        public event GetMaxCycleNoFromMTCYCLEDTLCompletedEventHandler GetMaxCycleNoFromMTCYCLEDTLCompleted;
        
        /// <remarks/>
        public event GetMTDistDetDetailsCompletedEventHandler GetMTDistDetDetailsCompleted;
        
        /// <remarks/>
        public event GetCycleDrugDayDetailsCompletedEventHandler GetCycleDrugDayDetailsCompleted;
        
        /// <remarks/>
        public event executespqueryCompletedEventHandler executespqueryCompleted;
        
        /// <remarks/>
        public event GetUserLoginDetailsCompletedEventHandler GetUserLoginDetailsCompleted;
        
        /// <remarks/>
        public event GetUserLoginDetails1CompletedEventHandler GetUserLoginDetails1Completed;
        
        /// <remarks/>
        public event UpdateUserPasswordCompletedEventHandler UpdateUserPasswordCompleted;
        
        /// <remarks/>
        public event GetRequisitionDetailsCompletedEventHandler GetRequisitionDetailsCompleted;
        
        /// <remarks/>
        public event GetCTJCINVRVWDetailsCompletedEventHandler GetCTJCINVRVWDetailsCompleted;
        
        /// <remarks/>
        public event GetRREQUISITNDetailsCompletedEventHandler GetRREQUISITNDetailsCompleted;
        
        /// <remarks/>
        public event GetHistoricalExamsCompletedEventHandler GetHistoricalExamsCompleted;
        
        /// <remarks/>
        public event GetCTHSTEXDTLByExamNoCompletedEventHandler GetCTHSTEXDTLByExamNoCompleted;
        
        /// <remarks/>
        public event GetHistExamDetailsCompletedEventHandler GetHistExamDetailsCompleted;
        
        /// <remarks/>
        public event GetCTCANCHISTCompletedEventHandler GetCTCANCHISTCompleted;
        
        /// <remarks/>
        public event GetCMSERVICESCompletedEventHandler GetCMSERVICESCompleted;
        
        /// <remarks/>
        public event GetEMPDTLSLFCompletedEventHandler GetEMPDTLSLFCompleted;
        
        /// <remarks/>
        public event GetCTMHSTCMPLCompletedEventHandler GetCTMHSTCMPLCompleted;
        
        /// <remarks/>
        public event GetCTMHSTCBSDCompletedEventHandler GetCTMHSTCBSDCompleted;
        
        /// <remarks/>
        public event GetCTMHSTCBSFCompletedEventHandler GetCTMHSTCBSFCompleted;
        
        /// <remarks/>
        public event GetCTMHSTCBSOCompletedEventHandler GetCTMHSTCBSOCompleted;
        
        /// <remarks/>
        public event GetCTMHSTCBSPCompletedEventHandler GetCTMHSTCBSPCompleted;
        
        /// <remarks/>
        public event GetCTMHSTCBSSCompletedEventHandler GetCTMHSTCBSSCompleted;
        
        /// <remarks/>
        public event GetDiagnosisDetailsCompletedEventHandler GetDiagnosisDetailsCompleted;
        
        /// <remarks/>
        public event GetDigStsValueCompletedEventHandler GetDigStsValueCompleted;
        
        /// <remarks/>
        public event GetDiagnosisDetails1CompletedEventHandler GetDiagnosisDetails1Completed;
        
        /// <remarks/>
        public event GetDiagnosisStatusCompletedEventHandler GetDiagnosisStatusCompleted;
        
        /// <remarks/>
        public event GetInterventionDetailsCompletedEventHandler GetInterventionDetailsCompleted;
        
        /// <remarks/>
        public event GetSurgeryDetailsCompletedEventHandler GetSurgeryDetailsCompleted;
        
        /// <remarks/>
        public event GetExternalRTDetailsCompletedEventHandler GetExternalRTDetailsCompleted;
        
        /// <remarks/>
        public event GetBrachytherapyDetailsCompletedEventHandler GetBrachytherapyDetailsCompleted;
        
        /// <remarks/>
        public event GetChemotherapyDetailsCompletedEventHandler GetChemotherapyDetailsCompleted;
        
        /// <remarks/>
        public event GetDrugNameCompletedEventHandler GetDrugNameCompleted;
        
        /// <remarks/>
        public event GetDrugName1CompletedEventHandler GetDrugName1Completed;
        
        /// <remarks/>
        public event GetMedicalHistoryCompletedEventHandler GetMedicalHistoryCompleted;
        
        /// <remarks/>
        public event GetAllergyDetailsCompletedEventHandler GetAllergyDetailsCompleted;
        
        /// <remarks/>
        public event GetMenstrualHistoryCompletedEventHandler GetMenstrualHistoryCompleted;
        
        /// <remarks/>
        public event GetObstetricHistoryCompletedEventHandler GetObstetricHistoryCompleted;
        
        /// <remarks/>
        public event GetContraceptiveHistoryCompletedEventHandler GetContraceptiveHistoryCompleted;
        
        /// <remarks/>
        public event GetHormoneTherapyHistoryCompletedEventHandler GetHormoneTherapyHistoryCompleted;
        
        /// <remarks/>
        public event GetEnvOccupationalHistoryCompletedEventHandler GetEnvOccupationalHistoryCompleted;
        
        /// <remarks/>
        public event GetFamilyHistoryCompletedEventHandler GetFamilyHistoryCompleted;
        
        /// <remarks/>
        public event GetLifeStyleCompletedEventHandler GetLifeStyleCompleted;
        
        /// <remarks/>
        public event GetCMServicesCompletedEventHandler GetCMServicesCompleted;
        
        /// <remarks/>
        public event GetHistExamDtTmCompletedEventHandler GetHistExamDtTmCompleted;
        
        /// <remarks/>
        public event GetCISReferralCompletedEventHandler GetCISReferralCompleted;
        
        /// <remarks/>
        public event GetPalliativeDetailsCompletedEventHandler GetPalliativeDetailsCompleted;
        
        /// <remarks/>
        public event GetPalliativeInfoCompletedEventHandler GetPalliativeInfoCompleted;
        
        /// <remarks/>
        public event GetRadicalDetailCompletedEventHandler GetRadicalDetailCompleted;
        
        /// <remarks/>
        public event GetRadicalCompletedEventHandler GetRadicalCompleted;
        
        /// <remarks/>
        public event GetDiagnosisDetails2CompletedEventHandler GetDiagnosisDetails2Completed;
        
        /// <remarks/>
        public event GetInvestigationOutReviewCompletedEventHandler GetInvestigationOutReviewCompleted;
        
        /// <remarks/>
        public event GetInvestigationOutCompletedEventHandler GetInvestigationOutCompleted;
        
        /// <remarks/>
        public event GetCTJCINVRVWCompletedEventHandler GetCTJCINVRVWCompleted;
        
        /// <remarks/>
        public event GetRREQUISITNCompletedEventHandler GetRREQUISITNCompleted;
        
        /// <remarks/>
        public event GetPREVCANCER_HISTORYCompletedEventHandler GetPREVCANCER_HISTORYCompleted;
        
        /// <remarks/>
        public event GetSurgeryAllCompletedEventHandler GetSurgeryAllCompleted;
        
        /// <remarks/>
        public event GetExternalRTCompletedEventHandler GetExternalRTCompleted;
        
        /// <remarks/>
        public event GetBrachytherapyCompletedEventHandler GetBrachytherapyCompleted;
        
        /// <remarks/>
        public event GetChemotherapyCompletedEventHandler GetChemotherapyCompleted;
        
        /// <remarks/>
        public event GetGeneralExamCompletedEventHandler GetGeneralExamCompleted;
        
        /// <remarks/>
        public event GetCTDiagnosisCompletedEventHandler GetCTDiagnosisCompleted;
        
        /// <remarks/>
        public event GetHistExamDtTm1CompletedEventHandler GetHistExamDtTm1Completed;
        
        /// <remarks/>
        public event GetJCNoCompletedEventHandler GetJCNoCompleted;
        
        /// <remarks/>
        public event GetClinicalNotesCompletedEventHandler GetClinicalNotesCompleted;
        
        /// <remarks/>
        public event GetAdditionalRemarksCompletedEventHandler GetAdditionalRemarksCompleted;
        
        /// <remarks/>
        public event GetCranialDetailsCompletedEventHandler GetCranialDetailsCompleted;
        
        /// <remarks/>
        public event GetGaitDetailsCompletedEventHandler GetGaitDetailsCompleted;
        
        /// <remarks/>
        public event GetSensoryDetailsCompletedEventHandler GetSensoryDetailsCompleted;
        
        /// <remarks/>
        public event GetMotorSystemDetailsCompletedEventHandler GetMotorSystemDetailsCompleted;
        
        /// <remarks/>
        public event GetMuscleDetailsCompletedEventHandler GetMuscleDetailsCompleted;
        
        /// <remarks/>
        public event GetReflexesDetailsCompletedEventHandler GetReflexesDetailsCompleted;
        
        /// <remarks/>
        public event GetCerebellarDetailsCompletedEventHandler GetCerebellarDetailsCompleted;
        
        /// <remarks/>
        public event GetEndocrineDetailsCompletedEventHandler GetEndocrineDetailsCompleted;
        
        /// <remarks/>
        public event GetRemarksCompletedEventHandler GetRemarksCompleted;
        
        /// <remarks/>
        public event GetPatientOutcomeCompletedEventHandler GetPatientOutcomeCompleted;
        
        /// <remarks/>
        public event GetClinicExtCompletedEventHandler GetClinicExtCompleted;
        
        /// <remarks/>
        public event GetAdvancedDiseaseCompletedEventHandler GetAdvancedDiseaseCompleted;
        
        /// <remarks/>
        public event GetRecurrentCancerCompletedEventHandler GetRecurrentCancerCompleted;
        
        /// <remarks/>
        public event GetNOSCompletedEventHandler GetNOSCompleted;
        
        /// <remarks/>
        public event GetCSFDCompletedEventHandler GetCSFDCompleted;
        
        /// <remarks/>
        public event GetMeningealCompletedEventHandler GetMeningealCompleted;
        
        /// <remarks/>
        public event GetNPSCompletedEventHandler GetNPSCompleted;
        
        /// <remarks/>
        public event GetEyesDetailsCompletedEventHandler GetEyesDetailsCompleted;
        
        /// <remarks/>
        public event GetExternalEyeExamCompletedEventHandler GetExternalEyeExamCompleted;
        
        /// <remarks/>
        public event GetInternalEyeExamCompletedEventHandler GetInternalEyeExamCompleted;
        
        /// <remarks/>
        public event GetHeadNeckDetailsCompletedEventHandler GetHeadNeckDetailsCompleted;
        
        /// <remarks/>
        public event GetMetastasisDetailsCompletedEventHandler GetMetastasisDetailsCompleted;
        
        /// <remarks/>
        public event GetMOCDetailsCompletedEventHandler GetMOCDetailsCompleted;
        
        /// <remarks/>
        public event GetJawDetailsCompletedEventHandler GetJawDetailsCompleted;
        
        /// <remarks/>
        public event GetNeckDetailsCompletedEventHandler GetNeckDetailsCompleted;
        
        /// <remarks/>
        public event GetTSHNDetailsCompletedEventHandler GetTSHNDetailsCompleted;
        
        /// <remarks/>
        public event GetSystemExamDetailsCompletedEventHandler GetSystemExamDetailsCompleted;
        
        /// <remarks/>
        public event GetTumorExamDetailsCompletedEventHandler GetTumorExamDetailsCompleted;
        
        /// <remarks/>
        public event GetTumorDetailsLeftCompletedEventHandler GetTumorDetailsLeftCompleted;
        
        /// <remarks/>
        public event GetMetastasisDetails1CompletedEventHandler GetMetastasisDetails1Completed;
        
        /// <remarks/>
        public event GetResidualDiseaseDetailsCompletedEventHandler GetResidualDiseaseDetailsCompleted;
        
        /// <remarks/>
        public event GetExamNodesCompletedEventHandler GetExamNodesCompleted;
        
        /// <remarks/>
        public event GetProfilePathologyCompletedEventHandler GetProfilePathologyCompleted;
        
        /// <remarks/>
        public event GetProcedureUsedCompletedEventHandler GetProcedureUsedCompleted;
        
        /// <remarks/>
        public event GetProcedureSoftTissueUsedCompletedEventHandler GetProcedureSoftTissueUsedCompleted;
        
        /// <remarks/>
        public event GetProcedureMandibleUsedCompletedEventHandler GetProcedureMandibleUsedCompleted;
        
        /// <remarks/>
        public event GetProcedureDraftAssessmentCompletedEventHandler GetProcedureDraftAssessmentCompleted;
        
        /// <remarks/>
        public event GetSkinHairExamCompletedEventHandler GetSkinHairExamCompleted;
        
        /// <remarks/>
        public event GetBeSensSignCompletedEventHandler GetBeSensSignCompleted;
        
        /// <remarks/>
        public event GetBeMotPowerCompletedEventHandler GetBeMotPowerCompleted;
        
        /// <remarks/>
        public event GetBeMovRangeCompletedEventHandler GetBeMovRangeCompleted;
        
        /// <remarks/>
        public event GetBeDeformityCompletedEventHandler GetBeDeformityCompleted;
        
        /// <remarks/>
        public event GetBeTendernessCompletedEventHandler GetBeTendernessCompleted;
        
        /// <remarks/>
        public event GetBeSwellingCompletedEventHandler GetBeSwellingCompleted;
        
        /// <remarks/>
        public event GetSystemExamCompletedEventHandler GetSystemExamCompleted;
        
        /// <remarks/>
        public event GetUroTumorExamCompletedEventHandler GetUroTumorExamCompleted;
        
        /// <remarks/>
        public event GetGyneTumorExamCompletedEventHandler GetGyneTumorExamCompleted;
        
        /// <remarks/>
        public event GetFemaleGenitaliaExamCompletedEventHandler GetFemaleGenitaliaExamCompleted;
        
        /// <remarks/>
        public event GetMaleGenitaliaExamCompletedEventHandler GetMaleGenitaliaExamCompleted;
        
        /// <remarks/>
        public event GetPerRectalExamCompletedEventHandler GetPerRectalExamCompleted;
        
        /// <remarks/>
        public event GetPrimaryTumorGastroCompletedEventHandler GetPrimaryTumorGastroCompleted;
        
        /// <remarks/>
        public event GetAscitesExaminationCompletedEventHandler GetAscitesExaminationCompleted;
        
        /// <remarks/>
        public event GetPercussionAscitesCompletedEventHandler GetPercussionAscitesCompleted;
        
        /// <remarks/>
        public event GetTumorDetailsRightCompletedEventHandler GetTumorDetailsRightCompleted;
        
        /// <remarks/>
        public event GetCVSDetailsCompletedEventHandler GetCVSDetailsCompleted;
        
        /// <remarks/>
        public event GetCVSInspectionCompletedEventHandler GetCVSInspectionCompleted;
        
        /// <remarks/>
        public event GetCVSAuscultationCompletedEventHandler GetCVSAuscultationCompleted;
        
        /// <remarks/>
        public event GetThoracicTumorExamCompletedEventHandler GetThoracicTumorExamCompleted;
        
        /// <remarks/>
        public event GetAbdomenInspectionCompletedEventHandler GetAbdomenInspectionCompleted;
        
        /// <remarks/>
        public event GetAbdomenPalpationCompletedEventHandler GetAbdomenPalpationCompleted;
        
        /// <remarks/>
        public event GetEmployeeDetailsCompletedEventHandler GetEmployeeDetailsCompleted;
        
        /// <remarks/>
        public event GetClinicalEventHistoryCompletedEventHandler GetClinicalEventHistoryCompleted;
        
        /// <remarks/>
        public event GetDistinctClinicalEventDatesCompletedEventHandler GetDistinctClinicalEventDatesCompleted;
        
        /// <remarks/>
        public event GetHistologyDataCompletedEventHandler GetHistologyDataCompleted;
        
        /// <remarks/>
        public event GetProcedureNameCompletedEventHandler GetProcedureNameCompleted;
        
        /// <remarks/>
        public event GetDBMAReportCompletedEventHandler GetDBMAReportCompleted;
        
        /// <remarks/>
        public event Get_emr_JCOutsideTreatmentReviewCompletedEventHandler Get_emr_JCOutsideTreatmentReviewCompleted;
        
        /// <remarks/>
        public event Get_emr_CLINICAL_DIAGNOSIS_DETAILSCompletedEventHandler Get_emr_CLINICAL_DIAGNOSIS_DETAILSCompleted;
        
        /// <remarks/>
        public event Get_emr_JC_DiagnMethodCompletedEventHandler Get_emr_JC_DiagnMethodCompleted;
        
        /// <remarks/>
        public event Get_emr_JC_PriSiteCompletedEventHandler Get_emr_JC_PriSiteCompleted;
        
        /// <remarks/>
        public event Get_emr_JC_PriHistologyCompletedEventHandler Get_emr_JC_PriHistologyCompleted;
        
        /// <remarks/>
        public event Get_emr_JC_StageGrouppingCompletedEventHandler Get_emr_JC_StageGrouppingCompleted;
        
        /// <remarks/>
        public event Get_emr_JC_ICD9CompletedEventHandler Get_emr_JC_ICD9Completed;
        
        /// <remarks/>
        public event Get_emr_JC_RadicalTreatmentDetailsCompletedEventHandler Get_emr_JC_RadicalTreatmentDetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_JC_RadicalDetailsCompletedEventHandler Get_emr_JC_RadicalDetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_JC_PalliativeTreatmentDetailsCompletedEventHandler Get_emr_JC_PalliativeTreatmentDetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_JC_PalliativeDetailsCompletedEventHandler Get_emr_JC_PalliativeDetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_ClinicalNoteCompletedEventHandler Get_emr_ClinicalNoteCompleted;
        
        /// <remarks/>
        public event Get_emr_ReferralsCompletedEventHandler Get_emr_ReferralsCompleted;
        
        /// <remarks/>
        public event Get_emr_ClinicalDiagnosisCompletedEventHandler Get_emr_ClinicalDiagnosisCompleted;
        
        /// <remarks/>
        public event Get_emr_PreventiveOncologyCompletedEventHandler Get_emr_PreventiveOncologyCompleted;
        
        /// <remarks/>
        public event Get_emr_REF_CLINDIS_MGMTPLANCompletedEventHandler Get_emr_REF_CLINDIS_MGMTPLANCompleted;
        
        /// <remarks/>
        public event Get_emr_AttendanceCounsellingCompletedEventHandler Get_emr_AttendanceCounsellingCompleted;
        
        /// <remarks/>
        public event Get_emr_ToabccoCessationCounsellingCompletedEventHandler Get_emr_ToabccoCessationCounsellingCompleted;
        
        /// <remarks/>
        public event Get_emr_RemarksDetailsCompletedEventHandler Get_emr_RemarksDetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_AddendumDetailsCompletedEventHandler Get_emr_AddendumDetailsCompleted;
        
        /// <remarks/>
        public event Get_PAE_No_ListCompletedEventHandler Get_PAE_No_ListCompleted;
        
        /// <remarks/>
        public event Get_PAE_No_DetailsCompletedEventHandler Get_PAE_No_DetailsCompleted;
        
        /// <remarks/>
        public event Get_Eval_AnaesthetistCompletedEventHandler Get_Eval_AnaesthetistCompleted;
        
        /// <remarks/>
        public event Get_Pae_ExaminationCompletedEventHandler Get_Pae_ExaminationCompleted;
        
        /// <remarks/>
        public event Get_otadviceCompletedEventHandler Get_otadviceCompleted;
        
        /// <remarks/>
        public event Get_Anesthesia_ProcNo_ListCompletedEventHandler Get_Anesthesia_ProcNo_ListCompleted;
        
        /// <remarks/>
        public event Get_Anesthesia_DetailsCompletedEventHandler Get_Anesthesia_DetailsCompleted;
        
        /// <remarks/>
        public event Get_Ane_Patient_admit_DtlCompletedEventHandler Get_Ane_Patient_admit_DtlCompleted;
        
        /// <remarks/>
        public event Get_Surgical_ProcNo_ListCompletedEventHandler Get_Surgical_ProcNo_ListCompleted;
        
        /// <remarks/>
        public event Get_Other_Surgical_ProcNo_ListCompletedEventHandler Get_Other_Surgical_ProcNo_ListCompleted;
        
        /// <remarks/>
        public event Get_Surgical_DetailsCompletedEventHandler Get_Surgical_DetailsCompleted;
        
        /// <remarks/>
        public event Get_Other_Surgical_DetailsCompletedEventHandler Get_Other_Surgical_DetailsCompleted;
        
        /// <remarks/>
        public event Get_AnesthProcNoCompletedEventHandler Get_AnesthProcNoCompleted;
        
        /// <remarks/>
        public event Get_OTImage_DetailCompletedEventHandler Get_OTImage_DetailCompleted;
        
        /// <remarks/>
        public event Get_OTTINOPFND_DetailCompletedEventHandler Get_OTTINOPFND_DetailCompleted;
        
        /// <remarks/>
        public event Get_RECON_SURGERY_DetailsCompletedEventHandler Get_RECON_SURGERY_DetailsCompleted;
        
        /// <remarks/>
        public event Get_Procedure_SURGERY_DetailsCompletedEventHandler Get_Procedure_SURGERY_DetailsCompleted;
        
        /// <remarks/>
        public event Get_FindSubsiteCompletedEventHandler Get_FindSubsiteCompleted;
        
        /// <remarks/>
        public event Get_FindDefectCompletedEventHandler Get_FindDefectCompleted;
        
        /// <remarks/>
        public event Get_ReProceduresCompletedEventHandler Get_ReProceduresCompleted;
        
        /// <remarks/>
        public event Get_ROIS_CourseNoCompletedEventHandler Get_ROIS_CourseNoCompleted;
        
        /// <remarks/>
        public event Get_ROIS_PhaseNoCompletedEventHandler Get_ROIS_PhaseNoCompleted;
        
        /// <remarks/>
        public event Get_ROIS_PlanNoCompletedEventHandler Get_ROIS_PlanNoCompleted;
        
        /// <remarks/>
        public event Get_Plan_ROISCompletedEventHandler Get_Plan_ROISCompleted;
        
        /// <remarks/>
        public event Get_TeleTheradetCompletedEventHandler Get_TeleTheradetCompleted;
        
        /// <remarks/>
        public event Get_Unit_NameCompletedEventHandler Get_Unit_NameCompleted;
        
        /// <remarks/>
        public event Get_Unit_Name2CompletedEventHandler Get_Unit_Name2Completed;
        
        /// <remarks/>
        public event Get_Plan1_ROISCompletedEventHandler Get_Plan1_ROISCompleted;
        
        /// <remarks/>
        public event Get_Energy_ROISCompletedEventHandler Get_Energy_ROISCompleted;
        
        /// <remarks/>
        public event Get_Energy1_ROISCompletedEventHandler Get_Energy1_ROISCompleted;
        
        /// <remarks/>
        public event Get_Beam_ROISCompletedEventHandler Get_Beam_ROISCompleted;
        
        /// <remarks/>
        public event Get_Beam1_ROISCompletedEventHandler Get_Beam1_ROISCompleted;
        
        /// <remarks/>
        public event Get_BeamWed_ROISCompletedEventHandler Get_BeamWed_ROISCompleted;
        
        /// <remarks/>
        public event Get_BeamWed1_ROISCompletedEventHandler Get_BeamWed1_ROISCompleted;
        
        /// <remarks/>
        public event Get_BeamPlan_ROISCompletedEventHandler Get_BeamPlan_ROISCompleted;
        
        /// <remarks/>
        public event Get_BeamPlan1_ROISCompletedEventHandler Get_BeamPlan1_ROISCompleted;
        
        /// <remarks/>
        public event Get_ROTPRDOS_MCompletedEventHandler Get_ROTPRDOS_MCompleted;
        
        /// <remarks/>
        public event Get_ROTPDOS_M1CompletedEventHandler Get_ROTPDOS_M1Completed;
        
        /// <remarks/>
        public event Get_ROTPRDOS_DCompletedEventHandler Get_ROTPRDOS_DCompleted;
        
        /// <remarks/>
        public event Get_BrachyNumber_ListCompletedEventHandler Get_BrachyNumber_ListCompleted;
        
        /// <remarks/>
        public event Get_BrachyCountIntraCavitaryCompletedEventHandler Get_BrachyCountIntraCavitaryCompleted;
        
        /// <remarks/>
        public event Get_IntraCavitary_ROBTINTDETCompletedEventHandler Get_IntraCavitary_ROBTINTDETCompleted;
        
        /// <remarks/>
        public event Get_IntraCavitary_ROBTINCPLNCompletedEventHandler Get_IntraCavitary_ROBTINCPLNCompleted;
        
        /// <remarks/>
        public event Get_BrachyIntraCavitary_SCHNOCompletedEventHandler Get_BrachyIntraCavitary_SCHNOCompleted;
        
        /// <remarks/>
        public event Get_BrachyIntraCavitary_OTTSRGRECNCompletedEventHandler Get_BrachyIntraCavitary_OTTSRGRECNCompleted;
        
        /// <remarks/>
        public event Get_BrachyIntraCavitary_REQN_TYPECompletedEventHandler Get_BrachyIntraCavitary_REQN_TYPECompleted;
        
        /// <remarks/>
        public event Get_BrachyIntraCavitary_ROBTREQSNCompletedEventHandler Get_BrachyIntraCavitary_ROBTREQSNCompleted;
        
        /// <remarks/>
        public event Get_BrachyIntraCavitary_ROBTOTNOTECompletedEventHandler Get_BrachyIntraCavitary_ROBTOTNOTECompleted;
        
        /// <remarks/>
        public event Get_BrachyIntraCavitary_ROBTINTDETCompletedEventHandler Get_BrachyIntraCavitary_ROBTINTDETCompleted;
        
        /// <remarks/>
        public event Get_BrachyCountInterstitialCompletedEventHandler Get_BrachyCountInterstitialCompleted;
        
        /// <remarks/>
        public event Get_Interstitial_ROBTITSDLSCompletedEventHandler Get_Interstitial_ROBTITSDLSCompleted;
        
        /// <remarks/>
        public event Get_Interstitial_ROBTISPLNCompletedEventHandler Get_Interstitial_ROBTISPLNCompleted;
        
        /// <remarks/>
        public event Get_BrachyInterstitial_SCHNOCompletedEventHandler Get_BrachyInterstitial_SCHNOCompleted;
        
        /// <remarks/>
        public event Get_BrachyInterstitial_OTTSRGRECNCompletedEventHandler Get_BrachyInterstitial_OTTSRGRECNCompleted;
        
        /// <remarks/>
        public event Get_BrachyInterstitial_REQN_TYPECompletedEventHandler Get_BrachyInterstitial_REQN_TYPECompleted;
        
        /// <remarks/>
        public event Get_BrachyInterstitial_ROBTOTNOTECompletedEventHandler Get_BrachyInterstitial_ROBTOTNOTECompleted;
        
        /// <remarks/>
        public event Get_BrachyInterstitial_ROBTOTNOTE_DtlsCompletedEventHandler Get_BrachyInterstitial_ROBTOTNOTE_DtlsCompleted;
        
        /// <remarks/>
        public event Get_BrachyInterstitial_ROBTITSDLSCompletedEventHandler Get_BrachyInterstitial_ROBTITSDLSCompleted;
        
        /// <remarks/>
        public event Get_BrachyCountSurfaceCompletedEventHandler Get_BrachyCountSurfaceCompleted;
        
        /// <remarks/>
        public event Get_Surface_ROBTSADLSCompletedEventHandler Get_Surface_ROBTSADLSCompleted;
        
        /// <remarks/>
        public event Get_Surface_ROBTSAPLNCompletedEventHandler Get_Surface_ROBTSAPLNCompleted;
        
        /// <remarks/>
        public event Get_BrachySurface_SCHNOCompletedEventHandler Get_BrachySurface_SCHNOCompleted;
        
        /// <remarks/>
        public event Get_BrachySurface_OTTSRGRECNCompletedEventHandler Get_BrachySurface_OTTSRGRECNCompleted;
        
        /// <remarks/>
        public event Get_BrachySurface_REQN_TYPECompletedEventHandler Get_BrachySurface_REQN_TYPECompleted;
        
        /// <remarks/>
        public event Get_BrachySurface_ROBTOTNOTECompletedEventHandler Get_BrachySurface_ROBTOTNOTECompleted;
        
        /// <remarks/>
        public event Get_BrachySurface_ROBTOTNOTE_DtlsCompletedEventHandler Get_BrachySurface_ROBTOTNOTE_DtlsCompleted;
        
        /// <remarks/>
        public event Get_BrachySurface_ROBTSADLSCompletedEventHandler Get_BrachySurface_ROBTSADLSCompleted;
        
        /// <remarks/>
        public event Get_Brachy_HDR_LDRCompletedEventHandler Get_Brachy_HDR_LDRCompleted;
        
        /// <remarks/>
        public event Get_emr_BedCompletedEventHandler Get_emr_BedCompleted;
        
        /// <remarks/>
        public event Get_emr_PrimSiteCompletedEventHandler Get_emr_PrimSiteCompleted;
        
        /// <remarks/>
        public event Get_emr_CISLIBctdiagnsCompletedEventHandler Get_emr_CISLIBctdiagnsCompleted;
        
        /// <remarks/>
        public event Get_RadioNumber_ListCompletedEventHandler Get_RadioNumber_ListCompleted;
        
        /// <remarks/>
        public event Get_JC_NoCompletedEventHandler Get_JC_NoCompleted;
        
        /// <remarks/>
        public event Get_CPLAN_NoCompletedEventHandler Get_CPLAN_NoCompleted;
        
        /// <remarks/>
        public event Get_JC_ParamCompletedEventHandler Get_JC_ParamCompleted;
        
        /// <remarks/>
        public event Get_CPLAN_ParamCompletedEventHandler Get_CPLAN_ParamCompleted;
        
        /// <remarks/>
        public event GetmtproinfoCompletedEventHandler GetmtproinfoCompleted;
        
        /// <remarks/>
        public event Get_CycleMTCYCLEDTLCompletedEventHandler Get_CycleMTCYCLEDTLCompleted;
        
        /// <remarks/>
        public event Get_medTypeCompletedEventHandler Get_medTypeCompleted;
        
        /// <remarks/>
        public event Get_DistDrugCompletedEventHandler Get_DistDrugCompleted;
        
        /// <remarks/>
        public event Get_MTDistDetCompletedEventHandler Get_MTDistDetCompleted;
        
        /// <remarks/>
        public event MTDistDet_detCompletedEventHandler MTDistDet_detCompleted;
        
        /// <remarks/>
        public event MTDistDet_daydetCompletedEventHandler MTDistDet_daydetCompleted;
        
        /// <remarks/>
        public event GetVIEWChemCompletedEventHandler GetVIEWChemCompleted;
        
        /// <remarks/>
        public event Get_ToxicityJCNoCompletedEventHandler Get_ToxicityJCNoCompleted;
        
        /// <remarks/>
        public event Get_Follow_upCompletedEventHandler Get_Follow_upCompleted;
        
        /// <remarks/>
        public event Get_Follow_up_diedCompletedEventHandler Get_Follow_up_diedCompleted;
        
        /// <remarks/>
        public event Get_Follow_up_recordCompletedEventHandler Get_Follow_up_recordCompleted;
        
        /// <remarks/>
        public event Get_Data_VW_WEBCISCCompletedEventHandler Get_Data_VW_WEBCISCCompleted;
        
        /// <remarks/>
        public event Get_Data_wipatdtlsCompletedEventHandler Get_Data_wipatdtlsCompleted;
        
        /// <remarks/>
        public event Get_Data_wipatdtlsOnINTERVNTNCompletedEventHandler Get_Data_wipatdtlsOnINTERVNTNCompleted;
        
        /// <remarks/>
        public event Get_Data_wiprscomCompletedEventHandler Get_Data_wiprscomCompleted;
        
        /// <remarks/>
        public event Get_Data_WIPITSSUECompletedEventHandler Get_Data_WIPITSSUECompleted;
        
        /// <remarks/>
        public event getemrVerifyOTPAndCaptchaCompletedEventHandler getemrVerifyOTPAndCaptchaCompleted;
        
        /// <remarks/>
        public event getemrOTPCountCompletedEventHandler getemrOTPCountCompleted;
        
        /// <remarks/>
        public event Get_IncrementOtpCountCompletedEventHandler Get_IncrementOtpCountCompleted;
        
        /// <remarks/>
        public event Get_ResetOtpCountCompletedEventHandler Get_ResetOtpCountCompleted;
        
        /// <remarks/>
        public event Get_CheckCaseNoCompletedEventHandler Get_CheckCaseNoCompleted;
        
        /// <remarks/>
        public event GetPatientContactDetailsCompletedEventHandler GetPatientContactDetailsCompleted;
        
        /// <remarks/>
        public event CheckAndUpdatePasswordRecordCompletedEventHandler CheckAndUpdatePasswordRecordCompleted;
        
        /// <remarks/>
        public event GetCaseCountCompletedEventHandler GetCaseCountCompleted;
        
        /// <remarks/>
        public event GetCaseLoginDetailsCompletedEventHandler GetCaseLoginDetailsCompleted;
        
        /// <remarks/>
        public event InsertPasswordRecordCompletedEventHandler InsertPasswordRecordCompleted;
        
        /// <remarks/>
        public event GetLogPatientInfoCompletedEventHandler GetLogPatientInfoCompleted;
        
        /// <remarks/>
        public event GetLogPatientInfoByWebEMRCompletedEventHandler GetLogPatientInfoByWebEMRCompleted;
        
        /// <remarks/>
        public event executeSQLDSCompletedEventHandler executeSQLDSCompleted;
        
        /// <remarks/>
        public event executeSQLDS1CompletedEventHandler executeSQLDS1Completed;
        
        /// <remarks/>
        public event executeSQLCompletedEventHandler executeSQLCompleted;
        
        /// <remarks/>
        public event Get_emr_BE_TendernessCompletedEventHandler Get_emr_BE_TendernessCompleted;
        
        /// <remarks/>
        public event Get_emr_BE_DeformityCompletedEventHandler Get_emr_BE_DeformityCompleted;
        
        /// <remarks/>
        public event Get_emr_BE_MovRangeCompletedEventHandler Get_emr_BE_MovRangeCompleted;
        
        /// <remarks/>
        public event Get_emr_BE_MotorPowerCompletedEventHandler Get_emr_BE_MotorPowerCompleted;
        
        /// <remarks/>
        public event Get_emr_BE_SensationCompletedEventHandler Get_emr_BE_SensationCompleted;
        
        /// <remarks/>
        public event Get_emr_ScanReportCompletedEventHandler Get_emr_ScanReportCompleted;
        
        /// <remarks/>
        public event Get_emr_AllRequisitionsCompletedEventHandler Get_emr_AllRequisitionsCompleted;
        
        /// <remarks/>
        public event Get_emr_DISLIB_RequisitionsCompletedEventHandler Get_emr_DISLIB_RequisitionsCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_RequisitionsCompletedEventHandler Get_emr_Count_RequisitionsCompleted;
        
        /// <remarks/>
        public event Get_emr_StaffRequisitionsCompletedEventHandler Get_emr_StaffRequisitionsCompleted;
        
        /// <remarks/>
        public event Get_emr_EmployeeDtlCompletedEventHandler Get_emr_EmployeeDtlCompleted;
        
        /// <remarks/>
        public event Get_emr_ServiceDescCompletedEventHandler Get_emr_ServiceDescCompleted;
        
        /// <remarks/>
        public event Get_emr_Addendum_DCompletedEventHandler Get_emr_Addendum_DCompleted;
        
        /// <remarks/>
        public event Get_emr_Addendum_BFCompletedEventHandler Get_emr_Addendum_BFCompleted;
        
        /// <remarks/>
        public event Get_emr_Addendum_CYCompletedEventHandler Get_emr_Addendum_CYCompleted;
        
        /// <remarks/>
        public event Get_emr_Addendum_FACompletedEventHandler Get_emr_Addendum_FACompleted;
        
        /// <remarks/>
        public event Get_emr_Addendum_RCompletedEventHandler Get_emr_Addendum_RCompleted;
        
        /// <remarks/>
        public event Get_emr_RSCBCCompletedEventHandler Get_emr_RSCBCCompleted;
        
        /// <remarks/>
        public event Get_emr_RSCBC2CompletedEventHandler Get_emr_RSCBC2Completed;
        
        /// <remarks/>
        public event Get_emr_DmulProceCompletedEventHandler Get_emr_DmulProceCompleted;
        
        /// <remarks/>
        public event Get_emr_Radiology_AllRequisitionsCompletedEventHandler Get_emr_Radiology_AllRequisitionsCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_Radiology_RequisitionsCompletedEventHandler Get_emr_Count_Radiology_RequisitionsCompleted;
        
        /// <remarks/>
        public event Get_emr_NuclMed_AllRequisitionsCompletedEventHandler Get_emr_NuclMed_AllRequisitionsCompleted;
        
        /// <remarks/>
        public event Get_emr_NuclMed_ReportCompletedEventHandler Get_emr_NuclMed_ReportCompleted;
        
        /// <remarks/>
        public event Get_emr_NuclMed_RequisitionCompletedEventHandler Get_emr_NuclMed_RequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_AllLab_RequisitionCompletedEventHandler Get_emr_AllLab_RequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_LabRequisitionCompletedEventHandler Get_emr_Count_LabRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_Surgical_AllRequisitionCompletedEventHandler Get_emr_Surgical_AllRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_SurgicalRequisitionCompletedEventHandler Get_emr_Count_SurgicalRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_CytologyRequisitionCompletedEventHandler Get_emr_CytologyRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_CytologyRequisitionCompletedEventHandler Get_emr_Count_CytologyRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_CytoRequisitionCompletedEventHandler Get_emr_CytoRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_CytoRequisitionCompletedEventHandler Get_emr_Count_CytoRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_FNACRequisitionCompletedEventHandler Get_emr_FNACRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_FNACRequisitionCompletedEventHandler Get_emr_Count_FNACRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_BIOChemRequisitionCompletedEventHandler Get_emr_BIOChemRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_BIOChemRequisitionCompletedEventHandler Get_emr_Count_BIOChemRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_TumourRequisitionCompletedEventHandler Get_emr_TumourRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_TumourRequisitionCompletedEventHandler Get_emr_Count_TumourRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_MicroBioRequisitionCompletedEventHandler Get_emr_MicroBioRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_MicroBioRequisitionCompletedEventHandler Get_emr_Count_MicroBioRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_AllRequisition_RptCompletedEventHandler Get_emr_AllRequisition_RptCompleted;
        
        /// <remarks/>
        public event Get_emr_AllRequisition_Rpt_dTypeCompletedEventHandler Get_emr_AllRequisition_Rpt_dTypeCompleted;
        
        /// <remarks/>
        public event Get_emr_AllRequisition_Report_DtlCompletedEventHandler Get_emr_AllRequisition_Report_DtlCompleted;
        
        /// <remarks/>
        public event Get_emr_AllRequisition_MolecuLABCompletedEventHandler Get_emr_AllRequisition_MolecuLABCompleted;
        
        /// <remarks/>
        public event Get_emr_DFReportCompletedEventHandler Get_emr_DFReportCompleted;
        
        /// <remarks/>
        public event Get_emr_DRequisitionCompletedEventHandler Get_emr_DRequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_RTIMELOGCompletedEventHandler Get_emr_RTIMELOGCompleted;
        
        /// <remarks/>
        public event Get_emr_CYTOGREPRTCompletedEventHandler Get_emr_CYTOGREPRTCompleted;
        
        /// <remarks/>
        public event Get_emr_DFNREPORTCompletedEventHandler Get_emr_DFNREPORTCompleted;
        
        /// <remarks/>
        public event Get_emr_DMPROCEDURCompletedEventHandler Get_emr_DMPROCEDURCompleted;
        
        /// <remarks/>
        public event Get_emr_DMPROCEDUR_ELTESTCompletedEventHandler Get_emr_DMPROCEDUR_ELTESTCompleted;
        
        /// <remarks/>
        public event Get_emr_DMBCCOMMCompletedEventHandler Get_emr_DMBCCOMMCompleted;
        
        /// <remarks/>
        public event Get_emr_DHEMCYTO1CompletedEventHandler Get_emr_DHEMCYTO1Completed;
        
        /// <remarks/>
        public event Get_emr_DHEMCPDETCompletedEventHandler Get_emr_DHEMCPDETCompleted;
        
        /// <remarks/>
        public event Get_emr_HINTERFACECompletedEventHandler Get_emr_HINTERFACECompleted;
        
        /// <remarks/>
        public event Get_emr_DHEMCBCDETCompletedEventHandler Get_emr_DHEMCBCDETCompleted;
        
        /// <remarks/>
        public event Get_emr_REPORTHLF1CompletedEventHandler Get_emr_REPORTHLF1Completed;
        
        /// <remarks/>
        public event Get_emr_REPORTHLF1_ObserTypewiseCompletedEventHandler Get_emr_REPORTHLF1_ObserTypewiseCompleted;
        
        /// <remarks/>
        public event Get_emr_HINTERFACE_MachineNoCompletedEventHandler Get_emr_HINTERFACE_MachineNoCompleted;
        
        /// <remarks/>
        public event Get_emr_REPORTHLLFCompletedEventHandler Get_emr_REPORTHLLFCompleted;
        
        /// <remarks/>
        public event Get_emr_DCBCREPACompletedEventHandler Get_emr_DCBCREPACompleted;
        
        /// <remarks/>
        public event Get_emr_DBMAREPORTCompletedEventHandler Get_emr_DBMAREPORTCompleted;
        
        /// <remarks/>
        public event Get_emr_DBMASUBREPCompletedEventHandler Get_emr_DBMASUBREPCompleted;
        
        /// <remarks/>
        public event Get_emr_DHBFREPORTCompletedEventHandler Get_emr_DHBFREPORTCompleted;
        
        /// <remarks/>
        public event Get_emr_DIMBIOCHELCompletedEventHandler Get_emr_DIMBIOCHELCompleted;
        
        /// <remarks/>
        public event Get_emr_DIMBIOCHE1CompletedEventHandler Get_emr_DIMBIOCHE1Completed;
        
        /// <remarks/>
        public event Get_emr_DMYCOBACTECompletedEventHandler Get_emr_DMYCOBACTECompleted;
        
        /// <remarks/>
        public event Get_emr_MICROPROCECompletedEventHandler Get_emr_MICROPROCECompleted;
        
        /// <remarks/>
        public event Get_emr_DMOPRISMERCompletedEventHandler Get_emr_DMOPRISMERCompleted;
        
        /// <remarks/>
        public event Get_emr_DMSPONANTICompletedEventHandler Get_emr_DMSPONANTICompleted;
        
        /// <remarks/>
        public event Get_emr_DMBAANTICompletedEventHandler Get_emr_DMBAANTICompleted;
        
        /// <remarks/>
        public event Get_emr_DMBAANTI_ANTIBIOTICCompletedEventHandler Get_emr_DMBAANTI_ANTIBIOTICCompleted;
        
        /// <remarks/>
        public event Get_emr_DMBSEMCMOCompletedEventHandler Get_emr_DMBSEMCMOCompleted;
        
        /// <remarks/>
        public event Get_emr_MICRO_TESTCompletedEventHandler Get_emr_MICRO_TESTCompleted;
        
        /// <remarks/>
        public event Get_emr_dmycobacteCompletedEventHandler Get_emr_dmycobacteCompleted;
        
        /// <remarks/>
        public event Get_emr_DMBSEMCMO_ResCompletedEventHandler Get_emr_DMBSEMCMO_ResCompleted;
        
        /// <remarks/>
        public event Get_emr_DMURECompletedEventHandler Get_emr_DMURECompleted;
        
        /// <remarks/>
        public event Get_emr_DMSRECompletedEventHandler Get_emr_DMSRECompleted;
        
        /// <remarks/>
        public event Get_emr_HaematoOncologyCompletedEventHandler Get_emr_HaematoOncologyCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_HaematoOncologyCompletedEventHandler Get_emr_Count_HaematoOncologyCompleted;
        
        /// <remarks/>
        public event Get_emr_HaematoPathologyCompletedEventHandler Get_emr_HaematoPathologyCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_HaematoPathologyCompletedEventHandler Get_emr_Count_HaematoPathologyCompleted;
        
        /// <remarks/>
        public event Get_emr_MedicalOncologyCompletedEventHandler Get_emr_MedicalOncologyCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_MedicalOncologyCompletedEventHandler Get_emr_Count_MedicalOncologyCompleted;
        
        /// <remarks/>
        public event Get_emr_CardiologyCompletedEventHandler Get_emr_CardiologyCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_CardiologyCompletedEventHandler Get_emr_Count_CardiologyCompleted;
        
        /// <remarks/>
        public event Get_emr_EndoscopyCompletedEventHandler Get_emr_EndoscopyCompleted;
        
        /// <remarks/>
        public event Get_emr_Count_EndoscopyCompletedEventHandler Get_emr_Count_EndoscopyCompleted;
        
        /// <remarks/>
        public event Get_emr_RadiologyReportCompletedEventHandler Get_emr_RadiologyReportCompleted;
        
        /// <remarks/>
        public event Get_emr_RadiologyRptCompletedEventHandler Get_emr_RadiologyRptCompleted;
        
        /// <remarks/>
        public event Get_emr_NuclearReportCompletedEventHandler Get_emr_NuclearReportCompleted;
        
        /// <remarks/>
        public event Get_emr_NuclearRptCompletedEventHandler Get_emr_NuclearRptCompleted;
        
        /// <remarks/>
        public event Get_emr_sPathologyReportCompletedEventHandler Get_emr_sPathologyReportCompleted;
        
        /// <remarks/>
        public event Get_emr_sPathologyRptCompletedEventHandler Get_emr_sPathologyRptCompleted;
        
        /// <remarks/>
        public event Get_emr_CytologyReportCompletedEventHandler Get_emr_CytologyReportCompleted;
        
        /// <remarks/>
        public event Get_emr_CytologyRptCompletedEventHandler Get_emr_CytologyRptCompleted;
        
        /// <remarks/>
        public event Get_emr_CytogeneticsReportCompletedEventHandler Get_emr_CytogeneticsReportCompleted;
        
        /// <remarks/>
        public event Get_emr_CytogeneticsRptCompletedEventHandler Get_emr_CytogeneticsRptCompleted;
        
        /// <remarks/>
        public event Get_emr_DISIMPCompletedEventHandler Get_emr_DISIMPCompleted;
        
        /// <remarks/>
        public event Get_emr_DEDREPORTCompletedEventHandler Get_emr_DEDREPORTCompleted;
        
        /// <remarks/>
        public event Get_emr_DECREPORTCompletedEventHandler Get_emr_DECREPORTCompleted;
        
        /// <remarks/>
        public event Get_emr_DSTREPORTCompletedEventHandler Get_emr_DSTREPORTCompleted;
        
        /// <remarks/>
        public event Get_emr_ECCHOREPCompletedEventHandler Get_emr_ECCHOREPCompleted;
        
        /// <remarks/>
        public event Get_emr_DPFREPORTCompletedEventHandler Get_emr_DPFREPORTCompleted;
        
        /// <remarks/>
        public event Get_emr_MOLECULABCompletedEventHandler Get_emr_MOLECULABCompleted;
        
        /// <remarks/>
        public event Get_emr_FNACReportCompletedEventHandler Get_emr_FNACReportCompleted;
        
        /// <remarks/>
        public event Get_emr_FNACRptCompletedEventHandler Get_emr_FNACRptCompleted;
        
        /// <remarks/>
        public event Get_emr_BioChemReportCompletedEventHandler Get_emr_BioChemReportCompleted;
        
        /// <remarks/>
        public event Get_emr_BioChemRptCompletedEventHandler Get_emr_BioChemRptCompleted;
        
        /// <remarks/>
        public event Get_emr_TumorReportCompletedEventHandler Get_emr_TumorReportCompleted;
        
        /// <remarks/>
        public event Get_emr_TumorRptCompletedEventHandler Get_emr_TumorRptCompleted;
        
        /// <remarks/>
        public event Get_emr_MicroBiologyReportCompletedEventHandler Get_emr_MicroBiologyReportCompleted;
        
        /// <remarks/>
        public event Get_emr_MicroBiologyRptCompletedEventHandler Get_emr_MicroBiologyRptCompleted;
        
        /// <remarks/>
        public event Get_emr_CardiologyReportCompletedEventHandler Get_emr_CardiologyReportCompleted;
        
        /// <remarks/>
        public event Get_emr_CardiologyRptCompletedEventHandler Get_emr_CardiologyRptCompleted;
        
        /// <remarks/>
        public event Get_emr_EndoscopyReportCompletedEventHandler Get_emr_EndoscopyReportCompleted;
        
        /// <remarks/>
        public event Get_emr_EndoscopyRptCompletedEventHandler Get_emr_EndoscopyRptCompleted;
        
        /// <remarks/>
        public event Get_emr_MedOncologyReportCompletedEventHandler Get_emr_MedOncologyReportCompleted;
        
        /// <remarks/>
        public event Get_emr_MicrobiologyReportCompletedEventHandler Get_emr_MicrobiologyReportCompleted;
        
        /// <remarks/>
        public event Get_emr_AllLabReqRptCompletedEventHandler Get_emr_AllLabReqRptCompleted;
        
        /// <remarks/>
        public event Get_emr_AllLabReqRpt_DtlCompletedEventHandler Get_emr_AllLabReqRpt_DtlCompleted;
        
        /// <remarks/>
        public event Get_emr_JointClinicNoListCompletedEventHandler Get_emr_JointClinicNoListCompleted;
        
        /// <remarks/>
        public event Get_emr_JointClinic_DetailsCompletedEventHandler Get_emr_JointClinic_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_JCRequisitionsCompletedEventHandler Get_emr_JCRequisitionsCompleted;
        
        /// <remarks/>
        public event Get_emr_JCInvestigations_ReviewCompletedEventHandler Get_emr_JCInvestigations_ReviewCompleted;
        
        /// <remarks/>
        public event Get_emr_JCInvestReview_ReqwiseCompletedEventHandler Get_emr_JCInvestReview_ReqwiseCompleted;
        
        /// <remarks/>
        public event Get_emr_JCInvest_OutsideTMHCompletedEventHandler Get_emr_JCInvest_OutsideTMHCompleted;
        
        /// <remarks/>
        public event Get_Emr_Marital_StatusCompletedEventHandler Get_Emr_Marital_StatusCompleted;
        
        /// <remarks/>
        public event Get_Emr_EducationCompletedEventHandler Get_Emr_EducationCompleted;
        
        /// <remarks/>
        public event Get_Emr_OccupationCompletedEventHandler Get_Emr_OccupationCompleted;
        
        /// <remarks/>
        public event Get_Emr_NationalityCompletedEventHandler Get_Emr_NationalityCompleted;
        
        /// <remarks/>
        public event Get_Emr_ReligionCompletedEventHandler Get_Emr_ReligionCompleted;
        
        /// <remarks/>
        public event Get_Emr_Mother_TongueCompletedEventHandler Get_Emr_Mother_TongueCompleted;
        
        /// <remarks/>
        public event Get_Emr_PatientLoginCompletedEventHandler Get_Emr_PatientLoginCompleted;
        
        /// <remarks/>
        public event Get_Emr_PatientLogin2CompletedEventHandler Get_Emr_PatientLogin2Completed;
        
        /// <remarks/>
        public event Get_Emr_PatientLogin3CompletedEventHandler Get_Emr_PatientLogin3Completed;
        
        /// <remarks/>
        public event Get_LastPatientVisitCompletedEventHandler Get_LastPatientVisitCompleted;
        
        /// <remarks/>
        public event Update_PatientVisitCompletedEventHandler Update_PatientVisitCompleted;
        
        /// <remarks/>
        public event Get_Emr_PatientDetailsCompletedEventHandler Get_Emr_PatientDetailsCompleted;
        
        /// <remarks/>
        public event Get_DMGRegCompletedEventHandler Get_DMGRegCompleted;
        
        /// <remarks/>
        public event Check_UserNameCompletedEventHandler Check_UserNameCompleted;
        
        /// <remarks/>
        public event emr_Update_PasswordCompletedEventHandler emr_Update_PasswordCompleted;
        
        /// <remarks/>
        public event Insert_emrLoginCompletedEventHandler Insert_emrLoginCompleted;
        
        /// <remarks/>
        public event Get_emr_PatientAddressDetailsCompletedEventHandler Get_emr_PatientAddressDetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_PatientTypeCompletedEventHandler Get_emr_PatientTypeCompleted;
        
        /// <remarks/>
        public event Get_emr_PatientPersonalDetailsCompletedEventHandler Get_emr_PatientPersonalDetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_PatientDMGDetailsCompletedEventHandler Get_emr_PatientDMGDetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_WardNameCompletedEventHandler Get_emr_WardNameCompleted;
        
        /// <remarks/>
        public event Get_emr_WardCodeCompletedEventHandler Get_emr_WardCodeCompleted;
        
        /// <remarks/>
        public event Get_emr_AdminDateCompletedEventHandler Get_emr_AdminDateCompleted;
        
        /// <remarks/>
        public event Get_emr_BIOHazardCompletedEventHandler Get_emr_BIOHazardCompleted;
        
        /// <remarks/>
        public event Get_emr_PreviousRegNoCompletedEventHandler Get_emr_PreviousRegNoCompleted;
        
        /// <remarks/>
        public event Get_emr_EmpBasInfoCompletedEventHandler Get_emr_EmpBasInfoCompleted;
        
        /// <remarks/>
        public event Get_emr_EmpLoginCompletedEventHandler Get_emr_EmpLoginCompleted;
        
        /// <remarks/>
        public event Get_emr_GENCONSENTCompletedEventHandler Get_emr_GENCONSENTCompleted;
        
        /// <remarks/>
        public event Get_emr_CONSTYPECompletedEventHandler Get_emr_CONSTYPECompleted;
        
        /// <remarks/>
        public event Get_emr_ConsentDetailsCompletedEventHandler Get_emr_ConsentDetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_AdmissionListCompletedEventHandler Get_emr_AdmissionListCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_DischargeSummaryCompletedEventHandler Get_emr_Patient_DischargeSummaryCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_DiagnosisDetailsCompletedEventHandler Get_emr_Patient_DiagnosisDetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_Significant_InvestigationsCompletedEventHandler Get_emr_Patient_Significant_InvestigationsCompleted;
        
        /// <remarks/>
        public event Get_emr_RISLIB_RequisitionCompletedEventHandler Get_emr_RISLIB_RequisitionCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_Surgery_DetailsCompletedEventHandler Get_emr_Patient_Surgery_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_OT_THREGCompletedEventHandler Get_emr_OT_THREGCompleted;
        
        /// <remarks/>
        public event Get_emr_OT_THREGCNCompletedEventHandler Get_emr_OT_THREGCNCompleted;
        
        /// <remarks/>
        public event Get_emr_OT_TSRGRECNCompletedEventHandler Get_emr_OT_TSRGRECNCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_External_BeamTherapyCompletedEventHandler Get_emr_Patient_External_BeamTherapyCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_Brachy_TherapyCompletedEventHandler Get_emr_Patient_Brachy_TherapyCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_ChemotherapyCompletedEventHandler Get_emr_Patient_ChemotherapyCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_Therapeutic_EndoscopyCompletedEventHandler Get_emr_Patient_Therapeutic_EndoscopyCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_Other_MedicationsCompletedEventHandler Get_emr_Patient_Other_MedicationsCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_Other_ProceduresCompletedEventHandler Get_emr_Patient_Other_ProceduresCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_IV_FluidsCompletedEventHandler Get_emr_Patient_IV_FluidsCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_Blood_TransfusionCompletedEventHandler Get_emr_Patient_Blood_TransfusionCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_Medical_AdviceCompletedEventHandler Get_emr_Patient_Medical_AdviceCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_Other_AdviceCompletedEventHandler Get_emr_Patient_Other_AdviceCompleted;
        
        /// <remarks/>
        public event Get_emr_Patient_Significant_New_InvestigationsCompletedEventHandler Get_emr_Patient_Significant_New_InvestigationsCompleted;
        
        /// <remarks/>
        public event Get_emr_Clinical_EvaluationCompletedEventHandler Get_emr_Clinical_EvaluationCompleted;
        
        /// <remarks/>
        public event Get_emr_Clinical_Evaluation_DetailsCompletedEventHandler Get_emr_Clinical_Evaluation_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_History_ExamNoCompletedEventHandler Get_emr_History_ExamNoCompleted;
        
        /// <remarks/>
        public event Get_emr_History_DetailsCompletedEventHandler Get_emr_History_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_ComplaintsCompletedEventHandler Get_emr_ComplaintsCompleted;
        
        /// <remarks/>
        public event Get_emr_History_ExaminationCompletedEventHandler Get_emr_History_ExaminationCompleted;
        
        /// <remarks/>
        public event Get_emr_AssessmentTypeCompletedEventHandler Get_emr_AssessmentTypeCompleted;
        
        /// <remarks/>
        public event Get_emr_Assessment_History_ListCompletedEventHandler Get_emr_Assessment_History_ListCompleted;
        
        /// <remarks/>
        public event Get_emr_Assessment_History_DtlCompletedEventHandler Get_emr_Assessment_History_DtlCompleted;
        
        /// <remarks/>
        public event Get_emr_Assessment_History_ComplaintsCompletedEventHandler Get_emr_Assessment_History_ComplaintsCompleted;
        
        /// <remarks/>
        public event Get_emr_Symptom_DetailsCompletedEventHandler Get_emr_Symptom_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Diagnosis_StatusCompletedEventHandler Get_emr_Diagnosis_StatusCompleted;
        
        /// <remarks/>
        public event Get_emr_Diagnosis_MethodCompletedEventHandler Get_emr_Diagnosis_MethodCompleted;
        
        /// <remarks/>
        public event Get_emr_Diagnosis_InvestigationCompletedEventHandler Get_emr_Diagnosis_InvestigationCompleted;
        
        /// <remarks/>
        public event Get_emr_Intervention_DetailsCompletedEventHandler Get_emr_Intervention_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Surgery_DetailsCompletedEventHandler Get_emr_Surgery_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_ExternalRT_DetailsCompletedEventHandler Get_emr_ExternalRT_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Brachytherapy_DetailsCompletedEventHandler Get_emr_Brachytherapy_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Chemotherapy_DetailsCompletedEventHandler Get_emr_Chemotherapy_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Medical_HistoryCompletedEventHandler Get_emr_Medical_HistoryCompleted;
        
        /// <remarks/>
        public event Get_emr_Allergies_DetailsCompletedEventHandler Get_emr_Allergies_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Manstrual_historyCompletedEventHandler Get_emr_Manstrual_historyCompleted;
        
        /// <remarks/>
        public event Get_emr_Obstesteric_historyCompletedEventHandler Get_emr_Obstesteric_historyCompleted;
        
        /// <remarks/>
        public event Get_emr_Contraceptive_historyCompletedEventHandler Get_emr_Contraceptive_historyCompleted;
        
        /// <remarks/>
        public event Get_emr_Harmone_historyCompletedEventHandler Get_emr_Harmone_historyCompleted;
        
        /// <remarks/>
        public event Get_emr_Env_Occup_historyCompletedEventHandler Get_emr_Env_Occup_historyCompleted;
        
        /// <remarks/>
        public event Get_emr_Family_historyCompletedEventHandler Get_emr_Family_historyCompleted;
        
        /// <remarks/>
        public event Get_emr_LifeStyle_historyCompletedEventHandler Get_emr_LifeStyle_historyCompleted;
        
        /// <remarks/>
        public event Get_emr_PrevCancer_historyCompletedEventHandler Get_emr_PrevCancer_historyCompleted;
        
        /// <remarks/>
        public event Get_emr_ServiceUnitCompletedEventHandler Get_emr_ServiceUnitCompleted;
        
        /// <remarks/>
        public event Get_emr_SeenByDocCompletedEventHandler Get_emr_SeenByDocCompleted;
        
        /// <remarks/>
        public event Get_emr_General_Examination_DetailsCompletedEventHandler Get_emr_General_Examination_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Examination_ListCompletedEventHandler Get_emr_Examination_ListCompleted;
        
        /// <remarks/>
        public event Get_emr_Pre_Malignant_ConditionsCompletedEventHandler Get_emr_Pre_Malignant_ConditionsCompleted;
        
        /// <remarks/>
        public event Get_emr_ConsciousnessCompletedEventHandler Get_emr_ConsciousnessCompleted;
        
        /// <remarks/>
        public event Get_emr_Other_Higher_FunctionsCompletedEventHandler Get_emr_Other_Higher_FunctionsCompleted;
        
        /// <remarks/>
        public event Get_emr_Cranial_NervesCompletedEventHandler Get_emr_Cranial_NervesCompleted;
        
        /// <remarks/>
        public event Get_emr_GaitCompletedEventHandler Get_emr_GaitCompleted;
        
        /// <remarks/>
        public event Get_emr_Sensory_SystemCompletedEventHandler Get_emr_Sensory_SystemCompleted;
        
        /// <remarks/>
        public event Get_emr_Motor_SystemCompletedEventHandler Get_emr_Motor_SystemCompleted;
        
        /// <remarks/>
        public event Get_emr_Muscle_Group_DetailsCompletedEventHandler Get_emr_Muscle_Group_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_ReflexesCompletedEventHandler Get_emr_ReflexesCompleted;
        
        /// <remarks/>
        public event Get_emr_Cerebellar_SignsCompletedEventHandler Get_emr_Cerebellar_SignsCompleted;
        
        /// <remarks/>
        public event Get_emr_EndocrinopathiesCompletedEventHandler Get_emr_EndocrinopathiesCompleted;
        
        /// <remarks/>
        public event Get_emr_Neurocutaneous_OtherSyndromesCompletedEventHandler Get_emr_Neurocutaneous_OtherSyndromesCompleted;
        
        /// <remarks/>
        public event Get_emr_CSF_DiversionCompletedEventHandler Get_emr_CSF_DiversionCompleted;
        
        /// <remarks/>
        public event Get_emr_Meningeal_IrritationCompletedEventHandler Get_emr_Meningeal_IrritationCompleted;
        
        /// <remarks/>
        public event Get_emr_Neurological_PerformanceCompletedEventHandler Get_emr_Neurological_PerformanceCompleted;
        
        /// <remarks/>
        public event Get_emr_EyeDetailsCompletedEventHandler Get_emr_EyeDetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_External_ExaminationCompletedEventHandler Get_emr_External_ExaminationCompleted;
        
        /// <remarks/>
        public event Get_emr_Internal_ExaminationCompletedEventHandler Get_emr_Internal_ExaminationCompleted;
        
        /// <remarks/>
        public event Get_emr_Head_NeckCompletedEventHandler Get_emr_Head_NeckCompleted;
        
        /// <remarks/>
        public event Get_emr_Mouth_Oral_CavityCompletedEventHandler Get_emr_Mouth_Oral_CavityCompleted;
        
        /// <remarks/>
        public event Get_emr_Jaw_DetailsCompletedEventHandler Get_emr_Jaw_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Neck_DetailsCompletedEventHandler Get_emr_Neck_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Tumour_SpecificCompletedEventHandler Get_emr_Tumour_SpecificCompleted;
        
        /// <remarks/>
        public event Get_emr_TNMStageCompletedEventHandler Get_emr_TNMStageCompleted;
        
        /// <remarks/>
        public event Get_emr_Systemic_ExaminationCompletedEventHandler Get_emr_Systemic_ExaminationCompleted;
        
        /// <remarks/>
        public event Get_emr_Tumour_Specific_ExaminationCompletedEventHandler Get_emr_Tumour_Specific_ExaminationCompleted;
        
        /// <remarks/>
        public event Get_emr_Tumour_Details_LeftCompletedEventHandler Get_emr_Tumour_Details_LeftCompleted;
        
        /// <remarks/>
        public event Get_emr_Tumour_Details_RightCompletedEventHandler Get_emr_Tumour_Details_RightCompleted;
        
        /// <remarks/>
        public event Get_emr_CVSRSCompletedEventHandler Get_emr_CVSRSCompleted;
        
        /// <remarks/>
        public event Get_emr_Inspection_DetailsCompletedEventHandler Get_emr_Inspection_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Asculation_DetailsCompletedEventHandler Get_emr_Asculation_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_TS_ThoracicCompletedEventHandler Get_emr_TS_ThoracicCompleted;
        
        /// <remarks/>
        public event Get_emr_PerAbdomen_InspectionCompletedEventHandler Get_emr_PerAbdomen_InspectionCompleted;
        
        /// <remarks/>
        public event Get_emr_PerAbdomen_PalpationCompletedEventHandler Get_emr_PerAbdomen_PalpationCompleted;
        
        /// <remarks/>
        public event Get_emr_PerAbdomen_Percussion_AsculationCompletedEventHandler Get_emr_PerAbdomen_Percussion_AsculationCompleted;
        
        /// <remarks/>
        public event Get_emr_PerAbdomen_AscitisCompletedEventHandler Get_emr_PerAbdomen_AscitisCompleted;
        
        /// <remarks/>
        public event Get_emr_PerAbdomen_TSGastroCompletedEventHandler Get_emr_PerAbdomen_TSGastroCompleted;
        
        /// <remarks/>
        public event Get_emr_PerRectal_DetailsCompletedEventHandler Get_emr_PerRectal_DetailsCompleted;
        
        /// <remarks/>
        public event Get_emr_Male_GenitaliaCompletedEventHandler Get_emr_Male_GenitaliaCompleted;
        
        /// <remarks/>
        public event Get_emr_Female_GenitaliaCompletedEventHandler Get_emr_Female_GenitaliaCompleted;
        
        /// <remarks/>
        public event Get_emr_TumorSpecific_GynaecologyCompletedEventHandler Get_emr_TumorSpecific_GynaecologyCompleted;
        
        /// <remarks/>
        public event Get_emr_TumorSpecific_UrologyCompletedEventHandler Get_emr_TumorSpecific_UrologyCompleted;
        
        /// <remarks/>
        public event Get_emr_SystemicExaminationCompletedEventHandler Get_emr_SystemicExaminationCompleted;
        
        /// <remarks/>
        public event Get_emr_BE_SwellingCompletedEventHandler Get_emr_BE_SwellingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistinctMediTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDistinctMediTypes(string case_no, string jc_no, string cplan_no) {
            object[] results = this.Invoke("GetDistinctMediTypes", new object[] {
                        case_no,
                        jc_no,
                        cplan_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistinctMediTypesAsync(string case_no, string jc_no, string cplan_no) {
            this.GetDistinctMediTypesAsync(case_no, jc_no, cplan_no, null);
        }
        
        /// <remarks/>
        public void GetDistinctMediTypesAsync(string case_no, string jc_no, string cplan_no, object userState) {
            if ((this.GetDistinctMediTypesOperationCompleted == null)) {
                this.GetDistinctMediTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistinctMediTypesOperationCompleted);
            }
            this.InvokeAsync("GetDistinctMediTypes", new object[] {
                        case_no,
                        jc_no,
                        cplan_no}, this.GetDistinctMediTypesOperationCompleted, userState);
        }
        
        private void OnGetDistinctMediTypesOperationCompleted(object arg) {
            if ((this.GetDistinctMediTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistinctMediTypesCompleted(this, new GetDistinctMediTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistinctTotalDose", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDistinctTotalDose(string case_no, string jc_no, string cplan_no, string drugname) {
            object[] results = this.Invoke("GetDistinctTotalDose", new object[] {
                        case_no,
                        jc_no,
                        cplan_no,
                        drugname});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistinctTotalDoseAsync(string case_no, string jc_no, string cplan_no, string drugname) {
            this.GetDistinctTotalDoseAsync(case_no, jc_no, cplan_no, drugname, null);
        }
        
        /// <remarks/>
        public void GetDistinctTotalDoseAsync(string case_no, string jc_no, string cplan_no, string drugname, object userState) {
            if ((this.GetDistinctTotalDoseOperationCompleted == null)) {
                this.GetDistinctTotalDoseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistinctTotalDoseOperationCompleted);
            }
            this.InvokeAsync("GetDistinctTotalDose", new object[] {
                        case_no,
                        jc_no,
                        cplan_no,
                        drugname}, this.GetDistinctTotalDoseOperationCompleted, userState);
        }
        
        private void OnGetDistinctTotalDoseOperationCompleted(object arg) {
            if ((this.GetDistinctTotalDoseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistinctTotalDoseCompleted(this, new GetDistinctTotalDoseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDaywiseDrugDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDaywiseDrugDetails(string case_no, string jc_no, string cplan_no, string drugname, double totalDose, int cycno, int dayno) {
            object[] results = this.Invoke("GetDaywiseDrugDetails", new object[] {
                        case_no,
                        jc_no,
                        cplan_no,
                        drugname,
                        totalDose,
                        cycno,
                        dayno});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDaywiseDrugDetailsAsync(string case_no, string jc_no, string cplan_no, string drugname, double totalDose, int cycno, int dayno) {
            this.GetDaywiseDrugDetailsAsync(case_no, jc_no, cplan_no, drugname, totalDose, cycno, dayno, null);
        }
        
        /// <remarks/>
        public void GetDaywiseDrugDetailsAsync(string case_no, string jc_no, string cplan_no, string drugname, double totalDose, int cycno, int dayno, object userState) {
            if ((this.GetDaywiseDrugDetailsOperationCompleted == null)) {
                this.GetDaywiseDrugDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDaywiseDrugDetailsOperationCompleted);
            }
            this.InvokeAsync("GetDaywiseDrugDetails", new object[] {
                        case_no,
                        jc_no,
                        cplan_no,
                        drugname,
                        totalDose,
                        cycno,
                        dayno}, this.GetDaywiseDrugDetailsOperationCompleted, userState);
        }
        
        private void OnGetDaywiseDrugDetailsOperationCompleted(object arg) {
            if ((this.GetDaywiseDrugDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDaywiseDrugDetailsCompleted(this, new GetDaywiseDrugDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistinctCycleDays", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDistinctCycleDays(string case_no, string jc_no, string cplan_no, int cycno) {
            object[] results = this.Invoke("GetDistinctCycleDays", new object[] {
                        case_no,
                        jc_no,
                        cplan_no,
                        cycno});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistinctCycleDaysAsync(string case_no, string jc_no, string cplan_no, int cycno) {
            this.GetDistinctCycleDaysAsync(case_no, jc_no, cplan_no, cycno, null);
        }
        
        /// <remarks/>
        public void GetDistinctCycleDaysAsync(string case_no, string jc_no, string cplan_no, int cycno, object userState) {
            if ((this.GetDistinctCycleDaysOperationCompleted == null)) {
                this.GetDistinctCycleDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistinctCycleDaysOperationCompleted);
            }
            this.InvokeAsync("GetDistinctCycleDays", new object[] {
                        case_no,
                        jc_no,
                        cplan_no,
                        cycno}, this.GetDistinctCycleDaysOperationCompleted, userState);
        }
        
        private void OnGetDistinctCycleDaysOperationCompleted(object arg) {
            if ((this.GetDistinctCycleDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistinctCycleDaysCompleted(this, new GetDistinctCycleDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDayPlanWithDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDayPlanWithDate(string case_no, string jc_no, string cplan_no, int cycno) {
            object[] results = this.Invoke("GetDayPlanWithDate", new object[] {
                        case_no,
                        jc_no,
                        cplan_no,
                        cycno});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDayPlanWithDateAsync(string case_no, string jc_no, string cplan_no, int cycno) {
            this.GetDayPlanWithDateAsync(case_no, jc_no, cplan_no, cycno, null);
        }
        
        /// <remarks/>
        public void GetDayPlanWithDateAsync(string case_no, string jc_no, string cplan_no, int cycno, object userState) {
            if ((this.GetDayPlanWithDateOperationCompleted == null)) {
                this.GetDayPlanWithDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDayPlanWithDateOperationCompleted);
            }
            this.InvokeAsync("GetDayPlanWithDate", new object[] {
                        case_no,
                        jc_no,
                        cplan_no,
                        cycno}, this.GetDayPlanWithDateOperationCompleted, userState);
        }
        
        private void OnGetDayPlanWithDateOperationCompleted(object arg) {
            if ((this.GetDayPlanWithDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDayPlanWithDateCompleted(this, new GetDayPlanWithDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProtocolInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProtocolInfo(string case_no, string jc_no, string cplan_no) {
            object[] results = this.Invoke("GetProtocolInfo", new object[] {
                        case_no,
                        jc_no,
                        cplan_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProtocolInfoAsync(string case_no, string jc_no, string cplan_no) {
            this.GetProtocolInfoAsync(case_no, jc_no, cplan_no, null);
        }
        
        /// <remarks/>
        public void GetProtocolInfoAsync(string case_no, string jc_no, string cplan_no, object userState) {
            if ((this.GetProtocolInfoOperationCompleted == null)) {
                this.GetProtocolInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProtocolInfoOperationCompleted);
            }
            this.InvokeAsync("GetProtocolInfo", new object[] {
                        case_no,
                        jc_no,
                        cplan_no}, this.GetProtocolInfoOperationCompleted, userState);
        }
        
        private void OnGetProtocolInfoOperationCompleted(object arg) {
            if ((this.GetProtocolInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProtocolInfoCompleted(this, new GetProtocolInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRadiationDoseDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRadiationDoseDetails(string case_no, int course_no, string phase_no, int plan_no) {
            object[] results = this.Invoke("GetRadiationDoseDetails", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadiationDoseDetailsAsync(string case_no, int course_no, string phase_no, int plan_no) {
            this.GetRadiationDoseDetailsAsync(case_no, course_no, phase_no, plan_no, null);
        }
        
        /// <remarks/>
        public void GetRadiationDoseDetailsAsync(string case_no, int course_no, string phase_no, int plan_no, object userState) {
            if ((this.GetRadiationDoseDetailsOperationCompleted == null)) {
                this.GetRadiationDoseDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadiationDoseDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRadiationDoseDetails", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no}, this.GetRadiationDoseDetailsOperationCompleted, userState);
        }
        
        private void OnGetRadiationDoseDetailsOperationCompleted(object arg) {
            if ((this.GetRadiationDoseDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadiationDoseDetailsCompleted(this, new GetRadiationDoseDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRadiationPlanEngineering", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRadiationPlanEngineering(string case_no, int course_no, string phase_no, int plan_no, int field_no) {
            object[] results = this.Invoke("GetRadiationPlanEngineering", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no,
                        field_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadiationPlanEngineeringAsync(string case_no, int course_no, string phase_no, int plan_no, int field_no) {
            this.GetRadiationPlanEngineeringAsync(case_no, course_no, phase_no, plan_no, field_no, null);
        }
        
        /// <remarks/>
        public void GetRadiationPlanEngineeringAsync(string case_no, int course_no, string phase_no, int plan_no, int field_no, object userState) {
            if ((this.GetRadiationPlanEngineeringOperationCompleted == null)) {
                this.GetRadiationPlanEngineeringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadiationPlanEngineeringOperationCompleted);
            }
            this.InvokeAsync("GetRadiationPlanEngineering", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no,
                        field_no}, this.GetRadiationPlanEngineeringOperationCompleted, userState);
        }
        
        private void OnGetRadiationPlanEngineeringOperationCompleted(object arg) {
            if ((this.GetRadiationPlanEngineeringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadiationPlanEngineeringCompleted(this, new GetRadiationPlanEngineeringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRadiationBeamWedge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRadiationBeamWedge(string case_no, int course_no, string phase_no, int plan_no, int field_no) {
            object[] results = this.Invoke("GetRadiationBeamWedge", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no,
                        field_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadiationBeamWedgeAsync(string case_no, int course_no, string phase_no, int plan_no, int field_no) {
            this.GetRadiationBeamWedgeAsync(case_no, course_no, phase_no, plan_no, field_no, null);
        }
        
        /// <remarks/>
        public void GetRadiationBeamWedgeAsync(string case_no, int course_no, string phase_no, int plan_no, int field_no, object userState) {
            if ((this.GetRadiationBeamWedgeOperationCompleted == null)) {
                this.GetRadiationBeamWedgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadiationBeamWedgeOperationCompleted);
            }
            this.InvokeAsync("GetRadiationBeamWedge", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no,
                        field_no}, this.GetRadiationBeamWedgeOperationCompleted, userState);
        }
        
        private void OnGetRadiationBeamWedgeOperationCompleted(object arg) {
            if ((this.GetRadiationBeamWedgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadiationBeamWedgeCompleted(this, new GetRadiationBeamWedgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRadiationDosimetryDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRadiationDosimetryDetails(string case_no, int course_no, string phase_no, int plan_no) {
            object[] results = this.Invoke("GetRadiationDosimetryDetails", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadiationDosimetryDetailsAsync(string case_no, int course_no, string phase_no, int plan_no) {
            this.GetRadiationDosimetryDetailsAsync(case_no, course_no, phase_no, plan_no, null);
        }
        
        /// <remarks/>
        public void GetRadiationDosimetryDetailsAsync(string case_no, int course_no, string phase_no, int plan_no, object userState) {
            if ((this.GetRadiationDosimetryDetailsOperationCompleted == null)) {
                this.GetRadiationDosimetryDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadiationDosimetryDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRadiationDosimetryDetails", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no}, this.GetRadiationDosimetryDetailsOperationCompleted, userState);
        }
        
        private void OnGetRadiationDosimetryDetailsOperationCompleted(object arg) {
            if ((this.GetRadiationDosimetryDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadiationDosimetryDetailsCompleted(this, new GetRadiationDosimetryDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRadiationPlanDetails2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRadiationPlanDetails2(string case_no, int course_no, string phase_no, int plan_no, int field_no) {
            object[] results = this.Invoke("GetRadiationPlanDetails2", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no,
                        field_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadiationPlanDetails2Async(string case_no, int course_no, string phase_no, int plan_no, int field_no) {
            this.GetRadiationPlanDetails2Async(case_no, course_no, phase_no, plan_no, field_no, null);
        }
        
        /// <remarks/>
        public void GetRadiationPlanDetails2Async(string case_no, int course_no, string phase_no, int plan_no, int field_no, object userState) {
            if ((this.GetRadiationPlanDetails2OperationCompleted == null)) {
                this.GetRadiationPlanDetails2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadiationPlanDetails2OperationCompleted);
            }
            this.InvokeAsync("GetRadiationPlanDetails2", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no,
                        field_no}, this.GetRadiationPlanDetails2OperationCompleted, userState);
        }
        
        private void OnGetRadiationPlanDetails2OperationCompleted(object arg) {
            if ((this.GetRadiationPlanDetails2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadiationPlanDetails2Completed(this, new GetRadiationPlanDetails2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBeamWedgeDetails2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBeamWedgeDetails2(string case_no, int course_no, string phase_no, int plan_no, int field_no) {
            object[] results = this.Invoke("GetBeamWedgeDetails2", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no,
                        field_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBeamWedgeDetails2Async(string case_no, int course_no, string phase_no, int plan_no, int field_no) {
            this.GetBeamWedgeDetails2Async(case_no, course_no, phase_no, plan_no, field_no, null);
        }
        
        /// <remarks/>
        public void GetBeamWedgeDetails2Async(string case_no, int course_no, string phase_no, int plan_no, int field_no, object userState) {
            if ((this.GetBeamWedgeDetails2OperationCompleted == null)) {
                this.GetBeamWedgeDetails2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBeamWedgeDetails2OperationCompleted);
            }
            this.InvokeAsync("GetBeamWedgeDetails2", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no,
                        field_no}, this.GetBeamWedgeDetails2OperationCompleted, userState);
        }
        
        private void OnGetBeamWedgeDetails2OperationCompleted(object arg) {
            if ((this.GetBeamWedgeDetails2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBeamWedgeDetails2Completed(this, new GetBeamWedgeDetails2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPhysicsCalculationMaster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPhysicsCalculationMaster(string case_no, int course_no, string phase_no, int plan_no) {
            object[] results = this.Invoke("GetPhysicsCalculationMaster", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhysicsCalculationMasterAsync(string case_no, int course_no, string phase_no, int plan_no) {
            this.GetPhysicsCalculationMasterAsync(case_no, course_no, phase_no, plan_no, null);
        }
        
        /// <remarks/>
        public void GetPhysicsCalculationMasterAsync(string case_no, int course_no, string phase_no, int plan_no, object userState) {
            if ((this.GetPhysicsCalculationMasterOperationCompleted == null)) {
                this.GetPhysicsCalculationMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhysicsCalculationMasterOperationCompleted);
            }
            this.InvokeAsync("GetPhysicsCalculationMaster", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no}, this.GetPhysicsCalculationMasterOperationCompleted, userState);
        }
        
        private void OnGetPhysicsCalculationMasterOperationCompleted(object arg) {
            if ((this.GetPhysicsCalculationMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhysicsCalculationMasterCompleted(this, new GetPhysicsCalculationMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPhysicsCalculationDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPhysicsCalculationDetail(string case_no, int course_no, string phase_no, int plan_no) {
            object[] results = this.Invoke("GetPhysicsCalculationDetail", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhysicsCalculationDetailAsync(string case_no, int course_no, string phase_no, int plan_no) {
            this.GetPhysicsCalculationDetailAsync(case_no, course_no, phase_no, plan_no, null);
        }
        
        /// <remarks/>
        public void GetPhysicsCalculationDetailAsync(string case_no, int course_no, string phase_no, int plan_no, object userState) {
            if ((this.GetPhysicsCalculationDetailOperationCompleted == null)) {
                this.GetPhysicsCalculationDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhysicsCalculationDetailOperationCompleted);
            }
            this.InvokeAsync("GetPhysicsCalculationDetail", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no}, this.GetPhysicsCalculationDetailOperationCompleted, userState);
        }
        
        private void OnGetPhysicsCalculationDetailOperationCompleted(object arg) {
            if ((this.GetPhysicsCalculationDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhysicsCalculationDetailCompleted(this, new GetPhysicsCalculationDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPhysicsCalculationMain2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPhysicsCalculationMain2(string case_no, int course_no, string phase_no, int plan_no) {
            object[] results = this.Invoke("GetPhysicsCalculationMain2", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhysicsCalculationMain2Async(string case_no, int course_no, string phase_no, int plan_no) {
            this.GetPhysicsCalculationMain2Async(case_no, course_no, phase_no, plan_no, null);
        }
        
        /// <remarks/>
        public void GetPhysicsCalculationMain2Async(string case_no, int course_no, string phase_no, int plan_no, object userState) {
            if ((this.GetPhysicsCalculationMain2OperationCompleted == null)) {
                this.GetPhysicsCalculationMain2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhysicsCalculationMain2OperationCompleted);
            }
            this.InvokeAsync("GetPhysicsCalculationMain2", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no}, this.GetPhysicsCalculationMain2OperationCompleted, userState);
        }
        
        private void OnGetPhysicsCalculationMain2OperationCompleted(object arg) {
            if ((this.GetPhysicsCalculationMain2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhysicsCalculationMain2Completed(this, new GetPhysicsCalculationMain2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPhysicsCalculationDetail2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPhysicsCalculationDetail2(string case_no, int course_no, string phase_no, int plan_no) {
            object[] results = this.Invoke("GetPhysicsCalculationDetail2", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhysicsCalculationDetail2Async(string case_no, int course_no, string phase_no, int plan_no) {
            this.GetPhysicsCalculationDetail2Async(case_no, course_no, phase_no, plan_no, null);
        }
        
        /// <remarks/>
        public void GetPhysicsCalculationDetail2Async(string case_no, int course_no, string phase_no, int plan_no, object userState) {
            if ((this.GetPhysicsCalculationDetail2OperationCompleted == null)) {
                this.GetPhysicsCalculationDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhysicsCalculationDetail2OperationCompleted);
            }
            this.InvokeAsync("GetPhysicsCalculationDetail2", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no}, this.GetPhysicsCalculationDetail2OperationCompleted, userState);
        }
        
        private void OnGetPhysicsCalculationDetail2OperationCompleted(object arg) {
            if ((this.GetPhysicsCalculationDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhysicsCalculationDetail2Completed(this, new GetPhysicsCalculationDetail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRadiationTreatmentMaster1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRadiationTreatmentMaster1(string case_no, int course_no, string phase_no) {
            object[] results = this.Invoke("GetRadiationTreatmentMaster1", new object[] {
                        case_no,
                        course_no,
                        phase_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadiationTreatmentMaster1Async(string case_no, int course_no, string phase_no) {
            this.GetRadiationTreatmentMaster1Async(case_no, course_no, phase_no, null);
        }
        
        /// <remarks/>
        public void GetRadiationTreatmentMaster1Async(string case_no, int course_no, string phase_no, object userState) {
            if ((this.GetRadiationTreatmentMaster1OperationCompleted == null)) {
                this.GetRadiationTreatmentMaster1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadiationTreatmentMaster1OperationCompleted);
            }
            this.InvokeAsync("GetRadiationTreatmentMaster1", new object[] {
                        case_no,
                        course_no,
                        phase_no}, this.GetRadiationTreatmentMaster1OperationCompleted, userState);
        }
        
        private void OnGetRadiationTreatmentMaster1OperationCompleted(object arg) {
            if ((this.GetRadiationTreatmentMaster1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadiationTreatmentMaster1Completed(this, new GetRadiationTreatmentMaster1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEMRTreatmentDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEMRTreatmentDetails(string ipAddress, string caseNo, string treatNo) {
            object[] results = this.Invoke("GetEMRTreatmentDetails", new object[] {
                        ipAddress,
                        caseNo,
                        treatNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMRTreatmentDetailsAsync(string ipAddress, string caseNo, string treatNo) {
            this.GetEMRTreatmentDetailsAsync(ipAddress, caseNo, treatNo, null);
        }
        
        /// <remarks/>
        public void GetEMRTreatmentDetailsAsync(string ipAddress, string caseNo, string treatNo, object userState) {
            if ((this.GetEMRTreatmentDetailsOperationCompleted == null)) {
                this.GetEMRTreatmentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMRTreatmentDetailsOperationCompleted);
            }
            this.InvokeAsync("GetEMRTreatmentDetails", new object[] {
                        ipAddress,
                        caseNo,
                        treatNo}, this.GetEMRTreatmentDetailsOperationCompleted, userState);
        }
        
        private void OnGetEMRTreatmentDetailsOperationCompleted(object arg) {
            if ((this.GetEMRTreatmentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMRTreatmentDetailsCompleted(this, new GetEMRTreatmentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRotPlan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRotPlan(string caseNo, int courseNo, string phase, string planNo) {
            object[] results = this.Invoke("GetRotPlan", new object[] {
                        caseNo,
                        courseNo,
                        phase,
                        planNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRotPlanAsync(string caseNo, int courseNo, string phase, string planNo) {
            this.GetRotPlanAsync(caseNo, courseNo, phase, planNo, null);
        }
        
        /// <remarks/>
        public void GetRotPlanAsync(string caseNo, int courseNo, string phase, string planNo, object userState) {
            if ((this.GetRotPlanOperationCompleted == null)) {
                this.GetRotPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRotPlanOperationCompleted);
            }
            this.InvokeAsync("GetRotPlan", new object[] {
                        caseNo,
                        courseNo,
                        phase,
                        planNo}, this.GetRotPlanOperationCompleted, userState);
        }
        
        private void OnGetRotPlanOperationCompleted(object arg) {
            if ((this.GetRotPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRotPlanCompleted(this, new GetRotPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRomdmgdoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRomdmgdoc(string docCode, string dmgCode) {
            object[] results = this.Invoke("GetRomdmgdoc", new object[] {
                        docCode,
                        dmgCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRomdmgdocAsync(string docCode, string dmgCode) {
            this.GetRomdmgdocAsync(docCode, dmgCode, null);
        }
        
        /// <remarks/>
        public void GetRomdmgdocAsync(string docCode, string dmgCode, object userState) {
            if ((this.GetRomdmgdocOperationCompleted == null)) {
                this.GetRomdmgdocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRomdmgdocOperationCompleted);
            }
            this.InvokeAsync("GetRomdmgdoc", new object[] {
                        docCode,
                        dmgCode}, this.GetRomdmgdocOperationCompleted, userState);
        }
        
        private void OnGetRomdmgdocOperationCompleted(object arg) {
            if ((this.GetRomdmgdocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRomdmgdocCompleted(this, new GetRomdmgdocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRomdmgunt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRomdmgunt(string dmgCode1) {
            object[] results = this.Invoke("GetRomdmgunt", new object[] {
                        dmgCode1});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRomdmguntAsync(string dmgCode1) {
            this.GetRomdmguntAsync(dmgCode1, null);
        }
        
        /// <remarks/>
        public void GetRomdmguntAsync(string dmgCode1, object userState) {
            if ((this.GetRomdmguntOperationCompleted == null)) {
                this.GetRomdmguntOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRomdmguntOperationCompleted);
            }
            this.InvokeAsync("GetRomdmgunt", new object[] {
                        dmgCode1}, this.GetRomdmguntOperationCompleted, userState);
        }
        
        private void OnGetRomdmguntOperationCompleted(object arg) {
            if ((this.GetRomdmguntCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRomdmguntCompleted(this, new GetRomdmguntCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTreatmentMasterData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTreatmentMasterData(string case_no, int course_no, string phase_no, int plan_no) {
            object[] results = this.Invoke("GetTreatmentMasterData", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreatmentMasterDataAsync(string case_no, int course_no, string phase_no, int plan_no) {
            this.GetTreatmentMasterDataAsync(case_no, course_no, phase_no, plan_no, null);
        }
        
        /// <remarks/>
        public void GetTreatmentMasterDataAsync(string case_no, int course_no, string phase_no, int plan_no, object userState) {
            if ((this.GetTreatmentMasterDataOperationCompleted == null)) {
                this.GetTreatmentMasterDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreatmentMasterDataOperationCompleted);
            }
            this.InvokeAsync("GetTreatmentMasterData", new object[] {
                        case_no,
                        course_no,
                        phase_no,
                        plan_no}, this.GetTreatmentMasterDataOperationCompleted, userState);
        }
        
        private void OnGetTreatmentMasterDataOperationCompleted(object arg) {
            if ((this.GetTreatmentMasterDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreatmentMasterDataCompleted(this, new GetTreatmentMasterDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSurgeryRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSurgeryRecord(string surg_no, string case_no, string d_type) {
            object[] results = this.Invoke("GetSurgeryRecord", new object[] {
                        surg_no,
                        case_no,
                        d_type});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSurgeryRecordAsync(string surg_no, string case_no, string d_type) {
            this.GetSurgeryRecordAsync(surg_no, case_no, d_type, null);
        }
        
        /// <remarks/>
        public void GetSurgeryRecordAsync(string surg_no, string case_no, string d_type, object userState) {
            if ((this.GetSurgeryRecordOperationCompleted == null)) {
                this.GetSurgeryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSurgeryRecordOperationCompleted);
            }
            this.InvokeAsync("GetSurgeryRecord", new object[] {
                        surg_no,
                        case_no,
                        d_type}, this.GetSurgeryRecordOperationCompleted, userState);
        }
        
        private void OnGetSurgeryRecordOperationCompleted(object arg) {
            if ((this.GetSurgeryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSurgeryRecordCompleted(this, new GetSurgeryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSurgeryHeaderRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSurgeryHeaderRecord(string surg_no, string case_no, string d_type) {
            object[] results = this.Invoke("GetSurgeryHeaderRecord", new object[] {
                        surg_no,
                        case_no,
                        d_type});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSurgeryHeaderRecordAsync(string surg_no, string case_no, string d_type) {
            this.GetSurgeryHeaderRecordAsync(surg_no, case_no, d_type, null);
        }
        
        /// <remarks/>
        public void GetSurgeryHeaderRecordAsync(string surg_no, string case_no, string d_type, object userState) {
            if ((this.GetSurgeryHeaderRecordOperationCompleted == null)) {
                this.GetSurgeryHeaderRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSurgeryHeaderRecordOperationCompleted);
            }
            this.InvokeAsync("GetSurgeryHeaderRecord", new object[] {
                        surg_no,
                        case_no,
                        d_type}, this.GetSurgeryHeaderRecordOperationCompleted, userState);
        }
        
        private void OnGetSurgeryHeaderRecordOperationCompleted(object arg) {
            if ((this.GetSurgeryHeaderRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSurgeryHeaderRecordCompleted(this, new GetSurgeryHeaderRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRadiationTreatmentDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRadiationTreatmentDetail(string TNO, string RTDATE, string TYPEID) {
            object[] results = this.Invoke("GetRadiationTreatmentDetail", new object[] {
                        TNO,
                        RTDATE,
                        TYPEID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadiationTreatmentDetailAsync(string TNO, string RTDATE, string TYPEID) {
            this.GetRadiationTreatmentDetailAsync(TNO, RTDATE, TYPEID, null);
        }
        
        /// <remarks/>
        public void GetRadiationTreatmentDetailAsync(string TNO, string RTDATE, string TYPEID, object userState) {
            if ((this.GetRadiationTreatmentDetailOperationCompleted == null)) {
                this.GetRadiationTreatmentDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadiationTreatmentDetailOperationCompleted);
            }
            this.InvokeAsync("GetRadiationTreatmentDetail", new object[] {
                        TNO,
                        RTDATE,
                        TYPEID}, this.GetRadiationTreatmentDetailOperationCompleted, userState);
        }
        
        private void OnGetRadiationTreatmentDetailOperationCompleted(object arg) {
            if ((this.GetRadiationTreatmentDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadiationTreatmentDetailCompleted(this, new GetRadiationTreatmentDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRadiationTreatmentDetail1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRadiationTreatmentDetail1(string TNO, string RTDATE, string TYPEID) {
            object[] results = this.Invoke("GetRadiationTreatmentDetail1", new object[] {
                        TNO,
                        RTDATE,
                        TYPEID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadiationTreatmentDetail1Async(string TNO, string RTDATE, string TYPEID) {
            this.GetRadiationTreatmentDetail1Async(TNO, RTDATE, TYPEID, null);
        }
        
        /// <remarks/>
        public void GetRadiationTreatmentDetail1Async(string TNO, string RTDATE, string TYPEID, object userState) {
            if ((this.GetRadiationTreatmentDetail1OperationCompleted == null)) {
                this.GetRadiationTreatmentDetail1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadiationTreatmentDetail1OperationCompleted);
            }
            this.InvokeAsync("GetRadiationTreatmentDetail1", new object[] {
                        TNO,
                        RTDATE,
                        TYPEID}, this.GetRadiationTreatmentDetail1OperationCompleted, userState);
        }
        
        private void OnGetRadiationTreatmentDetail1OperationCompleted(object arg) {
            if ((this.GetRadiationTreatmentDetail1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadiationTreatmentDetail1Completed(this, new GetRadiationTreatmentDetail1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCPlanNumbers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCPlanNumbers(string case_no, string cmbJCNO) {
            object[] results = this.Invoke("GetAllCPlanNumbers", new object[] {
                        case_no,
                        cmbJCNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCPlanNumbersAsync(string case_no, string cmbJCNO) {
            this.GetAllCPlanNumbersAsync(case_no, cmbJCNO, null);
        }
        
        /// <remarks/>
        public void GetAllCPlanNumbersAsync(string case_no, string cmbJCNO, object userState) {
            if ((this.GetAllCPlanNumbersOperationCompleted == null)) {
                this.GetAllCPlanNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCPlanNumbersOperationCompleted);
            }
            this.InvokeAsync("GetAllCPlanNumbers", new object[] {
                        case_no,
                        cmbJCNO}, this.GetAllCPlanNumbersOperationCompleted, userState);
        }
        
        private void OnGetAllCPlanNumbersOperationCompleted(object arg) {
            if ((this.GetAllCPlanNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCPlanNumbersCompleted(this, new GetAllCPlanNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTASSESSM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetROTASSESSM(string userId, string TNO, string RTDATE, string TYPEID) {
            object[] results = this.Invoke("GetROTASSESSM", new object[] {
                        userId,
                        TNO,
                        RTDATE,
                        TYPEID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTASSESSMAsync(string userId, string TNO, string RTDATE, string TYPEID) {
            this.GetROTASSESSMAsync(userId, TNO, RTDATE, TYPEID, null);
        }
        
        /// <remarks/>
        public void GetROTASSESSMAsync(string userId, string TNO, string RTDATE, string TYPEID, object userState) {
            if ((this.GetROTASSESSMOperationCompleted == null)) {
                this.GetROTASSESSMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTASSESSMOperationCompleted);
            }
            this.InvokeAsync("GetROTASSESSM", new object[] {
                        userId,
                        TNO,
                        RTDATE,
                        TYPEID}, this.GetROTASSESSMOperationCompleted, userState);
        }
        
        private void OnGetROTASSESSMOperationCompleted(object arg) {
            if ((this.GetROTASSESSMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTASSESSMCompleted(this, new GetROTASSESSMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTAS_REAC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetROTAS_REAC(string userId, string TNO, string TYPEID) {
            object[] results = this.Invoke("GetROTAS_REAC", new object[] {
                        userId,
                        TNO,
                        TYPEID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTAS_REACAsync(string userId, string TNO, string TYPEID) {
            this.GetROTAS_REACAsync(userId, TNO, TYPEID, null);
        }
        
        /// <remarks/>
        public void GetROTAS_REACAsync(string userId, string TNO, string TYPEID, object userState) {
            if ((this.GetROTAS_REACOperationCompleted == null)) {
                this.GetROTAS_REACOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTAS_REACOperationCompleted);
            }
            this.InvokeAsync("GetROTAS_REAC", new object[] {
                        userId,
                        TNO,
                        TYPEID}, this.GetROTAS_REACOperationCompleted, userState);
        }
        
        private void OnGetROTAS_REACOperationCompleted(object arg) {
            if ((this.GetROTAS_REACCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTAS_REACCompleted(this, new GetROTAS_REACCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTCLAUDIT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetROTCLAUDIT(string userId, string TNO, string RTDATE, string TYPEID) {
            object[] results = this.Invoke("GetROTCLAUDIT", new object[] {
                        userId,
                        TNO,
                        RTDATE,
                        TYPEID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTCLAUDITAsync(string userId, string TNO, string RTDATE, string TYPEID) {
            this.GetROTCLAUDITAsync(userId, TNO, RTDATE, TYPEID, null);
        }
        
        /// <remarks/>
        public void GetROTCLAUDITAsync(string userId, string TNO, string RTDATE, string TYPEID, object userState) {
            if ((this.GetROTCLAUDITOperationCompleted == null)) {
                this.GetROTCLAUDITOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTCLAUDITOperationCompleted);
            }
            this.InvokeAsync("GetROTCLAUDIT", new object[] {
                        userId,
                        TNO,
                        RTDATE,
                        TYPEID}, this.GetROTCLAUDITOperationCompleted, userState);
        }
        
        private void OnGetROTCLAUDITOperationCompleted(object arg) {
            if ((this.GetROTCLAUDITCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTCLAUDITCompleted(this, new GetROTCLAUDITCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTDiagns", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTDiagns(string case_no) {
            object[] results = this.Invoke("GetCTDiagns", new object[] {
                        case_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTDiagnsAsync(string case_no) {
            this.GetCTDiagnsAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetCTDiagnsAsync(string case_no, object userState) {
            if ((this.GetCTDiagnsOperationCompleted == null)) {
                this.GetCTDiagnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTDiagnsOperationCompleted);
            }
            this.InvokeAsync("GetCTDiagns", new object[] {
                        case_no}, this.GetCTDiagnsOperationCompleted, userState);
        }
        
        private void OnGetCTDiagnsOperationCompleted(object arg) {
            if ((this.GetCTDiagnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTDiagnsCompleted(this, new GetCTDiagnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompletedBrachyNos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCompletedBrachyNos(string case_no, string dbName) {
            object[] results = this.Invoke("GetCompletedBrachyNos", new object[] {
                        case_no,
                        dbName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompletedBrachyNosAsync(string case_no, string dbName) {
            this.GetCompletedBrachyNosAsync(case_no, dbName, null);
        }
        
        /// <remarks/>
        public void GetCompletedBrachyNosAsync(string case_no, string dbName, object userState) {
            if ((this.GetCompletedBrachyNosOperationCompleted == null)) {
                this.GetCompletedBrachyNosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompletedBrachyNosOperationCompleted);
            }
            this.InvokeAsync("GetCompletedBrachyNos", new object[] {
                        case_no,
                        dbName}, this.GetCompletedBrachyNosOperationCompleted, userState);
        }
        
        private void OnGetCompletedBrachyNosOperationCompleted(object arg) {
            if ((this.GetCompletedBrachyNosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompletedBrachyNosCompleted(this, new GetCompletedBrachyNosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTTREAT_DSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetROTTREAT_DSummary(string radio_no) {
            object[] results = this.Invoke("GetROTTREAT_DSummary", new object[] {
                        radio_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTTREAT_DSummaryAsync(string radio_no) {
            this.GetROTTREAT_DSummaryAsync(radio_no, null);
        }
        
        /// <remarks/>
        public void GetROTTREAT_DSummaryAsync(string radio_no, object userState) {
            if ((this.GetROTTREAT_DSummaryOperationCompleted == null)) {
                this.GetROTTREAT_DSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTTREAT_DSummaryOperationCompleted);
            }
            this.InvokeAsync("GetROTTREAT_DSummary", new object[] {
                        radio_no}, this.GetROTTREAT_DSummaryOperationCompleted, userState);
        }
        
        private void OnGetROTTREAT_DSummaryOperationCompleted(object arg) {
            if ((this.GetROTTREAT_DSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTTREAT_DSummaryCompleted(this, new GetROTTREAT_DSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTTREAT_M", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetROTTREAT_M(string radio_no) {
            object[] results = this.Invoke("GetROTTREAT_M", new object[] {
                        radio_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTTREAT_MAsync(string radio_no) {
            this.GetROTTREAT_MAsync(radio_no, null);
        }
        
        /// <remarks/>
        public void GetROTTREAT_MAsync(string radio_no, object userState) {
            if ((this.GetROTTREAT_MOperationCompleted == null)) {
                this.GetROTTREAT_MOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTTREAT_MOperationCompleted);
            }
            this.InvokeAsync("GetROTTREAT_M", new object[] {
                        radio_no}, this.GetROTTREAT_MOperationCompleted, userState);
        }
        
        private void OnGetROTTREAT_MOperationCompleted(object arg) {
            if ((this.GetROTTREAT_MCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTTREAT_MCompleted(this, new GetROTTREAT_MCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTPLAN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetROTPLAN(string case_no, string jcno, string courseno, string phaseno, string planno) {
            object[] results = this.Invoke("GetROTPLAN", new object[] {
                        case_no,
                        jcno,
                        courseno,
                        phaseno,
                        planno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTPLANAsync(string case_no, string jcno, string courseno, string phaseno, string planno) {
            this.GetROTPLANAsync(case_no, jcno, courseno, phaseno, planno, null);
        }
        
        /// <remarks/>
        public void GetROTPLANAsync(string case_no, string jcno, string courseno, string phaseno, string planno, object userState) {
            if ((this.GetROTPLANOperationCompleted == null)) {
                this.GetROTPLANOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTPLANOperationCompleted);
            }
            this.InvokeAsync("GetROTPLAN", new object[] {
                        case_no,
                        jcno,
                        courseno,
                        phaseno,
                        planno}, this.GetROTPLANOperationCompleted, userState);
        }
        
        private void OnGetROTPLANOperationCompleted(object arg) {
            if ((this.GetROTPLANCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTPLANCompleted(this, new GetROTPLANCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTBEAM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetROTBEAM(string case_no, string jcno, string courseno, string phaseno, string planno) {
            object[] results = this.Invoke("GetROTBEAM", new object[] {
                        case_no,
                        jcno,
                        courseno,
                        phaseno,
                        planno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTBEAMAsync(string case_no, string jcno, string courseno, string phaseno, string planno) {
            this.GetROTBEAMAsync(case_no, jcno, courseno, phaseno, planno, null);
        }
        
        /// <remarks/>
        public void GetROTBEAMAsync(string case_no, string jcno, string courseno, string phaseno, string planno, object userState) {
            if ((this.GetROTBEAMOperationCompleted == null)) {
                this.GetROTBEAMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTBEAMOperationCompleted);
            }
            this.InvokeAsync("GetROTBEAM", new object[] {
                        case_no,
                        jcno,
                        courseno,
                        phaseno,
                        planno}, this.GetROTBEAMOperationCompleted, userState);
        }
        
        private void OnGetROTBEAMOperationCompleted(object arg) {
            if ((this.GetROTBEAMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTBEAMCompleted(this, new GetROTBEAMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROMDMGDOC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetROMDMGDOC(string doccode) {
            object[] results = this.Invoke("GetROMDMGDOC", new object[] {
                        doccode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetROMDMGDOCAsync(string doccode) {
            this.GetROMDMGDOCAsync(doccode, null);
        }
        
        /// <remarks/>
        public void GetROMDMGDOCAsync(string doccode, object userState) {
            if ((this.GetROMDMGDOCOperationCompleted == null)) {
                this.GetROMDMGDOCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROMDMGDOCOperationCompleted);
            }
            this.InvokeAsync("GetROMDMGDOC", new object[] {
                        doccode}, this.GetROMDMGDOCOperationCompleted, userState);
        }
        
        private void OnGetROMDMGDOCOperationCompleted(object arg) {
            if ((this.GetROMDMGDOCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROMDMGDOCCompleted(this, new GetROMDMGDOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROMDMGUNT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetROMDMGUNT(string unitcode) {
            object[] results = this.Invoke("GetROMDMGUNT", new object[] {
                        unitcode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetROMDMGUNTAsync(string unitcode) {
            this.GetROMDMGUNTAsync(unitcode, null);
        }
        
        /// <remarks/>
        public void GetROMDMGUNTAsync(string unitcode, object userState) {
            if ((this.GetROMDMGUNTOperationCompleted == null)) {
                this.GetROMDMGUNTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROMDMGUNTOperationCompleted);
            }
            this.InvokeAsync("GetROMDMGUNT", new object[] {
                        unitcode}, this.GetROMDMGUNTOperationCompleted, userState);
        }
        
        private void OnGetROMDMGUNTOperationCompleted(object arg) {
            if ((this.GetROMDMGUNTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROMDMGUNTCompleted(this, new GetROMDMGUNTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTPLANENG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetROTPLANENG(string case_no, string jcno, string courseno, string phaseno, string planno) {
            object[] results = this.Invoke("GetROTPLANENG", new object[] {
                        case_no,
                        jcno,
                        courseno,
                        phaseno,
                        planno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTPLANENGAsync(string case_no, string jcno, string courseno, string phaseno, string planno) {
            this.GetROTPLANENGAsync(case_no, jcno, courseno, phaseno, planno, null);
        }
        
        /// <remarks/>
        public void GetROTPLANENGAsync(string case_no, string jcno, string courseno, string phaseno, string planno, object userState) {
            if ((this.GetROTPLANENGOperationCompleted == null)) {
                this.GetROTPLANENGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTPLANENGOperationCompleted);
            }
            this.InvokeAsync("GetROTPLANENG", new object[] {
                        case_no,
                        jcno,
                        courseno,
                        phaseno,
                        planno}, this.GetROTPLANENGOperationCompleted, userState);
        }
        
        private void OnGetROTPLANENGOperationCompleted(object arg) {
            if ((this.GetROTPLANENGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTPLANENGCompleted(this, new GetROTPLANENGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTTREAT_PhI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetROTTREAT_PhI(string radio_no) {
            object[] results = this.Invoke("GetROTTREAT_PhI", new object[] {
                        radio_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTTREAT_PhIAsync(string radio_no) {
            this.GetROTTREAT_PhIAsync(radio_no, null);
        }
        
        /// <remarks/>
        public void GetROTTREAT_PhIAsync(string radio_no, object userState) {
            if ((this.GetROTTREAT_PhIOperationCompleted == null)) {
                this.GetROTTREAT_PhIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTTREAT_PhIOperationCompleted);
            }
            this.InvokeAsync("GetROTTREAT_PhI", new object[] {
                        radio_no}, this.GetROTTREAT_PhIOperationCompleted, userState);
        }
        
        private void OnGetROTTREAT_PhIOperationCompleted(object arg) {
            if ((this.GetROTTREAT_PhICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTTREAT_PhICompleted(this, new GetROTTREAT_PhICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTTREAT_PhII", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetROTTREAT_PhII(string radio_no) {
            object[] results = this.Invoke("GetROTTREAT_PhII", new object[] {
                        radio_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTTREAT_PhIIAsync(string radio_no) {
            this.GetROTTREAT_PhIIAsync(radio_no, null);
        }
        
        /// <remarks/>
        public void GetROTTREAT_PhIIAsync(string radio_no, object userState) {
            if ((this.GetROTTREAT_PhIIOperationCompleted == null)) {
                this.GetROTTREAT_PhIIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTTREAT_PhIIOperationCompleted);
            }
            this.InvokeAsync("GetROTTREAT_PhII", new object[] {
                        radio_no}, this.GetROTTREAT_PhIIOperationCompleted, userState);
        }
        
        private void OnGetROTTREAT_PhIIOperationCompleted(object arg) {
            if ((this.GetROTTREAT_PhIICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTTREAT_PhIICompleted(this, new GetROTTREAT_PhIICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTTREAT_PhIII", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetROTTREAT_PhIII(string radio_no) {
            object[] results = this.Invoke("GetROTTREAT_PhIII", new object[] {
                        radio_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTTREAT_PhIIIAsync(string radio_no) {
            this.GetROTTREAT_PhIIIAsync(radio_no, null);
        }
        
        /// <remarks/>
        public void GetROTTREAT_PhIIIAsync(string radio_no, object userState) {
            if ((this.GetROTTREAT_PhIIIOperationCompleted == null)) {
                this.GetROTTREAT_PhIIIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTTREAT_PhIIIOperationCompleted);
            }
            this.InvokeAsync("GetROTTREAT_PhIII", new object[] {
                        radio_no}, this.GetROTTREAT_PhIIIOperationCompleted, userState);
        }
        
        private void OnGetROTTREAT_PhIIIOperationCompleted(object arg) {
            if ((this.GetROTTREAT_PhIIICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTTREAT_PhIIICompleted(this, new GetROTTREAT_PhIIICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTAS_REAC1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetROTAS_REAC1(string radio_no) {
            object[] results = this.Invoke("GetROTAS_REAC1", new object[] {
                        radio_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTAS_REAC1Async(string radio_no) {
            this.GetROTAS_REAC1Async(radio_no, null);
        }
        
        /// <remarks/>
        public void GetROTAS_REAC1Async(string radio_no, object userState) {
            if ((this.GetROTAS_REAC1OperationCompleted == null)) {
                this.GetROTAS_REAC1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTAS_REAC1OperationCompleted);
            }
            this.InvokeAsync("GetROTAS_REAC1", new object[] {
                        radio_no}, this.GetROTAS_REAC1OperationCompleted, userState);
        }
        
        private void OnGetROTAS_REAC1OperationCompleted(object arg) {
            if ((this.GetROTAS_REAC1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTAS_REAC1Completed(this, new GetROTAS_REAC1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMTDistDet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMTDistDet(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string DistDrug_drugname) {
            object[] results = this.Invoke("GetMTDistDet", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo,
                        DistDrug_drugname});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMTDistDetAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string DistDrug_drugname) {
            this.GetMTDistDetAsync(case_no, JCPlan_jcno, CPPlan_CPNo, DistDrug_drugname, null);
        }
        
        /// <remarks/>
        public void GetMTDistDetAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string DistDrug_drugname, object userState) {
            if ((this.GetMTDistDetOperationCompleted == null)) {
                this.GetMTDistDetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMTDistDetOperationCompleted);
            }
            this.InvokeAsync("GetMTDistDet", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo,
                        DistDrug_drugname}, this.GetMTDistDetOperationCompleted, userState);
        }
        
        private void OnGetMTDistDetOperationCompleted(object arg) {
            if ((this.GetMTDistDetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMTDistDetCompleted(this, new GetMTDistDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMedTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMedTypes(string case_no, string JCPlan_jcno, string CPPlan_CPNo) {
            object[] results = this.Invoke("GetMedTypes", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMedTypesAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo) {
            this.GetMedTypesAsync(case_no, JCPlan_jcno, CPPlan_CPNo, null);
        }
        
        /// <remarks/>
        public void GetMedTypesAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, object userState) {
            if ((this.GetMedTypesOperationCompleted == null)) {
                this.GetMedTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedTypesOperationCompleted);
            }
            this.InvokeAsync("GetMedTypes", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo}, this.GetMedTypesOperationCompleted, userState);
        }
        
        private void OnGetMedTypesOperationCompleted(object arg) {
            if ((this.GetMedTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedTypesCompleted(this, new GetMedTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAssessmentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAssessmentData(string radio_no) {
            object[] results = this.Invoke("GetAssessmentData", new object[] {
                        radio_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssessmentDataAsync(string radio_no) {
            this.GetAssessmentDataAsync(radio_no, null);
        }
        
        /// <remarks/>
        public void GetAssessmentDataAsync(string radio_no, object userState) {
            if ((this.GetAssessmentDataOperationCompleted == null)) {
                this.GetAssessmentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssessmentDataOperationCompleted);
            }
            this.InvokeAsync("GetAssessmentData", new object[] {
                        radio_no}, this.GetAssessmentDataOperationCompleted, userState);
        }
        
        private void OnGetAssessmentDataOperationCompleted(object arg) {
            if ((this.GetAssessmentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssessmentDataCompleted(this, new GetAssessmentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTTTRTExceptIndex4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteTTTRTExceptIndex4(string userIPAddress, string caseNo, string treatNo) {
            object[] results = this.Invoke("DeleteTTTRTExceptIndex4", new object[] {
                        userIPAddress,
                        caseNo,
                        treatNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTTTRTExceptIndex4Async(string userIPAddress, string caseNo, string treatNo) {
            this.DeleteTTTRTExceptIndex4Async(userIPAddress, caseNo, treatNo, null);
        }
        
        /// <remarks/>
        public void DeleteTTTRTExceptIndex4Async(string userIPAddress, string caseNo, string treatNo, object userState) {
            if ((this.DeleteTTTRTExceptIndex4OperationCompleted == null)) {
                this.DeleteTTTRTExceptIndex4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTTTRTExceptIndex4OperationCompleted);
            }
            this.InvokeAsync("DeleteTTTRTExceptIndex4", new object[] {
                        userIPAddress,
                        caseNo,
                        treatNo}, this.DeleteTTTRTExceptIndex4OperationCompleted, userState);
        }
        
        private void OnDeleteTTTRTExceptIndex4OperationCompleted(object arg) {
            if ((this.DeleteTTTRTExceptIndex4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTTTRTExceptIndex4Completed(this, new DeleteTTTRTExceptIndex4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertIntoTTTRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertIntoTTTRT(string userIPAddress, string caseNo, string treatNo, string treatmentDate, string treatmentNo) {
            object[] results = this.Invoke("InsertIntoTTTRT", new object[] {
                        userIPAddress,
                        caseNo,
                        treatNo,
                        treatmentDate,
                        treatmentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertIntoTTTRTAsync(string userIPAddress, string caseNo, string treatNo, string treatmentDate, string treatmentNo) {
            this.InsertIntoTTTRTAsync(userIPAddress, caseNo, treatNo, treatmentDate, treatmentNo, null);
        }
        
        /// <remarks/>
        public void InsertIntoTTTRTAsync(string userIPAddress, string caseNo, string treatNo, string treatmentDate, string treatmentNo, object userState) {
            if ((this.InsertIntoTTTRTOperationCompleted == null)) {
                this.InsertIntoTTTRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIntoTTTRTOperationCompleted);
            }
            this.InvokeAsync("InsertIntoTTTRT", new object[] {
                        userIPAddress,
                        caseNo,
                        treatNo,
                        treatmentDate,
                        treatmentNo}, this.InsertIntoTTTRTOperationCompleted, userState);
        }
        
        private void OnInsertIntoTTTRTOperationCompleted(object arg) {
            if ((this.InsertIntoTTTRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertIntoTTTRTCompleted(this, new InsertIntoTTTRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAssessmentIntoTTTRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAssessmentIntoTTTRT(string userIPAddress, string caseNo, string treatNo, string assessDate, string assessNo) {
            object[] results = this.Invoke("InsertAssessmentIntoTTTRT", new object[] {
                        userIPAddress,
                        caseNo,
                        treatNo,
                        assessDate,
                        assessNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAssessmentIntoTTTRTAsync(string userIPAddress, string caseNo, string treatNo, string assessDate, string assessNo) {
            this.InsertAssessmentIntoTTTRTAsync(userIPAddress, caseNo, treatNo, assessDate, assessNo, null);
        }
        
        /// <remarks/>
        public void InsertAssessmentIntoTTTRTAsync(string userIPAddress, string caseNo, string treatNo, string assessDate, string assessNo, object userState) {
            if ((this.InsertAssessmentIntoTTTRTOperationCompleted == null)) {
                this.InsertAssessmentIntoTTTRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAssessmentIntoTTTRTOperationCompleted);
            }
            this.InvokeAsync("InsertAssessmentIntoTTTRT", new object[] {
                        userIPAddress,
                        caseNo,
                        treatNo,
                        assessDate,
                        assessNo}, this.InsertAssessmentIntoTTTRTOperationCompleted, userState);
        }
        
        private void OnInsertAssessmentIntoTTTRTOperationCompleted(object arg) {
            if ((this.InsertAssessmentIntoTTTRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAssessmentIntoTTTRTCompleted(this, new InsertAssessmentIntoTTTRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertClinicalAuditIntoTTTRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertClinicalAuditIntoTTTRT(string userIPAddress, string caseNo, string treatNo, string auditDate, string auditNo) {
            object[] results = this.Invoke("InsertClinicalAuditIntoTTTRT", new object[] {
                        userIPAddress,
                        caseNo,
                        treatNo,
                        auditDate,
                        auditNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertClinicalAuditIntoTTTRTAsync(string userIPAddress, string caseNo, string treatNo, string auditDate, string auditNo) {
            this.InsertClinicalAuditIntoTTTRTAsync(userIPAddress, caseNo, treatNo, auditDate, auditNo, null);
        }
        
        /// <remarks/>
        public void InsertClinicalAuditIntoTTTRTAsync(string userIPAddress, string caseNo, string treatNo, string auditDate, string auditNo, object userState) {
            if ((this.InsertClinicalAuditIntoTTTRTOperationCompleted == null)) {
                this.InsertClinicalAuditIntoTTTRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertClinicalAuditIntoTTTRTOperationCompleted);
            }
            this.InvokeAsync("InsertClinicalAuditIntoTTTRT", new object[] {
                        userIPAddress,
                        caseNo,
                        treatNo,
                        auditDate,
                        auditNo}, this.InsertClinicalAuditIntoTTTRTOperationCompleted, userState);
        }
        
        private void OnInsertClinicalAuditIntoTTTRTOperationCompleted(object arg) {
            if ((this.InsertClinicalAuditIntoTTTRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertClinicalAuditIntoTTTRTCompleted(this, new InsertClinicalAuditIntoTTTRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTTREAT_D", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetROTTREAT_D(string radioNo) {
            object[] results = this.Invoke("GetROTTREAT_D", new object[] {
                        radioNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTTREAT_DAsync(string radioNo) {
            this.GetROTTREAT_DAsync(radioNo, null);
        }
        
        /// <remarks/>
        public void GetROTTREAT_DAsync(string radioNo, object userState) {
            if ((this.GetROTTREAT_DOperationCompleted == null)) {
                this.GetROTTREAT_DOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTTREAT_DOperationCompleted);
            }
            this.InvokeAsync("GetROTTREAT_D", new object[] {
                        radioNo}, this.GetROTTREAT_DOperationCompleted, userState);
        }
        
        private void OnGetROTTREAT_DOperationCompleted(object arg) {
            if ((this.GetROTTREAT_DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTTREAT_DCompleted(this, new GetROTTREAT_DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTASSESSM1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetROTASSESSM1(string caseNo, string radioNo) {
            object[] results = this.Invoke("GetROTASSESSM1", new object[] {
                        caseNo,
                        radioNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTASSESSM1Async(string caseNo, string radioNo) {
            this.GetROTASSESSM1Async(caseNo, radioNo, null);
        }
        
        /// <remarks/>
        public void GetROTASSESSM1Async(string caseNo, string radioNo, object userState) {
            if ((this.GetROTASSESSM1OperationCompleted == null)) {
                this.GetROTASSESSM1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTASSESSM1OperationCompleted);
            }
            this.InvokeAsync("GetROTASSESSM1", new object[] {
                        caseNo,
                        radioNo}, this.GetROTASSESSM1OperationCompleted, userState);
        }
        
        private void OnGetROTASSESSM1OperationCompleted(object arg) {
            if ((this.GetROTASSESSM1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTASSESSM1Completed(this, new GetROTASSESSM1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROTCLAUDIT1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetROTCLAUDIT1(string caseNo, string radioNo) {
            object[] results = this.Invoke("GetROTCLAUDIT1", new object[] {
                        caseNo,
                        radioNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetROTCLAUDIT1Async(string caseNo, string radioNo) {
            this.GetROTCLAUDIT1Async(caseNo, radioNo, null);
        }
        
        /// <remarks/>
        public void GetROTCLAUDIT1Async(string caseNo, string radioNo, object userState) {
            if ((this.GetROTCLAUDIT1OperationCompleted == null)) {
                this.GetROTCLAUDIT1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetROTCLAUDIT1OperationCompleted);
            }
            this.InvokeAsync("GetROTCLAUDIT1", new object[] {
                        caseNo,
                        radioNo}, this.GetROTCLAUDIT1OperationCompleted, userState);
        }
        
        private void OnGetROTCLAUDIT1OperationCompleted(object arg) {
            if ((this.GetROTCLAUDIT1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetROTCLAUDIT1Completed(this, new GetROTCLAUDIT1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCPlans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCPlans(string caseNo, string jcNo) {
            object[] results = this.Invoke("GetCPlans", new object[] {
                        caseNo,
                        jcNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCPlansAsync(string caseNo, string jcNo) {
            this.GetCPlansAsync(caseNo, jcNo, null);
        }
        
        /// <remarks/>
        public void GetCPlansAsync(string caseNo, string jcNo, object userState) {
            if ((this.GetCPlansOperationCompleted == null)) {
                this.GetCPlansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCPlansOperationCompleted);
            }
            this.InvokeAsync("GetCPlans", new object[] {
                        caseNo,
                        jcNo}, this.GetCPlansOperationCompleted, userState);
        }
        
        private void OnGetCPlansOperationCompleted(object arg) {
            if ((this.GetCPlansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCPlansCompleted(this, new GetCPlansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJCNumbers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetJCNumbers(string caseNo, string jcNo) {
            object[] results = this.Invoke("GetJCNumbers", new object[] {
                        caseNo,
                        jcNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetJCNumbersAsync(string caseNo, string jcNo) {
            this.GetJCNumbersAsync(caseNo, jcNo, null);
        }
        
        /// <remarks/>
        public void GetJCNumbersAsync(string caseNo, string jcNo, object userState) {
            if ((this.GetJCNumbersOperationCompleted == null)) {
                this.GetJCNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJCNumbersOperationCompleted);
            }
            this.InvokeAsync("GetJCNumbers", new object[] {
                        caseNo,
                        jcNo}, this.GetJCNumbersOperationCompleted, userState);
        }
        
        private void OnGetJCNumbersOperationCompleted(object arg) {
            if ((this.GetJCNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJCNumbersCompleted(this, new GetJCNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCPlanListByJCNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCPlanListByJCNo(string caseNo, string jcNo, string cplanNo) {
            object[] results = this.Invoke("GetCPlanListByJCNo", new object[] {
                        caseNo,
                        jcNo,
                        cplanNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCPlanListByJCNoAsync(string caseNo, string jcNo, string cplanNo) {
            this.GetCPlanListByJCNoAsync(caseNo, jcNo, cplanNo, null);
        }
        
        /// <remarks/>
        public void GetCPlanListByJCNoAsync(string caseNo, string jcNo, string cplanNo, object userState) {
            if ((this.GetCPlanListByJCNoOperationCompleted == null)) {
                this.GetCPlanListByJCNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCPlanListByJCNoOperationCompleted);
            }
            this.InvokeAsync("GetCPlanListByJCNo", new object[] {
                        caseNo,
                        jcNo,
                        cplanNo}, this.GetCPlanListByJCNoOperationCompleted, userState);
        }
        
        private void OnGetCPlanListByJCNoOperationCompleted(object arg) {
            if ((this.GetCPlanListByJCNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCPlanListByJCNoCompleted(this, new GetCPlanListByJCNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTreatmentDateFromMTRCHEDRG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTreatmentDateFromMTRCHEDRG(string caseNo, string jcNo, string cplanNo, string drugName, int cycleNo, int dayNo, System.Data.DataTable dtDoseInfo, double drugModTotalDose) {
            object[] results = this.Invoke("GetTreatmentDateFromMTRCHEDRG", new object[] {
                        caseNo,
                        jcNo,
                        cplanNo,
                        drugName,
                        cycleNo,
                        dayNo,
                        dtDoseInfo,
                        drugModTotalDose});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreatmentDateFromMTRCHEDRGAsync(string caseNo, string jcNo, string cplanNo, string drugName, int cycleNo, int dayNo, System.Data.DataTable dtDoseInfo, double drugModTotalDose) {
            this.GetTreatmentDateFromMTRCHEDRGAsync(caseNo, jcNo, cplanNo, drugName, cycleNo, dayNo, dtDoseInfo, drugModTotalDose, null);
        }
        
        /// <remarks/>
        public void GetTreatmentDateFromMTRCHEDRGAsync(string caseNo, string jcNo, string cplanNo, string drugName, int cycleNo, int dayNo, System.Data.DataTable dtDoseInfo, double drugModTotalDose, object userState) {
            if ((this.GetTreatmentDateFromMTRCHEDRGOperationCompleted == null)) {
                this.GetTreatmentDateFromMTRCHEDRGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreatmentDateFromMTRCHEDRGOperationCompleted);
            }
            this.InvokeAsync("GetTreatmentDateFromMTRCHEDRG", new object[] {
                        caseNo,
                        jcNo,
                        cplanNo,
                        drugName,
                        cycleNo,
                        dayNo,
                        dtDoseInfo,
                        drugModTotalDose}, this.GetTreatmentDateFromMTRCHEDRGOperationCompleted, userState);
        }
        
        private void OnGetTreatmentDateFromMTRCHEDRGOperationCompleted(object arg) {
            if ((this.GetTreatmentDateFromMTRCHEDRGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreatmentDateFromMTRCHEDRGCompleted(this, new GetTreatmentDateFromMTRCHEDRGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistinctDrugNamesByMediType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDistinctDrugNamesByMediType(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string MEDITYPE) {
            object[] results = this.Invoke("GetDistinctDrugNamesByMediType", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo,
                        MEDITYPE});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistinctDrugNamesByMediTypeAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string MEDITYPE) {
            this.GetDistinctDrugNamesByMediTypeAsync(case_no, JCPlan_jcno, CPPlan_CPNo, MEDITYPE, null);
        }
        
        /// <remarks/>
        public void GetDistinctDrugNamesByMediTypeAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string MEDITYPE, object userState) {
            if ((this.GetDistinctDrugNamesByMediTypeOperationCompleted == null)) {
                this.GetDistinctDrugNamesByMediTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistinctDrugNamesByMediTypeOperationCompleted);
            }
            this.InvokeAsync("GetDistinctDrugNamesByMediType", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo,
                        MEDITYPE}, this.GetDistinctDrugNamesByMediTypeOperationCompleted, userState);
        }
        
        private void OnGetDistinctDrugNamesByMediTypeOperationCompleted(object arg) {
            if ((this.GetDistinctDrugNamesByMediTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistinctDrugNamesByMediTypeCompleted(this, new GetDistinctDrugNamesByMediTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCPlanByCaseAndJCNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCPlanByCaseAndJCNo(string case_no, string JCPlan_jcno, string CPLANNo) {
            object[] results = this.Invoke("GetCPlanByCaseAndJCNo", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPLANNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCPlanByCaseAndJCNoAsync(string case_no, string JCPlan_jcno, string CPLANNo) {
            this.GetCPlanByCaseAndJCNoAsync(case_no, JCPlan_jcno, CPLANNo, null);
        }
        
        /// <remarks/>
        public void GetCPlanByCaseAndJCNoAsync(string case_no, string JCPlan_jcno, string CPLANNo, object userState) {
            if ((this.GetCPlanByCaseAndJCNoOperationCompleted == null)) {
                this.GetCPlanByCaseAndJCNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCPlanByCaseAndJCNoOperationCompleted);
            }
            this.InvokeAsync("GetCPlanByCaseAndJCNo", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPLANNo}, this.GetCPlanByCaseAndJCNoOperationCompleted, userState);
        }
        
        private void OnGetCPlanByCaseAndJCNoOperationCompleted(object arg) {
            if ((this.GetCPlanByCaseAndJCNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCPlanByCaseAndJCNoCompleted(this, new GetCPlanByCaseAndJCNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJCNoByCaseNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetJCNoByCaseNo(string case_no, string JCno) {
            object[] results = this.Invoke("GetJCNoByCaseNo", new object[] {
                        case_no,
                        JCno});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetJCNoByCaseNoAsync(string case_no, string JCno) {
            this.GetJCNoByCaseNoAsync(case_no, JCno, null);
        }
        
        /// <remarks/>
        public void GetJCNoByCaseNoAsync(string case_no, string JCno, object userState) {
            if ((this.GetJCNoByCaseNoOperationCompleted == null)) {
                this.GetJCNoByCaseNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJCNoByCaseNoOperationCompleted);
            }
            this.InvokeAsync("GetJCNoByCaseNo", new object[] {
                        case_no,
                        JCno}, this.GetJCNoByCaseNoOperationCompleted, userState);
        }
        
        private void OnGetJCNoByCaseNoOperationCompleted(object arg) {
            if ((this.GetJCNoByCaseNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJCNoByCaseNoCompleted(this, new GetJCNoByCaseNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMTProInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMTProInfo(string case_no, string jcno, string CPNo) {
            object[] results = this.Invoke("GetMTProInfo", new object[] {
                        case_no,
                        jcno,
                        CPNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMTProInfoAsync(string case_no, string jcno, string CPNo) {
            this.GetMTProInfoAsync(case_no, jcno, CPNo, null);
        }
        
        /// <remarks/>
        public void GetMTProInfoAsync(string case_no, string jcno, string CPNo, object userState) {
            if ((this.GetMTProInfoOperationCompleted == null)) {
                this.GetMTProInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMTProInfoOperationCompleted);
            }
            this.InvokeAsync("GetMTProInfo", new object[] {
                        case_no,
                        jcno,
                        CPNo}, this.GetMTProInfoOperationCompleted, userState);
        }
        
        private void OnGetMTProInfoOperationCompleted(object arg) {
            if ((this.GetMTProInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMTProInfoCompleted(this, new GetMTProInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdverseEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAdverseEvent(string TOXICITY, string ADVERSE_EV) {
            object[] results = this.Invoke("GetAdverseEvent", new object[] {
                        TOXICITY,
                        ADVERSE_EV});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdverseEventAsync(string TOXICITY, string ADVERSE_EV) {
            this.GetAdverseEventAsync(TOXICITY, ADVERSE_EV, null);
        }
        
        /// <remarks/>
        public void GetAdverseEventAsync(string TOXICITY, string ADVERSE_EV, object userState) {
            if ((this.GetAdverseEventOperationCompleted == null)) {
                this.GetAdverseEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdverseEventOperationCompleted);
            }
            this.InvokeAsync("GetAdverseEvent", new object[] {
                        TOXICITY,
                        ADVERSE_EV}, this.GetAdverseEventOperationCompleted, userState);
        }
        
        private void OnGetAdverseEventOperationCompleted(object arg) {
            if ((this.GetAdverseEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdverseEventCompleted(this, new GetAdverseEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSideEffects", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSideEffects(string case_no, string jcno, string cplanNo) {
            object[] results = this.Invoke("GetSideEffects", new object[] {
                        case_no,
                        jcno,
                        cplanNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSideEffectsAsync(string case_no, string jcno, string cplanNo) {
            this.GetSideEffectsAsync(case_no, jcno, cplanNo, null);
        }
        
        /// <remarks/>
        public void GetSideEffectsAsync(string case_no, string jcno, string cplanNo, object userState) {
            if ((this.GetSideEffectsOperationCompleted == null)) {
                this.GetSideEffectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSideEffectsOperationCompleted);
            }
            this.InvokeAsync("GetSideEffects", new object[] {
                        case_no,
                        jcno,
                        cplanNo}, this.GetSideEffectsOperationCompleted, userState);
        }
        
        private void OnGetSideEffectsOperationCompleted(object arg) {
            if ((this.GetSideEffectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSideEffectsCompleted(this, new GetSideEffectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResponseEvaluation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetResponseEvaluation(string case_no, string jcno, string cplanNo) {
            object[] results = this.Invoke("GetResponseEvaluation", new object[] {
                        case_no,
                        jcno,
                        cplanNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetResponseEvaluationAsync(string case_no, string jcno, string cplanNo) {
            this.GetResponseEvaluationAsync(case_no, jcno, cplanNo, null);
        }
        
        /// <remarks/>
        public void GetResponseEvaluationAsync(string case_no, string jcno, string cplanNo, object userState) {
            if ((this.GetResponseEvaluationOperationCompleted == null)) {
                this.GetResponseEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResponseEvaluationOperationCompleted);
            }
            this.InvokeAsync("GetResponseEvaluation", new object[] {
                        case_no,
                        jcno,
                        cplanNo}, this.GetResponseEvaluationOperationCompleted, userState);
        }
        
        private void OnGetResponseEvaluationOperationCompleted(object arg) {
            if ((this.GetResponseEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResponseEvaluationCompleted(this, new GetResponseEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChemoDrugDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetChemoDrugDetails(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string drugname, int cycno, System.Data.DataTable dt_MTDistDet_det, double drug_modtotdose) {
            object[] results = this.Invoke("GetChemoDrugDetails", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo,
                        drugname,
                        cycno,
                        dt_MTDistDet_det,
                        drug_modtotdose});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetChemoDrugDetailsAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string drugname, int cycno, System.Data.DataTable dt_MTDistDet_det, double drug_modtotdose) {
            this.GetChemoDrugDetailsAsync(case_no, JCPlan_jcno, CPPlan_CPNo, drugname, cycno, dt_MTDistDet_det, drug_modtotdose, null);
        }
        
        /// <remarks/>
        public void GetChemoDrugDetailsAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string drugname, int cycno, System.Data.DataTable dt_MTDistDet_det, double drug_modtotdose, object userState) {
            if ((this.GetChemoDrugDetailsOperationCompleted == null)) {
                this.GetChemoDrugDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChemoDrugDetailsOperationCompleted);
            }
            this.InvokeAsync("GetChemoDrugDetails", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo,
                        drugname,
                        cycno,
                        dt_MTDistDet_det,
                        drug_modtotdose}, this.GetChemoDrugDetailsOperationCompleted, userState);
        }
        
        private void OnGetChemoDrugDetailsOperationCompleted(object arg) {
            if ((this.GetChemoDrugDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChemoDrugDetailsCompleted(this, new GetChemoDrugDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProtocolInfo1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProtocolInfo1(string case_no, string jcno, string CPNo) {
            object[] results = this.Invoke("GetProtocolInfo1", new object[] {
                        case_no,
                        jcno,
                        CPNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProtocolInfo1Async(string case_no, string jcno, string CPNo) {
            this.GetProtocolInfo1Async(case_no, jcno, CPNo, null);
        }
        
        /// <remarks/>
        public void GetProtocolInfo1Async(string case_no, string jcno, string CPNo, object userState) {
            if ((this.GetProtocolInfo1OperationCompleted == null)) {
                this.GetProtocolInfo1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProtocolInfo1OperationCompleted);
            }
            this.InvokeAsync("GetProtocolInfo1", new object[] {
                        case_no,
                        jcno,
                        CPNo}, this.GetProtocolInfo1OperationCompleted, userState);
        }
        
        private void OnGetProtocolInfo1OperationCompleted(object arg) {
            if ((this.GetProtocolInfo1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProtocolInfo1Completed(this, new GetProtocolInfo1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistinctDrugNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDistinctDrugNames(string case_no, string jcno, string cplanNo, string meditype) {
            object[] results = this.Invoke("GetDistinctDrugNames", new object[] {
                        case_no,
                        jcno,
                        cplanNo,
                        meditype});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistinctDrugNamesAsync(string case_no, string jcno, string cplanNo, string meditype) {
            this.GetDistinctDrugNamesAsync(case_no, jcno, cplanNo, meditype, null);
        }
        
        /// <remarks/>
        public void GetDistinctDrugNamesAsync(string case_no, string jcno, string cplanNo, string meditype, object userState) {
            if ((this.GetDistinctDrugNamesOperationCompleted == null)) {
                this.GetDistinctDrugNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistinctDrugNamesOperationCompleted);
            }
            this.InvokeAsync("GetDistinctDrugNames", new object[] {
                        case_no,
                        jcno,
                        cplanNo,
                        meditype}, this.GetDistinctDrugNamesOperationCompleted, userState);
        }
        
        private void OnGetDistinctDrugNamesOperationCompleted(object arg) {
            if ((this.GetDistinctDrugNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistinctDrugNamesCompleted(this, new GetDistinctDrugNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsLoginValid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsLoginValid(string userId, string password) {
            object[] results = this.Invoke("IsLoginValid", new object[] {
                        userId,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsLoginValidAsync(string userId, string password) {
            this.IsLoginValidAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void IsLoginValidAsync(string userId, string password, object userState) {
            if ((this.IsLoginValidOperationCompleted == null)) {
                this.IsLoginValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLoginValidOperationCompleted);
            }
            this.InvokeAsync("IsLoginValid", new object[] {
                        userId,
                        password}, this.IsLoginValidOperationCompleted, userState);
        }
        
        private void OnIsLoginValidOperationCompleted(object arg) {
            if ((this.IsLoginValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLoginValidCompleted(this, new IsLoginValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitDischargeSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommitDischargeSummary(string caseNo, string admSeqNo, string decmtBy, string remarks, System.DateTime dischDate, System.DateTime admsDate, string ipAddress) {
            object[] results = this.Invoke("CommitDischargeSummary", new object[] {
                        caseNo,
                        admSeqNo,
                        decmtBy,
                        remarks,
                        dischDate,
                        admsDate,
                        ipAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommitDischargeSummaryAsync(string caseNo, string admSeqNo, string decmtBy, string remarks, System.DateTime dischDate, System.DateTime admsDate, string ipAddress) {
            this.CommitDischargeSummaryAsync(caseNo, admSeqNo, decmtBy, remarks, dischDate, admsDate, ipAddress, null);
        }
        
        /// <remarks/>
        public void CommitDischargeSummaryAsync(string caseNo, string admSeqNo, string decmtBy, string remarks, System.DateTime dischDate, System.DateTime admsDate, string ipAddress, object userState) {
            if ((this.CommitDischargeSummaryOperationCompleted == null)) {
                this.CommitDischargeSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitDischargeSummaryOperationCompleted);
            }
            this.InvokeAsync("CommitDischargeSummary", new object[] {
                        caseNo,
                        admSeqNo,
                        decmtBy,
                        remarks,
                        dischDate,
                        admsDate,
                        ipAddress}, this.CommitDischargeSummaryOperationCompleted, userState);
        }
        
        private void OnCommitDischargeSummaryOperationCompleted(object arg) {
            if ((this.CommitDischargeSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitDischargeSummaryCompleted(this, new CommitDischargeSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchDischargeSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DischargeSummaryResult SearchDischargeSummary(string caseNo) {
            object[] results = this.Invoke("SearchDischargeSummary", new object[] {
                        caseNo});
            return ((DischargeSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void SearchDischargeSummaryAsync(string caseNo) {
            this.SearchDischargeSummaryAsync(caseNo, null);
        }
        
        /// <remarks/>
        public void SearchDischargeSummaryAsync(string caseNo, object userState) {
            if ((this.SearchDischargeSummaryOperationCompleted == null)) {
                this.SearchDischargeSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchDischargeSummaryOperationCompleted);
            }
            this.InvokeAsync("SearchDischargeSummary", new object[] {
                        caseNo}, this.SearchDischargeSummaryOperationCompleted, userState);
        }
        
        private void OnSearchDischargeSummaryOperationCompleted(object arg) {
            if ((this.SearchDischargeSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchDischargeSummaryCompleted(this, new SearchDischargeSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPatientInfo(string caseNo) {
            object[] results = this.Invoke("GetPatientInfo", new object[] {
                        caseNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoAsync(string caseNo) {
            this.GetPatientInfoAsync(caseNo, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoAsync(string caseNo, object userState) {
            if ((this.GetPatientInfoOperationCompleted == null)) {
                this.GetPatientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfo", new object[] {
                        caseNo}, this.GetPatientInfoOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoOperationCompleted(object arg) {
            if ((this.GetPatientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoCompleted(this, new GetPatientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHistExamDtTm2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHistExamDtTm2(string caseNo) {
            object[] results = this.Invoke("GetHistExamDtTm2", new object[] {
                        caseNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistExamDtTm2Async(string caseNo) {
            this.GetHistExamDtTm2Async(caseNo, null);
        }
        
        /// <remarks/>
        public void GetHistExamDtTm2Async(string caseNo, object userState) {
            if ((this.GetHistExamDtTm2OperationCompleted == null)) {
                this.GetHistExamDtTm2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistExamDtTm2OperationCompleted);
            }
            this.InvokeAsync("GetHistExamDtTm2", new object[] {
                        caseNo}, this.GetHistExamDtTm2OperationCompleted, userState);
        }
        
        private void OnGetHistExamDtTm2OperationCompleted(object arg) {
            if ((this.GetHistExamDtTm2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistExamDtTm2Completed(this, new GetHistExamDtTm2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRadiologyRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRadiologyRequisition(string reqNo) {
            object[] results = this.Invoke("GetRadiologyRequisition", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadiologyRequisitionAsync(string reqNo) {
            this.GetRadiologyRequisitionAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetRadiologyRequisitionAsync(string reqNo, object userState) {
            if ((this.GetRadiologyRequisitionOperationCompleted == null)) {
                this.GetRadiologyRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadiologyRequisitionOperationCompleted);
            }
            this.InvokeAsync("GetRadiologyRequisition", new object[] {
                        reqNo}, this.GetRadiologyRequisitionOperationCompleted, userState);
        }
        
        private void OnGetRadiologyRequisitionOperationCompleted(object arg) {
            if ((this.GetRadiologyRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadiologyRequisitionCompleted(this, new GetRadiologyRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDSiteDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDSiteDetails(string sCode) {
            object[] results = this.Invoke("GetDSiteDetails", new object[] {
                        sCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDSiteDetailsAsync(string sCode) {
            this.GetDSiteDetailsAsync(sCode, null);
        }
        
        /// <remarks/>
        public void GetDSiteDetailsAsync(string sCode, object userState) {
            if ((this.GetDSiteDetailsOperationCompleted == null)) {
                this.GetDSiteDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDSiteDetailsOperationCompleted);
            }
            this.InvokeAsync("GetDSiteDetails", new object[] {
                        sCode}, this.GetDSiteDetailsOperationCompleted, userState);
        }
        
        private void OnGetDSiteDetailsOperationCompleted(object arg) {
            if ((this.GetDSiteDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDSiteDetailsCompleted(this, new GetDSiteDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDiagMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDiagMethod(string DM_TYPE, string DM) {
            object[] results = this.Invoke("GetDiagMethod", new object[] {
                        DM_TYPE,
                        DM});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiagMethodAsync(string DM_TYPE, string DM) {
            this.GetDiagMethodAsync(DM_TYPE, DM, null);
        }
        
        /// <remarks/>
        public void GetDiagMethodAsync(string DM_TYPE, string DM, object userState) {
            if ((this.GetDiagMethodOperationCompleted == null)) {
                this.GetDiagMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiagMethodOperationCompleted);
            }
            this.InvokeAsync("GetDiagMethod", new object[] {
                        DM_TYPE,
                        DM}, this.GetDiagMethodOperationCompleted, userState);
        }
        
        private void OnGetDiagMethodOperationCompleted(object arg) {
            if ((this.GetDiagMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiagMethodCompleted(this, new GetDiagMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMA101", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMA101(string ser_code) {
            object[] results = this.Invoke("GetMA101", new object[] {
                        ser_code});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMA101Async(string ser_code) {
            this.GetMA101Async(ser_code, null);
        }
        
        /// <remarks/>
        public void GetMA101Async(string ser_code, object userState) {
            if ((this.GetMA101OperationCompleted == null)) {
                this.GetMA101OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMA101OperationCompleted);
            }
            this.InvokeAsync("GetMA101", new object[] {
                        ser_code}, this.GetMA101OperationCompleted, userState);
        }
        
        private void OnGetMA101OperationCompleted(object arg) {
            if ((this.GetMA101Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMA101Completed(this, new GetMA101CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRepWriters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRepWriters(string username) {
            object[] results = this.Invoke("GetRepWriters", new object[] {
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRepWritersAsync(string username) {
            this.GetRepWritersAsync(username, null);
        }
        
        /// <remarks/>
        public void GetRepWritersAsync(string username, object userState) {
            if ((this.GetRepWritersOperationCompleted == null)) {
                this.GetRepWritersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRepWritersOperationCompleted);
            }
            this.InvokeAsync("GetRepWriters", new object[] {
                        username}, this.GetRepWritersOperationCompleted, userState);
        }
        
        private void OnGetRepWritersOperationCompleted(object arg) {
            if ((this.GetRepWritersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRepWritersCompleted(this, new GetRepWritersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRepWritersF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRepWritersF(string username) {
            object[] results = this.Invoke("GetRepWritersF", new object[] {
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRepWritersFAsync(string username) {
            this.GetRepWritersFAsync(username, null);
        }
        
        /// <remarks/>
        public void GetRepWritersFAsync(string username, object userState) {
            if ((this.GetRepWritersFOperationCompleted == null)) {
                this.GetRepWritersFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRepWritersFOperationCompleted);
            }
            this.InvokeAsync("GetRepWritersF", new object[] {
                        username}, this.GetRepWritersFOperationCompleted, userState);
        }
        
        private void OnGetRepWritersFOperationCompleted(object arg) {
            if ((this.GetRepWritersFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRepWritersFCompleted(this, new GetRepWritersFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMycobacteriaData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMycobacteriaData(string reqno) {
            object[] results = this.Invoke("GetMycobacteriaData", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMycobacteriaDataAsync(string reqno) {
            this.GetMycobacteriaDataAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetMycobacteriaDataAsync(string reqno, object userState) {
            if ((this.GetMycobacteriaDataOperationCompleted == null)) {
                this.GetMycobacteriaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMycobacteriaDataOperationCompleted);
            }
            this.InvokeAsync("GetMycobacteriaData", new object[] {
                        reqno}, this.GetMycobacteriaDataOperationCompleted, userState);
        }
        
        private void OnGetMycobacteriaDataOperationCompleted(object arg) {
            if ((this.GetMycobacteriaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMycobacteriaDataCompleted(this, new GetMycobacteriaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserDetails(string userid) {
            object[] results = this.Invoke("GetUserDetails", new object[] {
                        userid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDetailsAsync(string userid) {
            this.GetUserDetailsAsync(userid, null);
        }
        
        /// <remarks/>
        public void GetUserDetailsAsync(string userid, object userState) {
            if ((this.GetUserDetailsOperationCompleted == null)) {
                this.GetUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDetailsOperationCompleted);
            }
            this.InvokeAsync("GetUserDetails", new object[] {
                        userid}, this.GetUserDetailsOperationCompleted, userState);
        }
        
        private void OnGetUserDetailsOperationCompleted(object arg) {
            if ((this.GetUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDetailsCompleted(this, new GetUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStagingGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStagingGroup(string T, string N, string M) {
            object[] results = this.Invoke("GetStagingGroup", new object[] {
                        T,
                        N,
                        M});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStagingGroupAsync(string T, string N, string M) {
            this.GetStagingGroupAsync(T, N, M, null);
        }
        
        /// <remarks/>
        public void GetStagingGroupAsync(string T, string N, string M, object userState) {
            if ((this.GetStagingGroupOperationCompleted == null)) {
                this.GetStagingGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStagingGroupOperationCompleted);
            }
            this.InvokeAsync("GetStagingGroup", new object[] {
                        T,
                        N,
                        M}, this.GetStagingGroupOperationCompleted, userState);
        }
        
        private void OnGetStagingGroupOperationCompleted(object arg) {
            if ((this.GetStagingGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStagingGroupCompleted(this, new GetStagingGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTNMStage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTNMStage(string caseNo, string hstExmNo, string site) {
            object[] results = this.Invoke("GetTNMStage", new object[] {
                        caseNo,
                        hstExmNo,
                        site});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTNMStageAsync(string caseNo, string hstExmNo, string site) {
            this.GetTNMStageAsync(caseNo, hstExmNo, site, null);
        }
        
        /// <remarks/>
        public void GetTNMStageAsync(string caseNo, string hstExmNo, string site, object userState) {
            if ((this.GetTNMStageOperationCompleted == null)) {
                this.GetTNMStageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTNMStageOperationCompleted);
            }
            this.InvokeAsync("GetTNMStage", new object[] {
                        caseNo,
                        hstExmNo,
                        site}, this.GetTNMStageOperationCompleted, userState);
        }
        
        private void OnGetTNMStageOperationCompleted(object arg) {
            if ((this.GetTNMStageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTNMStageCompleted(this, new GetTNMStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTestReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTestReport(string reqNo) {
            object[] results = this.Invoke("GetTestReport", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTestReportAsync(string reqNo) {
            this.GetTestReportAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetTestReportAsync(string reqNo, object userState) {
            if ((this.GetTestReportOperationCompleted == null)) {
                this.GetTestReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestReportOperationCompleted);
            }
            this.InvokeAsync("GetTestReport", new object[] {
                        reqNo}, this.GetTestReportOperationCompleted, userState);
        }
        
        private void OnGetTestReportOperationCompleted(object arg) {
            if ((this.GetTestReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestReportCompleted(this, new GetTestReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProcedureName1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProcedureName1(string serCode) {
            object[] results = this.Invoke("GetProcedureName1", new object[] {
                        serCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcedureName1Async(string serCode) {
            this.GetProcedureName1Async(serCode, null);
        }
        
        /// <remarks/>
        public void GetProcedureName1Async(string serCode, object userState) {
            if ((this.GetProcedureName1OperationCompleted == null)) {
                this.GetProcedureName1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcedureName1OperationCompleted);
            }
            this.InvokeAsync("GetProcedureName1", new object[] {
                        serCode}, this.GetProcedureName1OperationCompleted, userState);
        }
        
        private void OnGetProcedureName1OperationCompleted(object arg) {
            if ((this.GetProcedureName1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcedureName1Completed(this, new GetProcedureName1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMycrobacteriologyReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMycrobacteriologyReport(string reqNo) {
            object[] results = this.Invoke("GetMycrobacteriologyReport", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMycrobacteriologyReportAsync(string reqNo) {
            this.GetMycrobacteriologyReportAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetMycrobacteriologyReportAsync(string reqNo, object userState) {
            if ((this.GetMycrobacteriologyReportOperationCompleted == null)) {
                this.GetMycrobacteriologyReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMycrobacteriologyReportOperationCompleted);
            }
            this.InvokeAsync("GetMycrobacteriologyReport", new object[] {
                        reqNo}, this.GetMycrobacteriologyReportOperationCompleted, userState);
        }
        
        private void OnGetMycrobacteriologyReportOperationCompleted(object arg) {
            if ((this.GetMycrobacteriologyReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMycrobacteriologyReportCompleted(this, new GetMycrobacteriologyReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMycrobaData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMycrobaData(string reqNo) {
            object[] results = this.Invoke("GetMycrobaData", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMycrobaDataAsync(string reqNo) {
            this.GetMycrobaDataAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetMycrobaDataAsync(string reqNo, object userState) {
            if ((this.GetMycrobaDataOperationCompleted == null)) {
                this.GetMycrobaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMycrobaDataOperationCompleted);
            }
            this.InvokeAsync("GetMycrobaData", new object[] {
                        reqNo}, this.GetMycrobaDataOperationCompleted, userState);
        }
        
        private void OnGetMycrobaDataOperationCompleted(object arg) {
            if ((this.GetMycrobaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMycrobaDataCompleted(this, new GetMycrobaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAntibioticData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAntibioticData(string reqNo) {
            object[] results = this.Invoke("GetAntibioticData", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAntibioticDataAsync(string reqNo) {
            this.GetAntibioticDataAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetAntibioticDataAsync(string reqNo, object userState) {
            if ((this.GetAntibioticDataOperationCompleted == null)) {
                this.GetAntibioticDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAntibioticDataOperationCompleted);
            }
            this.InvokeAsync("GetAntibioticData", new object[] {
                        reqNo}, this.GetAntibioticDataOperationCompleted, userState);
        }
        
        private void OnGetAntibioticDataOperationCompleted(object arg) {
            if ((this.GetAntibioticDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAntibioticDataCompleted(this, new GetAntibioticDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpecimenData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSpecimenData(string reqNo) {
            object[] results = this.Invoke("GetSpecimenData", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpecimenDataAsync(string reqNo) {
            this.GetSpecimenDataAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetSpecimenDataAsync(string reqNo, object userState) {
            if ((this.GetSpecimenDataOperationCompleted == null)) {
                this.GetSpecimenDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecimenDataOperationCompleted);
            }
            this.InvokeAsync("GetSpecimenData", new object[] {
                        reqNo}, this.GetSpecimenDataOperationCompleted, userState);
        }
        
        private void OnGetSpecimenDataOperationCompleted(object arg) {
            if ((this.GetSpecimenDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecimenDataCompleted(this, new GetSpecimenDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNonNullAntibioticData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNonNullAntibioticData(string reqNo) {
            object[] results = this.Invoke("GetNonNullAntibioticData", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNonNullAntibioticDataAsync(string reqNo) {
            this.GetNonNullAntibioticDataAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetNonNullAntibioticDataAsync(string reqNo, object userState) {
            if ((this.GetNonNullAntibioticDataOperationCompleted == null)) {
                this.GetNonNullAntibioticDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonNullAntibioticDataOperationCompleted);
            }
            this.InvokeAsync("GetNonNullAntibioticData", new object[] {
                        reqNo}, this.GetNonNullAntibioticDataOperationCompleted, userState);
        }
        
        private void OnGetNonNullAntibioticDataOperationCompleted(object arg) {
            if ((this.GetNonNullAntibioticDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonNullAntibioticDataCompleted(this, new GetNonNullAntibioticDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportWriters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReportWriters(string username) {
            object[] results = this.Invoke("GetReportWriters", new object[] {
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportWritersAsync(string username) {
            this.GetReportWritersAsync(username, null);
        }
        
        /// <remarks/>
        public void GetReportWritersAsync(string username, object userState) {
            if ((this.GetReportWritersOperationCompleted == null)) {
                this.GetReportWritersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportWritersOperationCompleted);
            }
            this.InvokeAsync("GetReportWriters", new object[] {
                        username}, this.GetReportWritersOperationCompleted, userState);
        }
        
        private void OnGetReportWritersOperationCompleted(object arg) {
            if ((this.GetReportWritersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportWritersCompleted(this, new GetReportWritersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportWritersByUsername", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReportWritersByUsername(string username) {
            object[] results = this.Invoke("GetReportWritersByUsername", new object[] {
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportWritersByUsernameAsync(string username) {
            this.GetReportWritersByUsernameAsync(username, null);
        }
        
        /// <remarks/>
        public void GetReportWritersByUsernameAsync(string username, object userState) {
            if ((this.GetReportWritersByUsernameOperationCompleted == null)) {
                this.GetReportWritersByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportWritersByUsernameOperationCompleted);
            }
            this.InvokeAsync("GetReportWritersByUsername", new object[] {
                        username}, this.GetReportWritersByUsernameOperationCompleted, userState);
        }
        
        private void OnGetReportWritersByUsernameOperationCompleted(object arg) {
            if ((this.GetReportWritersByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportWritersByUsernameCompleted(this, new GetReportWritersByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProcedureDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProcedureDetails(string reqno, string modality) {
            object[] results = this.Invoke("GetProcedureDetails", new object[] {
                        reqno,
                        modality});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcedureDetailsAsync(string reqno, string modality) {
            this.GetProcedureDetailsAsync(reqno, modality, null);
        }
        
        /// <remarks/>
        public void GetProcedureDetailsAsync(string reqno, string modality, object userState) {
            if ((this.GetProcedureDetailsOperationCompleted == null)) {
                this.GetProcedureDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcedureDetailsOperationCompleted);
            }
            this.InvokeAsync("GetProcedureDetails", new object[] {
                        reqno,
                        modality}, this.GetProcedureDetailsOperationCompleted, userState);
        }
        
        private void OnGetProcedureDetailsOperationCompleted(object arg) {
            if ((this.GetProcedureDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcedureDetailsCompleted(this, new GetProcedureDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDmbcComm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDmbcComm(string reqno) {
            object[] results = this.Invoke("GetDmbcComm", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDmbcCommAsync(string reqno) {
            this.GetDmbcCommAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDmbcCommAsync(string reqno, object userState) {
            if ((this.GetDmbcCommOperationCompleted == null)) {
                this.GetDmbcCommOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDmbcCommOperationCompleted);
            }
            this.InvokeAsync("GetDmbcComm", new object[] {
                        reqno}, this.GetDmbcCommOperationCompleted, userState);
        }
        
        private void OnGetDmbcCommOperationCompleted(object arg) {
            if ((this.GetDmbcCommCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDmbcCommCompleted(this, new GetDmbcCommCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDRequisitn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDRequisitn(string reqno) {
            object[] results = this.Invoke("GetDRequisitn", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDRequisitnAsync(string reqno) {
            this.GetDRequisitnAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDRequisitnAsync(string reqno, object userState) {
            if ((this.GetDRequisitnOperationCompleted == null)) {
                this.GetDRequisitnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDRequisitnOperationCompleted);
            }
            this.InvokeAsync("GetDRequisitn", new object[] {
                        reqno}, this.GetDRequisitnOperationCompleted, userState);
        }
        
        private void OnGetDRequisitnOperationCompleted(object arg) {
            if ((this.GetDRequisitnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDRequisitnCompleted(this, new GetDRequisitnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDCYReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDCYReport(string reqno) {
            object[] results = this.Invoke("GetDCYReport", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDCYReportAsync(string reqno) {
            this.GetDCYReportAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDCYReportAsync(string reqno, object userState) {
            if ((this.GetDCYReportOperationCompleted == null)) {
                this.GetDCYReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDCYReportOperationCompleted);
            }
            this.InvokeAsync("GetDCYReport", new object[] {
                        reqno}, this.GetDCYReportOperationCompleted, userState);
        }
        
        private void OnGetDCYReportOperationCompleted(object arg) {
            if ((this.GetDCYReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDCYReportCompleted(this, new GetDCYReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDFReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDFReport(string reqno) {
            object[] results = this.Invoke("GetDFReport", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDFReportAsync(string reqno) {
            this.GetDFReportAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDFReportAsync(string reqno, object userState) {
            if ((this.GetDFReportOperationCompleted == null)) {
                this.GetDFReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDFReportOperationCompleted);
            }
            this.InvokeAsync("GetDFReport", new object[] {
                        reqno}, this.GetDFReportOperationCompleted, userState);
        }
        
        private void OnGetDFReportOperationCompleted(object arg) {
            if ((this.GetDFReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDFReportCompleted(this, new GetDFReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDHEMCYTO1Report", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDHEMCYTO1Report(string reqno) {
            object[] results = this.Invoke("GetDHEMCYTO1Report", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDHEMCYTO1ReportAsync(string reqno) {
            this.GetDHEMCYTO1ReportAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDHEMCYTO1ReportAsync(string reqno, object userState) {
            if ((this.GetDHEMCYTO1ReportOperationCompleted == null)) {
                this.GetDHEMCYTO1ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDHEMCYTO1ReportOperationCompleted);
            }
            this.InvokeAsync("GetDHEMCYTO1Report", new object[] {
                        reqno}, this.GetDHEMCYTO1ReportOperationCompleted, userState);
        }
        
        private void OnGetDHEMCYTO1ReportOperationCompleted(object arg) {
            if ((this.GetDHEMCYTO1ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDHEMCYTO1ReportCompleted(this, new GetDHEMCYTO1ReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCMServices1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCMServices1(string serviceId) {
            object[] results = this.Invoke("GetCMServices1", new object[] {
                        serviceId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCMServices1Async(string serviceId) {
            this.GetCMServices1Async(serviceId, null);
        }
        
        /// <remarks/>
        public void GetCMServices1Async(string serviceId, object userState) {
            if ((this.GetCMServices1OperationCompleted == null)) {
                this.GetCMServices1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCMServices1OperationCompleted);
            }
            this.InvokeAsync("GetCMServices1", new object[] {
                        serviceId}, this.GetCMServices1OperationCompleted, userState);
        }
        
        private void OnGetCMServices1OperationCompleted(object arg) {
            if ((this.GetCMServices1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCMServices1Completed(this, new GetCMServices1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIFMCOEX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIFMCOEX(string caseNo) {
            object[] results = this.Invoke("GetWIFMCOEX", new object[] {
                        caseNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIFMCOEXAsync(string caseNo) {
            this.GetWIFMCOEXAsync(caseNo, null);
        }
        
        /// <remarks/>
        public void GetWIFMCOEXAsync(string caseNo, object userState) {
            if ((this.GetWIFMCOEXOperationCompleted == null)) {
                this.GetWIFMCOEXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIFMCOEXOperationCompleted);
            }
            this.InvokeAsync("GetWIFMCOEX", new object[] {
                        caseNo}, this.GetWIFMCOEXOperationCompleted, userState);
        }
        
        private void OnGetWIFMCOEXOperationCompleted(object arg) {
            if ((this.GetWIFMCOEXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIFMCOEXCompleted(this, new GetWIFMCOEXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIPRSNLHS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIPRSNLHS(string caseNo) {
            object[] results = this.Invoke("GetWIPRSNLHS", new object[] {
                        caseNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIPRSNLHSAsync(string caseNo) {
            this.GetWIPRSNLHSAsync(caseNo, null);
        }
        
        /// <remarks/>
        public void GetWIPRSNLHSAsync(string caseNo, object userState) {
            if ((this.GetWIPRSNLHSOperationCompleted == null)) {
                this.GetWIPRSNLHSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIPRSNLHSOperationCompleted);
            }
            this.InvokeAsync("GetWIPRSNLHS", new object[] {
                        caseNo}, this.GetWIPRSNLHSOperationCompleted, userState);
        }
        
        private void OnGetWIPRSNLHSOperationCompleted(object arg) {
            if ((this.GetWIPRSNLHSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIPRSNLHSCompleted(this, new GetWIPRSNLHSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDHEMCPDET", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDHEMCPDET(string reqNo) {
            object[] results = this.Invoke("GetDHEMCPDET", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDHEMCPDETAsync(string reqNo) {
            this.GetDHEMCPDETAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetDHEMCPDETAsync(string reqNo, object userState) {
            if ((this.GetDHEMCPDETOperationCompleted == null)) {
                this.GetDHEMCPDETOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDHEMCPDETOperationCompleted);
            }
            this.InvokeAsync("GetDHEMCPDET", new object[] {
                        reqNo}, this.GetDHEMCPDETOperationCompleted, userState);
        }
        
        private void OnGetDHEMCPDETOperationCompleted(object arg) {
            if ((this.GetDHEMCPDETCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDHEMCPDETCompleted(this, new GetDHEMCPDETCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHINTERFACE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHINTERFACE(string reqNo) {
            object[] results = this.Invoke("GetHINTERFACE", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHINTERFACEAsync(string reqNo) {
            this.GetHINTERFACEAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetHINTERFACEAsync(string reqNo, object userState) {
            if ((this.GetHINTERFACEOperationCompleted == null)) {
                this.GetHINTERFACEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHINTERFACEOperationCompleted);
            }
            this.InvokeAsync("GetHINTERFACE", new object[] {
                        reqNo}, this.GetHINTERFACEOperationCompleted, userState);
        }
        
        private void OnGetHINTERFACEOperationCompleted(object arg) {
            if ((this.GetHINTERFACECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHINTERFACECompleted(this, new GetHINTERFACECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportHLF1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReportHLF1(string reqNo) {
            object[] results = this.Invoke("GetReportHLF1", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportHLF1Async(string reqNo) {
            this.GetReportHLF1Async(reqNo, null);
        }
        
        /// <remarks/>
        public void GetReportHLF1Async(string reqNo, object userState) {
            if ((this.GetReportHLF1OperationCompleted == null)) {
                this.GetReportHLF1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportHLF1OperationCompleted);
            }
            this.InvokeAsync("GetReportHLF1", new object[] {
                        reqNo}, this.GetReportHLF1OperationCompleted, userState);
        }
        
        private void OnGetReportHLF1OperationCompleted(object arg) {
            if ((this.GetReportHLF1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportHLF1Completed(this, new GetReportHLF1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportHLF1_RBC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReportHLF1_RBC(string reqNo) {
            object[] results = this.Invoke("GetReportHLF1_RBC", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportHLF1_RBCAsync(string reqNo) {
            this.GetReportHLF1_RBCAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetReportHLF1_RBCAsync(string reqNo, object userState) {
            if ((this.GetReportHLF1_RBCOperationCompleted == null)) {
                this.GetReportHLF1_RBCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportHLF1_RBCOperationCompleted);
            }
            this.InvokeAsync("GetReportHLF1_RBC", new object[] {
                        reqNo}, this.GetReportHLF1_RBCOperationCompleted, userState);
        }
        
        private void OnGetReportHLF1_RBCOperationCompleted(object arg) {
            if ((this.GetReportHLF1_RBCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportHLF1_RBCCompleted(this, new GetReportHLF1_RBCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportHLF1_WBC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReportHLF1_WBC(string reqNo) {
            object[] results = this.Invoke("GetReportHLF1_WBC", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportHLF1_WBCAsync(string reqNo) {
            this.GetReportHLF1_WBCAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetReportHLF1_WBCAsync(string reqNo, object userState) {
            if ((this.GetReportHLF1_WBCOperationCompleted == null)) {
                this.GetReportHLF1_WBCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportHLF1_WBCOperationCompleted);
            }
            this.InvokeAsync("GetReportHLF1_WBC", new object[] {
                        reqNo}, this.GetReportHLF1_WBCOperationCompleted, userState);
        }
        
        private void OnGetReportHLF1_WBCOperationCompleted(object arg) {
            if ((this.GetReportHLF1_WBCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportHLF1_WBCCompleted(this, new GetReportHLF1_WBCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportHLF1_Platt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReportHLF1_Platt(string reqNo) {
            object[] results = this.Invoke("GetReportHLF1_Platt", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportHLF1_PlattAsync(string reqNo) {
            this.GetReportHLF1_PlattAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetReportHLF1_PlattAsync(string reqNo, object userState) {
            if ((this.GetReportHLF1_PlattOperationCompleted == null)) {
                this.GetReportHLF1_PlattOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportHLF1_PlattOperationCompleted);
            }
            this.InvokeAsync("GetReportHLF1_Platt", new object[] {
                        reqNo}, this.GetReportHLF1_PlattOperationCompleted, userState);
        }
        
        private void OnGetReportHLF1_PlattOperationCompleted(object arg) {
            if ((this.GetReportHLF1_PlattCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportHLF1_PlattCompleted(this, new GetReportHLF1_PlattCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWPSTNCPDT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWPSTNCPDT(string caseNo) {
            object[] results = this.Invoke("GetWPSTNCPDT", new object[] {
                        caseNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWPSTNCPDTAsync(string caseNo) {
            this.GetWPSTNCPDTAsync(caseNo, null);
        }
        
        /// <remarks/>
        public void GetWPSTNCPDTAsync(string caseNo, object userState) {
            if ((this.GetWPSTNCPDTOperationCompleted == null)) {
                this.GetWPSTNCPDTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWPSTNCPDTOperationCompleted);
            }
            this.InvokeAsync("GetWPSTNCPDT", new object[] {
                        caseNo}, this.GetWPSTNCPDTOperationCompleted, userState);
        }
        
        private void OnGetWPSTNCPDTOperationCompleted(object arg) {
            if ((this.GetWPSTNCPDTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWPSTNCPDTCompleted(this, new GetWPSTNCPDTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDHEMCBCDET", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDHEMCBCDET(string reqno) {
            object[] results = this.Invoke("GetDHEMCBCDET", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDHEMCBCDETAsync(string reqno) {
            this.GetDHEMCBCDETAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDHEMCBCDETAsync(string reqno, object userState) {
            if ((this.GetDHEMCBCDETOperationCompleted == null)) {
                this.GetDHEMCBCDETOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDHEMCBCDETOperationCompleted);
            }
            this.InvokeAsync("GetDHEMCBCDET", new object[] {
                        reqno}, this.GetDHEMCBCDETOperationCompleted, userState);
        }
        
        private void OnGetDHEMCBCDETOperationCompleted(object arg) {
            if ((this.GetDHEMCBCDETCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDHEMCBCDETCompleted(this, new GetDHEMCBCDETCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportHLLF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReportHLLF(string reqno) {
            object[] results = this.Invoke("GetReportHLLF", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportHLLFAsync(string reqno) {
            this.GetReportHLLFAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetReportHLLFAsync(string reqno, object userState) {
            if ((this.GetReportHLLFOperationCompleted == null)) {
                this.GetReportHLLFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportHLLFOperationCompleted);
            }
            this.InvokeAsync("GetReportHLLF", new object[] {
                        reqno}, this.GetReportHLLFOperationCompleted, userState);
        }
        
        private void OnGetReportHLLFOperationCompleted(object arg) {
            if ((this.GetReportHLLFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportHLLFCompleted(this, new GetReportHLLFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMachineNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMachineNo(string reqno) {
            object[] results = this.Invoke("GetMachineNo", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineNoAsync(string reqno) {
            this.GetMachineNoAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetMachineNoAsync(string reqno, object userState) {
            if ((this.GetMachineNoOperationCompleted == null)) {
                this.GetMachineNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineNoOperationCompleted);
            }
            this.InvokeAsync("GetMachineNo", new object[] {
                        reqno}, this.GetMachineNoOperationCompleted, userState);
        }
        
        private void OnGetMachineNoOperationCompleted(object arg) {
            if ((this.GetMachineNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineNoCompleted(this, new GetMachineNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPValue(string reqno) {
            object[] results = this.Invoke("GetPValue", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPValueAsync(string reqno) {
            this.GetPValueAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetPValueAsync(string reqno, object userState) {
            if ((this.GetPValueOperationCompleted == null)) {
                this.GetPValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPValueOperationCompleted);
            }
            this.InvokeAsync("GetPValue", new object[] {
                        reqno}, this.GetPValueOperationCompleted, userState);
        }
        
        private void OnGetPValueOperationCompleted(object arg) {
            if ((this.GetPValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPValueCompleted(this, new GetPValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDCBCREP1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDCBCREP1(string reqno) {
            object[] results = this.Invoke("GetDCBCREP1", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDCBCREP1Async(string reqno) {
            this.GetDCBCREP1Async(reqno, null);
        }
        
        /// <remarks/>
        public void GetDCBCREP1Async(string reqno, object userState) {
            if ((this.GetDCBCREP1OperationCompleted == null)) {
                this.GetDCBCREP1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDCBCREP1OperationCompleted);
            }
            this.InvokeAsync("GetDCBCREP1", new object[] {
                        reqno}, this.GetDCBCREP1OperationCompleted, userState);
        }
        
        private void OnGetDCBCREP1OperationCompleted(object arg) {
            if ((this.GetDCBCREP1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDCBCREP1Completed(this, new GetDCBCREP1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDCBCREPA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDCBCREPA(string reqno) {
            object[] results = this.Invoke("GetDCBCREPA", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDCBCREPAAsync(string reqno) {
            this.GetDCBCREPAAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDCBCREPAAsync(string reqno, object userState) {
            if ((this.GetDCBCREPAOperationCompleted == null)) {
                this.GetDCBCREPAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDCBCREPAOperationCompleted);
            }
            this.InvokeAsync("GetDCBCREPA", new object[] {
                        reqno}, this.GetDCBCREPAOperationCompleted, userState);
        }
        
        private void OnGetDCBCREPAOperationCompleted(object arg) {
            if ((this.GetDCBCREPACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDCBCREPACompleted(this, new GetDCBCREPACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTA101", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTA101(string case_no) {
            object[] results = this.Invoke("GetTA101", new object[] {
                        case_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTA101Async(string case_no) {
            this.GetTA101Async(case_no, null);
        }
        
        /// <remarks/>
        public void GetTA101Async(string case_no, object userState) {
            if ((this.GetTA101OperationCompleted == null)) {
                this.GetTA101OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTA101OperationCompleted);
            }
            this.InvokeAsync("GetTA101", new object[] {
                        case_no}, this.GetTA101OperationCompleted, userState);
        }
        
        private void OnGetTA101OperationCompleted(object arg) {
            if ((this.GetTA101Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTA101Completed(this, new GetTA101CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDCBCSMREP1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDCBCSMREP1(string reqno) {
            object[] results = this.Invoke("GetDCBCSMREP1", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDCBCSMREP1Async(string reqno) {
            this.GetDCBCSMREP1Async(reqno, null);
        }
        
        /// <remarks/>
        public void GetDCBCSMREP1Async(string reqno, object userState) {
            if ((this.GetDCBCSMREP1OperationCompleted == null)) {
                this.GetDCBCSMREP1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDCBCSMREP1OperationCompleted);
            }
            this.InvokeAsync("GetDCBCSMREP1", new object[] {
                        reqno}, this.GetDCBCSMREP1OperationCompleted, userState);
        }
        
        private void OnGetDCBCSMREP1OperationCompleted(object arg) {
            if ((this.GetDCBCSMREP1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDCBCSMREP1Completed(this, new GetDCBCSMREP1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBMAMyeloid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDBMAMyeloid(string reqno) {
            object[] results = this.Invoke("GetDBMAMyeloid", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBMAMyeloidAsync(string reqno) {
            this.GetDBMAMyeloidAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDBMAMyeloidAsync(string reqno, object userState) {
            if ((this.GetDBMAMyeloidOperationCompleted == null)) {
                this.GetDBMAMyeloidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBMAMyeloidOperationCompleted);
            }
            this.InvokeAsync("GetDBMAMyeloid", new object[] {
                        reqno}, this.GetDBMAMyeloidOperationCompleted, userState);
        }
        
        private void OnGetDBMAMyeloidOperationCompleted(object arg) {
            if ((this.GetDBMAMyeloidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBMAMyeloidCompleted(this, new GetDBMAMyeloidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBMABCell", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDBMABCell(string reqno) {
            object[] results = this.Invoke("GetDBMABCell", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBMABCellAsync(string reqno) {
            this.GetDBMABCellAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDBMABCellAsync(string reqno, object userState) {
            if ((this.GetDBMABCellOperationCompleted == null)) {
                this.GetDBMABCellOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBMABCellOperationCompleted);
            }
            this.InvokeAsync("GetDBMABCell", new object[] {
                        reqno}, this.GetDBMABCellOperationCompleted, userState);
        }
        
        private void OnGetDBMABCellOperationCompleted(object arg) {
            if ((this.GetDBMABCellCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBMABCellCompleted(this, new GetDBMABCellCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBMATKCell", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDBMATKCell(string reqno) {
            object[] results = this.Invoke("GetDBMATKCell", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBMATKCellAsync(string reqno) {
            this.GetDBMATKCellAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDBMATKCellAsync(string reqno, object userState) {
            if ((this.GetDBMATKCellOperationCompleted == null)) {
                this.GetDBMATKCellOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBMATKCellOperationCompleted);
            }
            this.InvokeAsync("GetDBMATKCell", new object[] {
                        reqno}, this.GetDBMATKCellOperationCompleted, userState);
        }
        
        private void OnGetDBMATKCellOperationCompleted(object arg) {
            if ((this.GetDBMATKCellCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBMATKCellCompleted(this, new GetDBMATKCellCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBMAOthers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDBMAOthers(string reqno) {
            object[] results = this.Invoke("GetDBMAOthers", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBMAOthersAsync(string reqno) {
            this.GetDBMAOthersAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDBMAOthersAsync(string reqno, object userState) {
            if ((this.GetDBMAOthersOperationCompleted == null)) {
                this.GetDBMAOthersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBMAOthersOperationCompleted);
            }
            this.InvokeAsync("GetDBMAOthers", new object[] {
                        reqno}, this.GetDBMAOthersOperationCompleted, userState);
        }
        
        private void OnGetDBMAOthersOperationCompleted(object arg) {
            if ((this.GetDBMAOthersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBMAOthersCompleted(this, new GetDBMAOthersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDRequisitn1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDRequisitn1(string reqno) {
            object[] results = this.Invoke("GetDRequisitn1", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDRequisitn1Async(string reqno) {
            this.GetDRequisitn1Async(reqno, null);
        }
        
        /// <remarks/>
        public void GetDRequisitn1Async(string reqno, object userState) {
            if ((this.GetDRequisitn1OperationCompleted == null)) {
                this.GetDRequisitn1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDRequisitn1OperationCompleted);
            }
            this.InvokeAsync("GetDRequisitn1", new object[] {
                        reqno}, this.GetDRequisitn1OperationCompleted, userState);
        }
        
        private void OnGetDRequisitn1OperationCompleted(object arg) {
            if ((this.GetDRequisitn1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDRequisitn1Completed(this, new GetDRequisitn1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBMASubRep", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDBMASubRep(string reqno) {
            object[] results = this.Invoke("GetDBMASubRep", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBMASubRepAsync(string reqno) {
            this.GetDBMASubRepAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDBMASubRepAsync(string reqno, object userState) {
            if ((this.GetDBMASubRepOperationCompleted == null)) {
                this.GetDBMASubRepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBMASubRepOperationCompleted);
            }
            this.InvokeAsync("GetDBMASubRep", new object[] {
                        reqno}, this.GetDBMASubRepOperationCompleted, userState);
        }
        
        private void OnGetDBMASubRepOperationCompleted(object arg) {
            if ((this.GetDBMASubRepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBMASubRepCompleted(this, new GetDBMASubRepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTestReport1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTestReport1(string reqno) {
            object[] results = this.Invoke("GetTestReport1", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTestReport1Async(string reqno) {
            this.GetTestReport1Async(reqno, null);
        }
        
        /// <remarks/>
        public void GetTestReport1Async(string reqno, object userState) {
            if ((this.GetTestReport1OperationCompleted == null)) {
                this.GetTestReport1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestReport1OperationCompleted);
            }
            this.InvokeAsync("GetTestReport1", new object[] {
                        reqno}, this.GetTestReport1OperationCompleted, userState);
        }
        
        private void OnGetTestReport1OperationCompleted(object arg) {
            if ((this.GetTestReport1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestReport1Completed(this, new GetTestReport1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWILExlbrst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWILExlbrst(string case_No) {
            object[] results = this.Invoke("GetWILExlbrst", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWILExlbrstAsync(string case_No) {
            this.GetWILExlbrstAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWILExlbrstAsync(string case_No, object userState) {
            if ((this.GetWILExlbrstOperationCompleted == null)) {
                this.GetWILExlbrstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWILExlbrstOperationCompleted);
            }
            this.InvokeAsync("GetWILExlbrst", new object[] {
                        case_No}, this.GetWILExlbrstOperationCompleted, userState);
        }
        
        private void OnGetWILExlbrstOperationCompleted(object arg) {
            if ((this.GetWILExlbrstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWILExlbrstCompleted(this, new GetWILExlbrstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWILExrbrst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWILExrbrst(string case_No) {
            object[] results = this.Invoke("GetWILExrbrst", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWILExrbrstAsync(string case_No) {
            this.GetWILExrbrstAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWILExrbrstAsync(string case_No, object userState) {
            if ((this.GetWILExrbrstOperationCompleted == null)) {
                this.GetWILExrbrstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWILExrbrstOperationCompleted);
            }
            this.InvokeAsync("GetWILExrbrst", new object[] {
                        case_No}, this.GetWILExrbrstOperationCompleted, userState);
        }
        
        private void OnGetWILExrbrstOperationCompleted(object arg) {
            if ((this.GetWILExrbrstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWILExrbrstCompleted(this, new GetWILExrbrstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWISyscln", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWISyscln(string case_No) {
            object[] results = this.Invoke("GetWISyscln", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWISysclnAsync(string case_No) {
            this.GetWISysclnAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWISysclnAsync(string case_No, object userState) {
            if ((this.GetWISysclnOperationCompleted == null)) {
                this.GetWISysclnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWISysclnOperationCompleted);
            }
            this.InvokeAsync("GetWISyscln", new object[] {
                        case_No}, this.GetWISysclnOperationCompleted, userState);
        }
        
        private void OnGetWISysclnOperationCompleted(object arg) {
            if ((this.GetWISysclnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWISysclnCompleted(this, new GetWISysclnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWPSTNCLFT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWPSTNCLFT(string case_No) {
            object[] results = this.Invoke("GetWPSTNCLFT", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWPSTNCLFTAsync(string case_No) {
            this.GetWPSTNCLFTAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWPSTNCLFTAsync(string case_No, object userState) {
            if ((this.GetWPSTNCLFTOperationCompleted == null)) {
                this.GetWPSTNCLFTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWPSTNCLFTOperationCompleted);
            }
            this.InvokeAsync("GetWPSTNCLFT", new object[] {
                        case_No}, this.GetWPSTNCLFTOperationCompleted, userState);
        }
        
        private void OnGetWPSTNCLFTOperationCompleted(object arg) {
            if ((this.GetWPSTNCLFTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWPSTNCLFTCompleted(this, new GetWPSTNCLFTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWPSTNCCLFD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWPSTNCCLFD(string case_No) {
            object[] results = this.Invoke("GetWPSTNCCLFD", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWPSTNCCLFDAsync(string case_No) {
            this.GetWPSTNCCLFDAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWPSTNCCLFDAsync(string case_No, object userState) {
            if ((this.GetWPSTNCCLFDOperationCompleted == null)) {
                this.GetWPSTNCCLFDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWPSTNCCLFDOperationCompleted);
            }
            this.InvokeAsync("GetWPSTNCCLFD", new object[] {
                        case_No}, this.GetWPSTNCCLFDOperationCompleted, userState);
        }
        
        private void OnGetWPSTNCCLFDOperationCompleted(object arg) {
            if ((this.GetWPSTNCCLFDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWPSTNCCLFDCompleted(this, new GetWPSTNCCLFDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWADJPATDTS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWADJPATDTS(string case_no) {
            object[] results = this.Invoke("GetWADJPATDTS", new object[] {
                        case_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWADJPATDTSAsync(string case_no) {
            this.GetWADJPATDTSAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetWADJPATDTSAsync(string case_no, object userState) {
            if ((this.GetWADJPATDTSOperationCompleted == null)) {
                this.GetWADJPATDTSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWADJPATDTSOperationCompleted);
            }
            this.InvokeAsync("GetWADJPATDTS", new object[] {
                        case_no}, this.GetWADJPATDTSOperationCompleted, userState);
        }
        
        private void OnGetWADJPATDTSOperationCompleted(object arg) {
            if ((this.GetWADJPATDTSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWADJPATDTSCompleted(this, new GetWADJPATDTSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWADJCHMO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWADJCHMO(string case_no) {
            object[] results = this.Invoke("GetWADJCHMO", new object[] {
                        case_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWADJCHMOAsync(string case_no) {
            this.GetWADJCHMOAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetWADJCHMOAsync(string case_no, object userState) {
            if ((this.GetWADJCHMOOperationCompleted == null)) {
                this.GetWADJCHMOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWADJCHMOOperationCompleted);
            }
            this.InvokeAsync("GetWADJCHMO", new object[] {
                        case_no}, this.GetWADJCHMOOperationCompleted, userState);
        }
        
        private void OnGetWADJCHMOOperationCompleted(object arg) {
            if ((this.GetWADJCHMOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWADJCHMOCompleted(this, new GetWADJCHMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWADJRAD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWADJRAD(string case_no) {
            object[] results = this.Invoke("GetWADJRAD", new object[] {
                        case_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWADJRADAsync(string case_no) {
            this.GetWADJRADAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetWADJRADAsync(string case_no, object userState) {
            if ((this.GetWADJRADOperationCompleted == null)) {
                this.GetWADJRADOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWADJRADOperationCompleted);
            }
            this.InvokeAsync("GetWADJRAD", new object[] {
                        case_no}, this.GetWADJRADOperationCompleted, userState);
        }
        
        private void OnGetWADJRADOperationCompleted(object arg) {
            if ((this.GetWADJRADCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWADJRADCompleted(this, new GetWADJRADCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWADJHEMO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWADJHEMO(string case_no) {
            object[] results = this.Invoke("GetWADJHEMO", new object[] {
                        case_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWADJHEMOAsync(string case_no) {
            this.GetWADJHEMOAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetWADJHEMOAsync(string case_no, object userState) {
            if ((this.GetWADJHEMOOperationCompleted == null)) {
                this.GetWADJHEMOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWADJHEMOOperationCompleted);
            }
            this.InvokeAsync("GetWADJHEMO", new object[] {
                        case_no}, this.GetWADJHEMOOperationCompleted, userState);
        }
        
        private void OnGetWADJHEMOOperationCompleted(object arg) {
            if ((this.GetWADJHEMOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWADJHEMOCompleted(this, new GetWADJHEMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWADJTARGT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWADJTARGT(string case_no) {
            object[] results = this.Invoke("GetWADJTARGT", new object[] {
                        case_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWADJTARGTAsync(string case_no) {
            this.GetWADJTARGTAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetWADJTARGTAsync(string case_no, object userState) {
            if ((this.GetWADJTARGTOperationCompleted == null)) {
                this.GetWADJTARGTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWADJTARGTOperationCompleted);
            }
            this.InvokeAsync("GetWADJTARGT", new object[] {
                        case_no}, this.GetWADJTARGTOperationCompleted, userState);
        }
        
        private void OnGetWADJTARGTOperationCompleted(object arg) {
            if ((this.GetWADJTARGTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWADJTARGTCompleted(this, new GetWADJTARGTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWADJBISP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWADJBISP(string case_no) {
            object[] results = this.Invoke("GetWADJBISP", new object[] {
                        case_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWADJBISPAsync(string case_no) {
            this.GetWADJBISPAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetWADJBISPAsync(string case_no, object userState) {
            if ((this.GetWADJBISPOperationCompleted == null)) {
                this.GetWADJBISPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWADJBISPOperationCompleted);
            }
            this.InvokeAsync("GetWADJBISP", new object[] {
                        case_no}, this.GetWADJBISPOperationCompleted, userState);
        }
        
        private void OnGetWADJBISPOperationCompleted(object arg) {
            if ((this.GetWADJBISPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWADJBISPCompleted(this, new GetWADJBISPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWJCPatDtls", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWJCPatDtls(string case_no) {
            object[] results = this.Invoke("GetWJCPatDtls", new object[] {
                        case_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWJCPatDtlsAsync(string case_no) {
            this.GetWJCPatDtlsAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetWJCPatDtlsAsync(string case_no, object userState) {
            if ((this.GetWJCPatDtlsOperationCompleted == null)) {
                this.GetWJCPatDtlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWJCPatDtlsOperationCompleted);
            }
            this.InvokeAsync("GetWJCPatDtls", new object[] {
                        case_no}, this.GetWJCPatDtlsOperationCompleted, userState);
        }
        
        private void OnGetWJCPatDtlsOperationCompleted(object arg) {
            if ((this.GetWJCPatDtlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWJCPatDtlsCompleted(this, new GetWJCPatDtlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClinNote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClinNote(string case_no) {
            object[] results = this.Invoke("GetClinNote", new object[] {
                        case_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClinNoteAsync(string case_no) {
            this.GetClinNoteAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetClinNoteAsync(string case_no, object userState) {
            if ((this.GetClinNoteOperationCompleted == null)) {
                this.GetClinNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinNoteOperationCompleted);
            }
            this.InvokeAsync("GetClinNote", new object[] {
                        case_no}, this.GetClinNoteOperationCompleted, userState);
        }
        
        private void OnGetClinNoteOperationCompleted(object arg) {
            if ((this.GetClinNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinNoteCompleted(this, new GetClinNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWPSTSRGLFT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWPSTSRGLFT(string case_No) {
            object[] results = this.Invoke("GetWPSTSRGLFT", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWPSTSRGLFTAsync(string case_No) {
            this.GetWPSTSRGLFTAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWPSTSRGLFTAsync(string case_No, object userState) {
            if ((this.GetWPSTSRGLFTOperationCompleted == null)) {
                this.GetWPSTSRGLFTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWPSTSRGLFTOperationCompleted);
            }
            this.InvokeAsync("GetWPSTSRGLFT", new object[] {
                        case_No}, this.GetWPSTSRGLFTOperationCompleted, userState);
        }
        
        private void OnGetWPSTSRGLFTOperationCompleted(object arg) {
            if ((this.GetWPSTSRGLFTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWPSTSRGLFTCompleted(this, new GetWPSTSRGLFTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWPSTSRGRGT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWPSTSRGRGT(string case_No) {
            object[] results = this.Invoke("GetWPSTSRGRGT", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWPSTSRGRGTAsync(string case_No) {
            this.GetWPSTSRGRGTAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWPSTSRGRGTAsync(string case_No, object userState) {
            if ((this.GetWPSTSRGRGTOperationCompleted == null)) {
                this.GetWPSTSRGRGTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWPSTSRGRGTOperationCompleted);
            }
            this.InvokeAsync("GetWPSTSRGRGT", new object[] {
                        case_No}, this.GetWPSTSRGRGTOperationCompleted, userState);
        }
        
        private void OnGetWPSTSRGRGTOperationCompleted(object arg) {
            if ((this.GetWPSTSRGRGTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWPSTSRGRGTCompleted(this, new GetWPSTSRGRGTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWPSTSRGPDT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWPSTSRGPDT(string case_No) {
            object[] results = this.Invoke("GetWPSTSRGPDT", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWPSTSRGPDTAsync(string case_No) {
            this.GetWPSTSRGPDTAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWPSTSRGPDTAsync(string case_No, object userState) {
            if ((this.GetWPSTSRGPDTOperationCompleted == null)) {
                this.GetWPSTSRGPDTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWPSTSRGPDTOperationCompleted);
            }
            this.InvokeAsync("GetWPSTSRGPDT", new object[] {
                        case_No}, this.GetWPSTSRGPDTOperationCompleted, userState);
        }
        
        private void OnGetWPSTSRGPDTOperationCompleted(object arg) {
            if ((this.GetWPSTSRGPDTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWPSTSRGPDTCompleted(this, new GetWPSTSRGPDTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIPATDTLS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIPATDTLS(string case_No) {
            object[] results = this.Invoke("GetWIPATDTLS", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIPATDTLSAsync(string case_No) {
            this.GetWIPATDTLSAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWIPATDTLSAsync(string case_No, object userState) {
            if ((this.GetWIPATDTLSOperationCompleted == null)) {
                this.GetWIPATDTLSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIPATDTLSOperationCompleted);
            }
            this.InvokeAsync("GetWIPATDTLS", new object[] {
                        case_No}, this.GetWIPATDTLSOperationCompleted, userState);
        }
        
        private void OnGetWIPATDTLSOperationCompleted(object arg) {
            if ((this.GetWIPATDTLSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIPATDTLSCompleted(this, new GetWIPATDTLSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWISURGYLFT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWISURGYLFT(string case_No) {
            object[] results = this.Invoke("GetWISURGYLFT", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWISURGYLFTAsync(string case_No) {
            this.GetWISURGYLFTAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWISURGYLFTAsync(string case_No, object userState) {
            if ((this.GetWISURGYLFTOperationCompleted == null)) {
                this.GetWISURGYLFTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWISURGYLFTOperationCompleted);
            }
            this.InvokeAsync("GetWISURGYLFT", new object[] {
                        case_No}, this.GetWISURGYLFTOperationCompleted, userState);
        }
        
        private void OnGetWISURGYLFTOperationCompleted(object arg) {
            if ((this.GetWISURGYLFTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWISURGYLFTCompleted(this, new GetWISURGYLFTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWISURGYRGT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWISURGYRGT(string case_No) {
            object[] results = this.Invoke("GetWISURGYRGT", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWISURGYRGTAsync(string case_No) {
            this.GetWISURGYRGTAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWISURGYRGTAsync(string case_No, object userState) {
            if ((this.GetWISURGYRGTOperationCompleted == null)) {
                this.GetWISURGYRGTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWISURGYRGTOperationCompleted);
            }
            this.InvokeAsync("GetWISURGYRGT", new object[] {
                        case_No}, this.GetWISURGYRGTOperationCompleted, userState);
        }
        
        private void OnGetWISURGYRGTOperationCompleted(object arg) {
            if ((this.GetWISURGYRGTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWISURGYRGTCompleted(this, new GetWISURGYRGTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIADJCHMEO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIADJCHMEO(string case_No) {
            object[] results = this.Invoke("GetWIADJCHMEO", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIADJCHMEOAsync(string case_No) {
            this.GetWIADJCHMEOAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWIADJCHMEOAsync(string case_No, object userState) {
            if ((this.GetWIADJCHMEOOperationCompleted == null)) {
                this.GetWIADJCHMEOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIADJCHMEOOperationCompleted);
            }
            this.InvokeAsync("GetWIADJCHMEO", new object[] {
                        case_No}, this.GetWIADJCHMEOOperationCompleted, userState);
        }
        
        private void OnGetWIADJCHMEOOperationCompleted(object arg) {
            if ((this.GetWIADJCHMEOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIADJCHMEOCompleted(this, new GetWIADJCHMEOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIADJTTRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIADJTTRT(string case_No) {
            object[] results = this.Invoke("GetWIADJTTRT", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIADJTTRTAsync(string case_No) {
            this.GetWIADJTTRTAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWIADJTTRTAsync(string case_No, object userState) {
            if ((this.GetWIADJTTRTOperationCompleted == null)) {
                this.GetWIADJTTRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIADJTTRTOperationCompleted);
            }
            this.InvokeAsync("GetWIADJTTRT", new object[] {
                        case_No}, this.GetWIADJTTRTOperationCompleted, userState);
        }
        
        private void OnGetWIADJTTRTOperationCompleted(object arg) {
            if ((this.GetWIADJTTRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIADJTTRTCompleted(this, new GetWIADJTTRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIPRSCOM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIPRSCOM(string case_No) {
            object[] results = this.Invoke("GetWIPRSCOM", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIPRSCOMAsync(string case_No) {
            this.GetWIPRSCOMAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWIPRSCOMAsync(string case_No, object userState) {
            if ((this.GetWIPRSCOMOperationCompleted == null)) {
                this.GetWIPRSCOMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIPRSCOMOperationCompleted);
            }
            this.InvokeAsync("GetWIPRSCOM", new object[] {
                        case_No}, this.GetWIPRSCOMOperationCompleted, userState);
        }
        
        private void OnGetWIPRSCOMOperationCompleted(object arg) {
            if ((this.GetWIPRSCOMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIPRSCOMCompleted(this, new GetWIPRSCOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIPATDTLS_INTERVNTN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIPATDTLS_INTERVNTN(string case_No) {
            object[] results = this.Invoke("GetWIPATDTLS_INTERVNTN", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIPATDTLS_INTERVNTNAsync(string case_No) {
            this.GetWIPATDTLS_INTERVNTNAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWIPATDTLS_INTERVNTNAsync(string case_No, object userState) {
            if ((this.GetWIPATDTLS_INTERVNTNOperationCompleted == null)) {
                this.GetWIPATDTLS_INTERVNTNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIPATDTLS_INTERVNTNOperationCompleted);
            }
            this.InvokeAsync("GetWIPATDTLS_INTERVNTN", new object[] {
                        case_No}, this.GetWIPATDTLS_INTERVNTNOperationCompleted, userState);
        }
        
        private void OnGetWIPATDTLS_INTERVNTNOperationCompleted(object arg) {
            if ((this.GetWIPATDTLS_INTERVNTNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIPATDTLS_INTERVNTNCompleted(this, new GetWIPATDTLS_INTERVNTNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIPITSSUE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIPITSSUE(string case_No) {
            object[] results = this.Invoke("GetWIPITSSUE", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIPITSSUEAsync(string case_No) {
            this.GetWIPITSSUEAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWIPITSSUEAsync(string case_No, object userState) {
            if ((this.GetWIPITSSUEOperationCompleted == null)) {
                this.GetWIPITSSUEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIPITSSUEOperationCompleted);
            }
            this.InvokeAsync("GetWIPITSSUE", new object[] {
                        case_No}, this.GetWIPITSSUEOperationCompleted, userState);
        }
        
        private void OnGetWIPITSSUEOperationCompleted(object arg) {
            if ((this.GetWIPITSSUECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIPITSSUECompleted(this, new GetWIPITSSUECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWITDIMG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWITDIMG(string case_No) {
            object[] results = this.Invoke("GetWITDIMG", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWITDIMGAsync(string case_No) {
            this.GetWITDIMGAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWITDIMGAsync(string case_No, object userState) {
            if ((this.GetWITDIMGOperationCompleted == null)) {
                this.GetWITDIMGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWITDIMGOperationCompleted);
            }
            this.InvokeAsync("GetWITDIMG", new object[] {
                        case_No}, this.GetWITDIMGOperationCompleted, userState);
        }
        
        private void OnGetWITDIMGOperationCompleted(object arg) {
            if ((this.GetWITDIMGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWITDIMGCompleted(this, new GetWITDIMGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIPICNEO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIPICNEO(string case_No) {
            object[] results = this.Invoke("GetWIPICNEO", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIPICNEOAsync(string case_No) {
            this.GetWIPICNEOAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWIPICNEOAsync(string case_No, object userState) {
            if ((this.GetWIPICNEOOperationCompleted == null)) {
                this.GetWIPICNEOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIPICNEOOperationCompleted);
            }
            this.InvokeAsync("GetWIPICNEO", new object[] {
                        case_No}, this.GetWIPICNEOOperationCompleted, userState);
        }
        
        private void OnGetWIPICNEOOperationCompleted(object arg) {
            if ((this.GetWIPICNEOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIPICNEOCompleted(this, new GetWIPICNEOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIPICLRLR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIPICLRLR(string case_No) {
            object[] results = this.Invoke("GetWIPICLRLR", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIPICLRLRAsync(string case_No) {
            this.GetWIPICLRLRAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWIPICLRLRAsync(string case_No, object userState) {
            if ((this.GetWIPICLRLROperationCompleted == null)) {
                this.GetWIPICLRLROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIPICLRLROperationCompleted);
            }
            this.InvokeAsync("GetWIPICLRLR", new object[] {
                        case_No}, this.GetWIPICLRLROperationCompleted, userState);
        }
        
        private void OnGetWIPICLRLROperationCompleted(object arg) {
            if ((this.GetWIPICLRLRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIPICLRLRCompleted(this, new GetWIPICLRLRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIPALLCHMO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIPALLCHMO(string case_No) {
            object[] results = this.Invoke("GetWIPALLCHMO", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIPALLCHMOAsync(string case_No) {
            this.GetWIPALLCHMOAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWIPALLCHMOAsync(string case_No, object userState) {
            if ((this.GetWIPALLCHMOOperationCompleted == null)) {
                this.GetWIPALLCHMOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIPALLCHMOOperationCompleted);
            }
            this.InvokeAsync("GetWIPALLCHMO", new object[] {
                        case_No}, this.GetWIPALLCHMOOperationCompleted, userState);
        }
        
        private void OnGetWIPALLCHMOOperationCompleted(object arg) {
            if ((this.GetWIPALLCHMOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIPALLCHMOCompleted(this, new GetWIPALLCHMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIPTTT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIPTTT(string case_No) {
            object[] results = this.Invoke("GetWIPTTT", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIPTTTAsync(string case_No) {
            this.GetWIPTTTAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWIPTTTAsync(string case_No, object userState) {
            if ((this.GetWIPTTTOperationCompleted == null)) {
                this.GetWIPTTTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIPTTTOperationCompleted);
            }
            this.InvokeAsync("GetWIPTTT", new object[] {
                        case_No}, this.GetWIPTTTOperationCompleted, userState);
        }
        
        private void OnGetWIPTTTOperationCompleted(object arg) {
            if ((this.GetWIPTTTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIPTTTCompleted(this, new GetWIPTTTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWIPTHTSRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWIPTHTSRT(string case_No) {
            object[] results = this.Invoke("GetWIPTHTSRT", new object[] {
                        case_No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWIPTHTSRTAsync(string case_No) {
            this.GetWIPTHTSRTAsync(case_No, null);
        }
        
        /// <remarks/>
        public void GetWIPTHTSRTAsync(string case_No, object userState) {
            if ((this.GetWIPTHTSRTOperationCompleted == null)) {
                this.GetWIPTHTSRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWIPTHTSRTOperationCompleted);
            }
            this.InvokeAsync("GetWIPTHTSRT", new object[] {
                        case_No}, this.GetWIPTHTSRTOperationCompleted, userState);
        }
        
        private void OnGetWIPTHTSRTOperationCompleted(object arg) {
            if ((this.GetWIPTHTSRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWIPTHTSRTCompleted(this, new GetWIPTHTSRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrugName2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDrugName2(string itemCode) {
            object[] results = this.Invoke("GetDrugName2", new object[] {
                        itemCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrugName2Async(string itemCode) {
            this.GetDrugName2Async(itemCode, null);
        }
        
        /// <remarks/>
        public void GetDrugName2Async(string itemCode, object userState) {
            if ((this.GetDrugName2OperationCompleted == null)) {
                this.GetDrugName2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrugName2OperationCompleted);
            }
            this.InvokeAsync("GetDrugName2", new object[] {
                        itemCode}, this.GetDrugName2OperationCompleted, userState);
        }
        
        private void OnGetDrugName2OperationCompleted(object arg) {
            if ((this.GetDrugName2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrugName2Completed(this, new GetDrugName2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AppendDrugName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AppendDrugName(string drugName, int drgCnt1) {
            object[] results = this.Invoke("AppendDrugName", new object[] {
                        drugName,
                        drgCnt1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AppendDrugNameAsync(string drugName, int drgCnt1) {
            this.AppendDrugNameAsync(drugName, drgCnt1, null);
        }
        
        /// <remarks/>
        public void AppendDrugNameAsync(string drugName, int drgCnt1, object userState) {
            if ((this.AppendDrugNameOperationCompleted == null)) {
                this.AppendDrugNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppendDrugNameOperationCompleted);
            }
            this.InvokeAsync("AppendDrugName", new object[] {
                        drugName,
                        drgCnt1}, this.AppendDrugNameOperationCompleted, userState);
        }
        
        private void OnAppendDrugNameOperationCompleted(object arg) {
            if ((this.AppendDrugNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppendDrugNameCompleted(this, new AppendDrugNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDFNReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDFNReport(string reqno) {
            object[] results = this.Invoke("GetDFNReport", new object[] {
                        reqno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDFNReportAsync(string reqno) {
            this.GetDFNReportAsync(reqno, null);
        }
        
        /// <remarks/>
        public void GetDFNReportAsync(string reqno, object userState) {
            if ((this.GetDFNReportOperationCompleted == null)) {
                this.GetDFNReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDFNReportOperationCompleted);
            }
            this.InvokeAsync("GetDFNReport", new object[] {
                        reqno}, this.GetDFNReportOperationCompleted, userState);
        }
        
        private void OnGetDFNReportOperationCompleted(object arg) {
            if ((this.GetDFNReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDFNReportCompleted(this, new GetDFNReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPMConditions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPMConditions(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetPMConditions", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPMConditionsAsync(string caseNo, string hstExmNo) {
            this.GetPMConditionsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetPMConditionsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetPMConditionsOperationCompleted == null)) {
                this.GetPMConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPMConditionsOperationCompleted);
            }
            this.InvokeAsync("GetPMConditions", new object[] {
                        caseNo,
                        hstExmNo}, this.GetPMConditionsOperationCompleted, userState);
        }
        
        private void OnGetPMConditionsOperationCompleted(object arg) {
            if ((this.GetPMConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPMConditionsCompleted(this, new GetPMConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConsciousData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetConsciousData(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetConsciousData", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetConsciousDataAsync(string caseNo, string hstExmNo) {
            this.GetConsciousDataAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetConsciousDataAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetConsciousDataOperationCompleted == null)) {
                this.GetConsciousDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConsciousDataOperationCompleted);
            }
            this.InvokeAsync("GetConsciousData", new object[] {
                        caseNo,
                        hstExmNo}, this.GetConsciousDataOperationCompleted, userState);
        }
        
        private void OnGetConsciousDataOperationCompleted(object arg) {
            if ((this.GetConsciousDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConsciousDataCompleted(this, new GetConsciousDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOHFData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOHFData(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetOHFData", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOHFDataAsync(string caseNo, string hstExmNo) {
            this.GetOHFDataAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetOHFDataAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetOHFDataOperationCompleted == null)) {
                this.GetOHFDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOHFDataOperationCompleted);
            }
            this.InvokeAsync("GetOHFData", new object[] {
                        caseNo,
                        hstExmNo}, this.GetOHFDataOperationCompleted, userState);
        }
        
        private void OnGetOHFDataOperationCompleted(object arg) {
            if ((this.GetOHFDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOHFDataCompleted(this, new GetOHFDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFollowUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFollowUp(string caseNo, ref string Err) {
            object[] results = this.Invoke("GetFollowUp", new object[] {
                        caseNo,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFollowUpAsync(string caseNo, string Err) {
            this.GetFollowUpAsync(caseNo, Err, null);
        }
        
        /// <remarks/>
        public void GetFollowUpAsync(string caseNo, string Err, object userState) {
            if ((this.GetFollowUpOperationCompleted == null)) {
                this.GetFollowUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFollowUpOperationCompleted);
            }
            this.InvokeAsync("GetFollowUp", new object[] {
                        caseNo,
                        Err}, this.GetFollowUpOperationCompleted, userState);
        }
        
        private void OnGetFollowUpOperationCompleted(object arg) {
            if ((this.GetFollowUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFollowUpCompleted(this, new GetFollowUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDeathStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CheckDeathStatus(string caseNo, ref string Err) {
            object[] results = this.Invoke("CheckDeathStatus", new object[] {
                        caseNo,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDeathStatusAsync(string caseNo, string Err) {
            this.CheckDeathStatusAsync(caseNo, Err, null);
        }
        
        /// <remarks/>
        public void CheckDeathStatusAsync(string caseNo, string Err, object userState) {
            if ((this.CheckDeathStatusOperationCompleted == null)) {
                this.CheckDeathStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDeathStatusOperationCompleted);
            }
            this.InvokeAsync("CheckDeathStatus", new object[] {
                        caseNo,
                        Err}, this.CheckDeathStatusOperationCompleted, userState);
        }
        
        private void OnCheckDeathStatusOperationCompleted(object arg) {
            if ((this.CheckDeathStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDeathStatusCompleted(this, new CheckDeathStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrimaryDiseaseDescription", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrimaryDiseaseDescription(string prmcCode, ref string Err) {
            object[] results = this.Invoke("GetPrimaryDiseaseDescription", new object[] {
                        prmcCode,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrimaryDiseaseDescriptionAsync(string prmcCode, string Err) {
            this.GetPrimaryDiseaseDescriptionAsync(prmcCode, Err, null);
        }
        
        /// <remarks/>
        public void GetPrimaryDiseaseDescriptionAsync(string prmcCode, string Err, object userState) {
            if ((this.GetPrimaryDiseaseDescriptionOperationCompleted == null)) {
                this.GetPrimaryDiseaseDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrimaryDiseaseDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetPrimaryDiseaseDescription", new object[] {
                        prmcCode,
                        Err}, this.GetPrimaryDiseaseDescriptionOperationCompleted, userState);
        }
        
        private void OnGetPrimaryDiseaseDescriptionOperationCompleted(object arg) {
            if ((this.GetPrimaryDiseaseDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrimaryDiseaseDescriptionCompleted(this, new GetPrimaryDiseaseDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAddressDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAddressDetails(string userId) {
            object[] results = this.Invoke("GetAddressDetails", new object[] {
                        userId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAddressDetailsAsync(string userId) {
            this.GetAddressDetailsAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAddressDetailsAsync(string userId, object userState) {
            if ((this.GetAddressDetailsOperationCompleted == null)) {
                this.GetAddressDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAddressDetails", new object[] {
                        userId}, this.GetAddressDetailsOperationCompleted, userState);
        }
        
        private void OnGetAddressDetailsOperationCompleted(object arg) {
            if ((this.GetAddressDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressDetailsCompleted(this, new GetAddressDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewRegData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetNewRegData(string userId, ref string Err) {
            object[] results = this.Invoke("GetNewRegData", new object[] {
                        userId,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewRegDataAsync(string userId, string Err) {
            this.GetNewRegDataAsync(userId, Err, null);
        }
        
        /// <remarks/>
        public void GetNewRegDataAsync(string userId, string Err, object userState) {
            if ((this.GetNewRegDataOperationCompleted == null)) {
                this.GetNewRegDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewRegDataOperationCompleted);
            }
            this.InvokeAsync("GetNewRegData", new object[] {
                        userId,
                        Err}, this.GetNewRegDataOperationCompleted, userState);
        }
        
        private void OnGetNewRegDataOperationCompleted(object arg) {
            if ((this.GetNewRegDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewRegDataCompleted(this, new GetNewRegDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeTitle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmployeeTitle(string empCode, ref string Err) {
            object[] results = this.Invoke("GetEmployeeTitle", new object[] {
                        empCode,
                        Err});
            Err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeTitleAsync(string empCode, string Err) {
            this.GetEmployeeTitleAsync(empCode, Err, null);
        }
        
        /// <remarks/>
        public void GetEmployeeTitleAsync(string empCode, string Err, object userState) {
            if ((this.GetEmployeeTitleOperationCompleted == null)) {
                this.GetEmployeeTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeTitleOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeTitle", new object[] {
                        empCode,
                        Err}, this.GetEmployeeTitleOperationCompleted, userState);
        }
        
        private void OnGetEmployeeTitleOperationCompleted(object arg) {
            if ((this.GetEmployeeTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeTitleCompleted(this, new GetEmployeeTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewRequisitionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetNewRequisitionData(string reqNo, ref string Err) {
            object[] results = this.Invoke("GetNewRequisitionData", new object[] {
                        reqNo,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewRequisitionDataAsync(string reqNo, string Err) {
            this.GetNewRequisitionDataAsync(reqNo, Err, null);
        }
        
        /// <remarks/>
        public void GetNewRequisitionDataAsync(string reqNo, string Err, object userState) {
            if ((this.GetNewRequisitionDataOperationCompleted == null)) {
                this.GetNewRequisitionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewRequisitionDataOperationCompleted);
            }
            this.InvokeAsync("GetNewRequisitionData", new object[] {
                        reqNo,
                        Err}, this.GetNewRequisitionDataOperationCompleted, userState);
        }
        
        private void OnGetNewRequisitionDataOperationCompleted(object arg) {
            if ((this.GetNewRequisitionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewRequisitionDataCompleted(this, new GetNewRequisitionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRequisitionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRequisitionData(string reqNo, ref string Err) {
            object[] results = this.Invoke("GetRequisitionData", new object[] {
                        reqNo,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequisitionDataAsync(string reqNo, string Err) {
            this.GetRequisitionDataAsync(reqNo, Err, null);
        }
        
        /// <remarks/>
        public void GetRequisitionDataAsync(string reqNo, string Err, object userState) {
            if ((this.GetRequisitionDataOperationCompleted == null)) {
                this.GetRequisitionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequisitionDataOperationCompleted);
            }
            this.InvokeAsync("GetRequisitionData", new object[] {
                        reqNo,
                        Err}, this.GetRequisitionDataOperationCompleted, userState);
        }
        
        private void OnGetRequisitionDataOperationCompleted(object arg) {
            if ((this.GetRequisitionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequisitionDataCompleted(this, new GetRequisitionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSurgicalList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SelectListItem[] GetAllSurgicalList(string case_no, string d_type, string surg_no) {
            object[] results = this.Invoke("GetAllSurgicalList", new object[] {
                        case_no,
                        d_type,
                        surg_no});
            return ((SelectListItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSurgicalListAsync(string case_no, string d_type, string surg_no) {
            this.GetAllSurgicalListAsync(case_no, d_type, surg_no, null);
        }
        
        /// <remarks/>
        public void GetAllSurgicalListAsync(string case_no, string d_type, string surg_no, object userState) {
            if ((this.GetAllSurgicalListOperationCompleted == null)) {
                this.GetAllSurgicalListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSurgicalListOperationCompleted);
            }
            this.InvokeAsync("GetAllSurgicalList", new object[] {
                        case_no,
                        d_type,
                        surg_no}, this.GetAllSurgicalListOperationCompleted, userState);
        }
        
        private void OnGetAllSurgicalListOperationCompleted(object arg) {
            if ((this.GetAllSurgicalListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSurgicalListCompleted(this, new GetAllSurgicalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPAE_No_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SelectListItem[] GetPAE_No_List(string case_no, string d_type) {
            object[] results = this.Invoke("GetPAE_No_List", new object[] {
                        case_no,
                        d_type});
            return ((SelectListItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPAE_No_ListAsync(string case_no, string d_type) {
            this.GetPAE_No_ListAsync(case_no, d_type, null);
        }
        
        /// <remarks/>
        public void GetPAE_No_ListAsync(string case_no, string d_type, object userState) {
            if ((this.GetPAE_No_ListOperationCompleted == null)) {
                this.GetPAE_No_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPAE_No_ListOperationCompleted);
            }
            this.InvokeAsync("GetPAE_No_List", new object[] {
                        case_no,
                        d_type}, this.GetPAE_No_ListOperationCompleted, userState);
        }
        
        private void OnGetPAE_No_ListOperationCompleted(object arg) {
            if ((this.GetPAE_No_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPAE_No_ListCompleted(this, new GetPAE_No_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Anesthesia_ProcNo_List1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SelectListItem[] Get_Anesthesia_ProcNo_List1(string case_no, string d_type) {
            object[] results = this.Invoke("Get_Anesthesia_ProcNo_List1", new object[] {
                        case_no,
                        d_type});
            return ((SelectListItem[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_Anesthesia_ProcNo_List1Async(string case_no, string d_type) {
            this.Get_Anesthesia_ProcNo_List1Async(case_no, d_type, null);
        }
        
        /// <remarks/>
        public void Get_Anesthesia_ProcNo_List1Async(string case_no, string d_type, object userState) {
            if ((this.Get_Anesthesia_ProcNo_List1OperationCompleted == null)) {
                this.Get_Anesthesia_ProcNo_List1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Anesthesia_ProcNo_List1OperationCompleted);
            }
            this.InvokeAsync("Get_Anesthesia_ProcNo_List1", new object[] {
                        case_no,
                        d_type}, this.Get_Anesthesia_ProcNo_List1OperationCompleted, userState);
        }
        
        private void OnGet_Anesthesia_ProcNo_List1OperationCompleted(object arg) {
            if ((this.Get_Anesthesia_ProcNo_List1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Anesthesia_ProcNo_List1Completed(this, new Get_Anesthesia_ProcNo_List1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSurgicalList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SelectListItem[] GetSurgicalList(string case_no, string d_type) {
            object[] results = this.Invoke("GetSurgicalList", new object[] {
                        case_no,
                        d_type});
            return ((SelectListItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSurgicalListAsync(string case_no, string d_type) {
            this.GetSurgicalListAsync(case_no, d_type, null);
        }
        
        /// <remarks/>
        public void GetSurgicalListAsync(string case_no, string d_type, object userState) {
            if ((this.GetSurgicalListOperationCompleted == null)) {
                this.GetSurgicalListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSurgicalListOperationCompleted);
            }
            this.InvokeAsync("GetSurgicalList", new object[] {
                        case_no,
                        d_type}, this.GetSurgicalListOperationCompleted, userState);
        }
        
        private void OnGetSurgicalListOperationCompleted(object arg) {
            if ((this.GetSurgicalListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSurgicalListCompleted(this, new GetSurgicalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrescriptionMaster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrescriptionMaster(string case_no, string connType) {
            object[] results = this.Invoke("GetPrescriptionMaster", new object[] {
                        case_no,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionMasterAsync(string case_no, string connType) {
            this.GetPrescriptionMasterAsync(case_no, connType, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionMasterAsync(string case_no, string connType, object userState) {
            if ((this.GetPrescriptionMasterOperationCompleted == null)) {
                this.GetPrescriptionMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionMasterOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionMaster", new object[] {
                        case_no,
                        connType}, this.GetPrescriptionMasterOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionMasterOperationCompleted(object arg) {
            if ((this.GetPrescriptionMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionMasterCompleted(this, new GetPrescriptionMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrescriptionDetailAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrescriptionDetailAmount(string pres_id, string connType) {
            object[] results = this.Invoke("GetPrescriptionDetailAmount", new object[] {
                        pres_id,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionDetailAmountAsync(string pres_id, string connType) {
            this.GetPrescriptionDetailAmountAsync(pres_id, connType, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionDetailAmountAsync(string pres_id, string connType, object userState) {
            if ((this.GetPrescriptionDetailAmountOperationCompleted == null)) {
                this.GetPrescriptionDetailAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionDetailAmountOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionDetailAmount", new object[] {
                        pres_id,
                        connType}, this.GetPrescriptionDetailAmountOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionDetailAmountOperationCompleted(object arg) {
            if ((this.GetPrescriptionDetailAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionDetailAmountCompleted(this, new GetPrescriptionDetailAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrescriptionMasterByCaseNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrescriptionMasterByCaseNo(string case_no, string connType) {
            object[] results = this.Invoke("GetPrescriptionMasterByCaseNo", new object[] {
                        case_no,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionMasterByCaseNoAsync(string case_no, string connType) {
            this.GetPrescriptionMasterByCaseNoAsync(case_no, connType, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionMasterByCaseNoAsync(string case_no, string connType, object userState) {
            if ((this.GetPrescriptionMasterByCaseNoOperationCompleted == null)) {
                this.GetPrescriptionMasterByCaseNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionMasterByCaseNoOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionMasterByCaseNo", new object[] {
                        case_no,
                        connType}, this.GetPrescriptionMasterByCaseNoOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionMasterByCaseNoOperationCompleted(object arg) {
            if ((this.GetPrescriptionMasterByCaseNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionMasterByCaseNoCompleted(this, new GetPrescriptionMasterByCaseNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrescriptionDetailsByPresId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrescriptionDetailsByPresId(string pres_id, string connType) {
            object[] results = this.Invoke("GetPrescriptionDetailsByPresId", new object[] {
                        pres_id,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionDetailsByPresIdAsync(string pres_id, string connType) {
            this.GetPrescriptionDetailsByPresIdAsync(pres_id, connType, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionDetailsByPresIdAsync(string pres_id, string connType, object userState) {
            if ((this.GetPrescriptionDetailsByPresIdOperationCompleted == null)) {
                this.GetPrescriptionDetailsByPresIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionDetailsByPresIdOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionDetailsByPresId", new object[] {
                        pres_id,
                        connType}, this.GetPrescriptionDetailsByPresIdOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionDetailsByPresIdOperationCompleted(object arg) {
            if ((this.GetPrescriptionDetailsByPresIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionDetailsByPresIdCompleted(this, new GetPrescriptionDetailsByPresIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrescriptionMasterById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrescriptionMasterById(string pres_id, string connType) {
            object[] results = this.Invoke("GetPrescriptionMasterById", new object[] {
                        pres_id,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionMasterByIdAsync(string pres_id, string connType) {
            this.GetPrescriptionMasterByIdAsync(pres_id, connType, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionMasterByIdAsync(string pres_id, string connType, object userState) {
            if ((this.GetPrescriptionMasterByIdOperationCompleted == null)) {
                this.GetPrescriptionMasterByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionMasterByIdOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionMasterById", new object[] {
                        pres_id,
                        connType}, this.GetPrescriptionMasterByIdOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionMasterByIdOperationCompleted(object arg) {
            if ((this.GetPrescriptionMasterByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionMasterByIdCompleted(this, new GetPrescriptionMasterByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientDetailsByCaseNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPatientDetailsByCaseNo(string case_no, string connType) {
            object[] results = this.Invoke("GetPatientDetailsByCaseNo", new object[] {
                        case_no,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientDetailsByCaseNoAsync(string case_no, string connType) {
            this.GetPatientDetailsByCaseNoAsync(case_no, connType, null);
        }
        
        /// <remarks/>
        public void GetPatientDetailsByCaseNoAsync(string case_no, string connType, object userState) {
            if ((this.GetPatientDetailsByCaseNoOperationCompleted == null)) {
                this.GetPatientDetailsByCaseNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientDetailsByCaseNoOperationCompleted);
            }
            this.InvokeAsync("GetPatientDetailsByCaseNo", new object[] {
                        case_no,
                        connType}, this.GetPatientDetailsByCaseNoOperationCompleted, userState);
        }
        
        private void OnGetPatientDetailsByCaseNoOperationCompleted(object arg) {
            if ((this.GetPatientDetailsByCaseNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientDetailsByCaseNoCompleted(this, new GetPatientDetailsByCaseNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrescriptionDetailById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrescriptionDetailById(string pres_id, string connType) {
            object[] results = this.Invoke("GetPrescriptionDetailById", new object[] {
                        pres_id,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionDetailByIdAsync(string pres_id, string connType) {
            this.GetPrescriptionDetailByIdAsync(pres_id, connType, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionDetailByIdAsync(string pres_id, string connType, object userState) {
            if ((this.GetPrescriptionDetailByIdOperationCompleted == null)) {
                this.GetPrescriptionDetailByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionDetailByIdOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionDetailById", new object[] {
                        pres_id,
                        connType}, this.GetPrescriptionDetailByIdOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionDetailByIdOperationCompleted(object arg) {
            if ((this.GetPrescriptionDetailByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionDetailByIdCompleted(this, new GetPrescriptionDetailByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConcessionByPrescriptionId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetConcessionByPrescriptionId(string prescid, string connType) {
            object[] results = this.Invoke("GetConcessionByPrescriptionId", new object[] {
                        prescid,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetConcessionByPrescriptionIdAsync(string prescid, string connType) {
            this.GetConcessionByPrescriptionIdAsync(prescid, connType, null);
        }
        
        /// <remarks/>
        public void GetConcessionByPrescriptionIdAsync(string prescid, string connType, object userState) {
            if ((this.GetConcessionByPrescriptionIdOperationCompleted == null)) {
                this.GetConcessionByPrescriptionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConcessionByPrescriptionIdOperationCompleted);
            }
            this.InvokeAsync("GetConcessionByPrescriptionId", new object[] {
                        prescid,
                        connType}, this.GetConcessionByPrescriptionIdOperationCompleted, userState);
        }
        
        private void OnGetConcessionByPrescriptionIdOperationCompleted(object arg) {
            if ((this.GetConcessionByPrescriptionIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConcessionByPrescriptionIdCompleted(this, new GetConcessionByPrescriptionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrescriptionMasterById1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrescriptionMasterById1(string pres_id, string connType) {
            object[] results = this.Invoke("GetPrescriptionMasterById1", new object[] {
                        pres_id,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionMasterById1Async(string pres_id, string connType) {
            this.GetPrescriptionMasterById1Async(pres_id, connType, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionMasterById1Async(string pres_id, string connType, object userState) {
            if ((this.GetPrescriptionMasterById1OperationCompleted == null)) {
                this.GetPrescriptionMasterById1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionMasterById1OperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionMasterById1", new object[] {
                        pres_id,
                        connType}, this.GetPrescriptionMasterById1OperationCompleted, userState);
        }
        
        private void OnGetPrescriptionMasterById1OperationCompleted(object arg) {
            if ((this.GetPrescriptionMasterById1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionMasterById1Completed(this, new GetPrescriptionMasterById1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTA101Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTA101Details(string case_no, string connType) {
            object[] results = this.Invoke("GetTA101Details", new object[] {
                        case_no,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTA101DetailsAsync(string case_no, string connType) {
            this.GetTA101DetailsAsync(case_no, connType, null);
        }
        
        /// <remarks/>
        public void GetTA101DetailsAsync(string case_no, string connType, object userState) {
            if ((this.GetTA101DetailsOperationCompleted == null)) {
                this.GetTA101DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTA101DetailsOperationCompleted);
            }
            this.InvokeAsync("GetTA101Details", new object[] {
                        case_no,
                        connType}, this.GetTA101DetailsOperationCompleted, userState);
        }
        
        private void OnGetTA101DetailsOperationCompleted(object arg) {
            if ((this.GetTA101DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTA101DetailsCompleted(this, new GetTA101DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrescriptionDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrescriptionDetail(string pres_id, string connType) {
            object[] results = this.Invoke("GetPrescriptionDetail", new object[] {
                        pres_id,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionDetailAsync(string pres_id, string connType) {
            this.GetPrescriptionDetailAsync(pres_id, connType, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionDetailAsync(string pres_id, string connType, object userState) {
            if ((this.GetPrescriptionDetailOperationCompleted == null)) {
                this.GetPrescriptionDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionDetailOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionDetail", new object[] {
                        pres_id,
                        connType}, this.GetPrescriptionDetailOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionDetailOperationCompleted(object arg) {
            if ((this.GetPrescriptionDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionDetailCompleted(this, new GetPrescriptionDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConcessionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetConcessionData(string prescid, string connType) {
            object[] results = this.Invoke("GetConcessionData", new object[] {
                        prescid,
                        connType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetConcessionDataAsync(string prescid, string connType) {
            this.GetConcessionDataAsync(prescid, connType, null);
        }
        
        /// <remarks/>
        public void GetConcessionDataAsync(string prescid, string connType, object userState) {
            if ((this.GetConcessionDataOperationCompleted == null)) {
                this.GetConcessionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConcessionDataOperationCompleted);
            }
            this.InvokeAsync("GetConcessionData", new object[] {
                        prescid,
                        connType}, this.GetConcessionDataOperationCompleted, userState);
        }
        
        private void OnGetConcessionDataOperationCompleted(object arg) {
            if ((this.GetConcessionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConcessionDataCompleted(this, new GetConcessionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetName(string empCode, string connType) {
            object[] results = this.Invoke("GetName", new object[] {
                        empCode,
                        connType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNameAsync(string empCode, string connType) {
            this.GetNameAsync(empCode, connType, null);
        }
        
        /// <remarks/>
        public void GetNameAsync(string empCode, string connType, object userState) {
            if ((this.GetNameOperationCompleted == null)) {
                this.GetNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNameOperationCompleted);
            }
            this.InvokeAsync("GetName", new object[] {
                        empCode,
                        connType}, this.GetNameOperationCompleted, userState);
        }
        
        private void OnGetNameOperationCompleted(object arg) {
            if ((this.GetNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNameCompleted(this, new GetNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPresBy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPresBy(string empCode, string connType) {
            object[] results = this.Invoke("GetPresBy", new object[] {
                        empCode,
                        connType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPresByAsync(string empCode, string connType) {
            this.GetPresByAsync(empCode, connType, null);
        }
        
        /// <remarks/>
        public void GetPresByAsync(string empCode, string connType, object userState) {
            if ((this.GetPresByOperationCompleted == null)) {
                this.GetPresByOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPresByOperationCompleted);
            }
            this.InvokeAsync("GetPresBy", new object[] {
                        empCode,
                        connType}, this.GetPresByOperationCompleted, userState);
        }
        
        private void OnGetPresByOperationCompleted(object arg) {
            if ((this.GetPresByCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPresByCompleted(this, new GetPresByCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RadioReferral_By_CaseNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_RadioReferral_By_CaseNo(string case_no, string dbName, ref string Err) {
            object[] results = this.Invoke("Get_RadioReferral_By_CaseNo", new object[] {
                        case_no,
                        dbName,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RadioReferral_By_CaseNoAsync(string case_no, string dbName, string Err) {
            this.Get_RadioReferral_By_CaseNoAsync(case_no, dbName, Err, null);
        }
        
        /// <remarks/>
        public void Get_RadioReferral_By_CaseNoAsync(string case_no, string dbName, string Err, object userState) {
            if ((this.Get_RadioReferral_By_CaseNoOperationCompleted == null)) {
                this.Get_RadioReferral_By_CaseNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RadioReferral_By_CaseNoOperationCompleted);
            }
            this.InvokeAsync("Get_RadioReferral_By_CaseNo", new object[] {
                        case_no,
                        dbName,
                        Err}, this.Get_RadioReferral_By_CaseNoOperationCompleted, userState);
        }
        
        private void OnGet_RadioReferral_By_CaseNoOperationCompleted(object arg) {
            if ((this.Get_RadioReferral_By_CaseNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RadioReferral_By_CaseNoCompleted(this, new Get_RadioReferral_By_CaseNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RadioReferral_By_CaseNo_ACT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_RadioReferral_By_CaseNo_ACT(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_RadioReferral_By_CaseNo_ACT", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RadioReferral_By_CaseNo_ACTAsync(string case_no, string Err) {
            this.Get_RadioReferral_By_CaseNo_ACTAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_RadioReferral_By_CaseNo_ACTAsync(string case_no, string Err, object userState) {
            if ((this.Get_RadioReferral_By_CaseNo_ACTOperationCompleted == null)) {
                this.Get_RadioReferral_By_CaseNo_ACTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RadioReferral_By_CaseNo_ACTOperationCompleted);
            }
            this.InvokeAsync("Get_RadioReferral_By_CaseNo_ACT", new object[] {
                        case_no,
                        Err}, this.Get_RadioReferral_By_CaseNo_ACTOperationCompleted, userState);
        }
        
        private void OnGet_RadioReferral_By_CaseNo_ACTOperationCompleted(object arg) {
            if ((this.Get_RadioReferral_By_CaseNo_ACTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RadioReferral_By_CaseNo_ACTCompleted(this, new Get_RadioReferral_By_CaseNo_ACTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistinctJCNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDistinctJCNo(string case_no) {
            object[] results = this.Invoke("GetDistinctJCNo", new object[] {
                        case_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistinctJCNoAsync(string case_no) {
            this.GetDistinctJCNoAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetDistinctJCNoAsync(string case_no, object userState) {
            if ((this.GetDistinctJCNoOperationCompleted == null)) {
                this.GetDistinctJCNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistinctJCNoOperationCompleted);
            }
            this.InvokeAsync("GetDistinctJCNo", new object[] {
                        case_no}, this.GetDistinctJCNoOperationCompleted, userState);
        }
        
        private void OnGetDistinctJCNoOperationCompleted(object arg) {
            if ((this.GetDistinctJCNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistinctJCNoCompleted(this, new GetDistinctJCNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChemoReferral", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetChemoReferral(string caseNo) {
            object[] results = this.Invoke("GetChemoReferral", new object[] {
                        caseNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetChemoReferralAsync(string caseNo) {
            this.GetChemoReferralAsync(caseNo, null);
        }
        
        /// <remarks/>
        public void GetChemoReferralAsync(string caseNo, object userState) {
            if ((this.GetChemoReferralOperationCompleted == null)) {
                this.GetChemoReferralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChemoReferralOperationCompleted);
            }
            this.InvokeAsync("GetChemoReferral", new object[] {
                        caseNo}, this.GetChemoReferralOperationCompleted, userState);
        }
        
        private void OnGetChemoReferralOperationCompleted(object arg) {
            if ((this.GetChemoReferralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChemoReferralCompleted(this, new GetChemoReferralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChemoReferralact", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetChemoReferralact(string caseNo, string dbName) {
            object[] results = this.Invoke("GetChemoReferralact", new object[] {
                        caseNo,
                        dbName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetChemoReferralactAsync(string caseNo, string dbName) {
            this.GetChemoReferralactAsync(caseNo, dbName, null);
        }
        
        /// <remarks/>
        public void GetChemoReferralactAsync(string caseNo, string dbName, object userState) {
            if ((this.GetChemoReferralactOperationCompleted == null)) {
                this.GetChemoReferralactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChemoReferralactOperationCompleted);
            }
            this.InvokeAsync("GetChemoReferralact", new object[] {
                        caseNo,
                        dbName}, this.GetChemoReferralactOperationCompleted, userState);
        }
        
        private void OnGetChemoReferralactOperationCompleted(object arg) {
            if ((this.GetChemoReferralactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChemoReferralactCompleted(this, new GetChemoReferralactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOTProLat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOTProLat(string surgProcNo, string caseNo, string dbName) {
            object[] results = this.Invoke("GetOTProLat", new object[] {
                        surgProcNo,
                        caseNo,
                        dbName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOTProLatAsync(string surgProcNo, string caseNo, string dbName) {
            this.GetOTProLatAsync(surgProcNo, caseNo, dbName, null);
        }
        
        /// <remarks/>
        public void GetOTProLatAsync(string surgProcNo, string caseNo, string dbName, object userState) {
            if ((this.GetOTProLatOperationCompleted == null)) {
                this.GetOTProLatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOTProLatOperationCompleted);
            }
            this.InvokeAsync("GetOTProLat", new object[] {
                        surgProcNo,
                        caseNo,
                        dbName}, this.GetOTProLatOperationCompleted, userState);
        }
        
        private void OnGetOTProLatOperationCompleted(object arg) {
            if ((this.GetOTProLatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOTProLatCompleted(this, new GetOTProLatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAnesProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAnesProc(string surgProcNo, string dbName) {
            object[] results = this.Invoke("GetAnesProc", new object[] {
                        surgProcNo,
                        dbName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnesProcAsync(string surgProcNo, string dbName) {
            this.GetAnesProcAsync(surgProcNo, dbName, null);
        }
        
        /// <remarks/>
        public void GetAnesProcAsync(string surgProcNo, string dbName, object userState) {
            if ((this.GetAnesProcOperationCompleted == null)) {
                this.GetAnesProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnesProcOperationCompleted);
            }
            this.InvokeAsync("GetAnesProc", new object[] {
                        surgProcNo,
                        dbName}, this.GetAnesProcOperationCompleted, userState);
        }
        
        private void OnGetAnesProcOperationCompleted(object arg) {
            if ((this.GetAnesProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnesProcCompleted(this, new GetAnesProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOTInopFindings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOTInopFindings(string surgProcNo, string caseNo, string dbName) {
            object[] results = this.Invoke("GetOTInopFindings", new object[] {
                        surgProcNo,
                        caseNo,
                        dbName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOTInopFindingsAsync(string surgProcNo, string caseNo, string dbName) {
            this.GetOTInopFindingsAsync(surgProcNo, caseNo, dbName, null);
        }
        
        /// <remarks/>
        public void GetOTInopFindingsAsync(string surgProcNo, string caseNo, string dbName, object userState) {
            if ((this.GetOTInopFindingsOperationCompleted == null)) {
                this.GetOTInopFindingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOTInopFindingsOperationCompleted);
            }
            this.InvokeAsync("GetOTInopFindings", new object[] {
                        surgProcNo,
                        caseNo,
                        dbName}, this.GetOTInopFindingsOperationCompleted, userState);
        }
        
        private void OnGetOTInopFindingsOperationCompleted(object arg) {
            if ((this.GetOTInopFindingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOTInopFindingsCompleted(this, new GetOTInopFindingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOTReSurgeryDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOTReSurgeryDetails(string surgProcNo, string caseNo, string dbName) {
            object[] results = this.Invoke("GetOTReSurgeryDetails", new object[] {
                        surgProcNo,
                        caseNo,
                        dbName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOTReSurgeryDetailsAsync(string surgProcNo, string caseNo, string dbName) {
            this.GetOTReSurgeryDetailsAsync(surgProcNo, caseNo, dbName, null);
        }
        
        /// <remarks/>
        public void GetOTReSurgeryDetailsAsync(string surgProcNo, string caseNo, string dbName, object userState) {
            if ((this.GetOTReSurgeryDetailsOperationCompleted == null)) {
                this.GetOTReSurgeryDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOTReSurgeryDetailsOperationCompleted);
            }
            this.InvokeAsync("GetOTReSurgeryDetails", new object[] {
                        surgProcNo,
                        caseNo,
                        dbName}, this.GetOTReSurgeryDetailsOperationCompleted, userState);
        }
        
        private void OnGetOTReSurgeryDetailsOperationCompleted(object arg) {
            if ((this.GetOTReSurgeryDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOTReSurgeryDetailsCompleted(this, new GetOTReSurgeryDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOTSubSiterDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOTSubSiterDetails(string subSiteCode, string dbName) {
            object[] results = this.Invoke("GetOTSubSiterDetails", new object[] {
                        subSiteCode,
                        dbName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOTSubSiterDetailsAsync(string subSiteCode, string dbName) {
            this.GetOTSubSiterDetailsAsync(subSiteCode, dbName, null);
        }
        
        /// <remarks/>
        public void GetOTSubSiterDetailsAsync(string subSiteCode, string dbName, object userState) {
            if ((this.GetOTSubSiterDetailsOperationCompleted == null)) {
                this.GetOTSubSiterDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOTSubSiterDetailsOperationCompleted);
            }
            this.InvokeAsync("GetOTSubSiterDetails", new object[] {
                        subSiteCode,
                        dbName}, this.GetOTSubSiterDetailsOperationCompleted, userState);
        }
        
        private void OnGetOTSubSiterDetailsOperationCompleted(object arg) {
            if ((this.GetOTSubSiterDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOTSubSiterDetailsCompleted(this, new GetOTSubSiterDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOTReprocesDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOTReprocesDetails(string surg_no, string case_no, string dbName) {
            object[] results = this.Invoke("GetOTReprocesDetails", new object[] {
                        surg_no,
                        case_no,
                        dbName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOTReprocesDetailsAsync(string surg_no, string case_no, string dbName) {
            this.GetOTReprocesDetailsAsync(surg_no, case_no, dbName, null);
        }
        
        /// <remarks/>
        public void GetOTReprocesDetailsAsync(string surg_no, string case_no, string dbName, object userState) {
            if ((this.GetOTReprocesDetailsOperationCompleted == null)) {
                this.GetOTReprocesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOTReprocesDetailsOperationCompleted);
            }
            this.InvokeAsync("GetOTReprocesDetails", new object[] {
                        surg_no,
                        case_no,
                        dbName}, this.GetOTReprocesDetailsOperationCompleted, userState);
        }
        
        private void OnGetOTReprocesDetailsOperationCompleted(object arg) {
            if ((this.GetOTReprocesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOTReprocesDetailsCompleted(this, new GetOTReprocesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxCycleNoFromMTCYCLEDTL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMaxCycleNoFromMTCYCLEDTL(string case_no, string JCPlan_jcno, string CPPlan_CPNo) {
            object[] results = this.Invoke("GetMaxCycleNoFromMTCYCLEDTL", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxCycleNoFromMTCYCLEDTLAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo) {
            this.GetMaxCycleNoFromMTCYCLEDTLAsync(case_no, JCPlan_jcno, CPPlan_CPNo, null);
        }
        
        /// <remarks/>
        public void GetMaxCycleNoFromMTCYCLEDTLAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, object userState) {
            if ((this.GetMaxCycleNoFromMTCYCLEDTLOperationCompleted == null)) {
                this.GetMaxCycleNoFromMTCYCLEDTLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxCycleNoFromMTCYCLEDTLOperationCompleted);
            }
            this.InvokeAsync("GetMaxCycleNoFromMTCYCLEDTL", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo}, this.GetMaxCycleNoFromMTCYCLEDTLOperationCompleted, userState);
        }
        
        private void OnGetMaxCycleNoFromMTCYCLEDTLOperationCompleted(object arg) {
            if ((this.GetMaxCycleNoFromMTCYCLEDTLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxCycleNoFromMTCYCLEDTLCompleted(this, new GetMaxCycleNoFromMTCYCLEDTLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMTDistDetDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMTDistDetDetails(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string DistDrug_drugname, double mtcycdrugs_totaldose) {
            object[] results = this.Invoke("GetMTDistDetDetails", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo,
                        DistDrug_drugname,
                        mtcycdrugs_totaldose});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMTDistDetDetailsAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string DistDrug_drugname, double mtcycdrugs_totaldose) {
            this.GetMTDistDetDetailsAsync(case_no, JCPlan_jcno, CPPlan_CPNo, DistDrug_drugname, mtcycdrugs_totaldose, null);
        }
        
        /// <remarks/>
        public void GetMTDistDetDetailsAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string DistDrug_drugname, double mtcycdrugs_totaldose, object userState) {
            if ((this.GetMTDistDetDetailsOperationCompleted == null)) {
                this.GetMTDistDetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMTDistDetDetailsOperationCompleted);
            }
            this.InvokeAsync("GetMTDistDetDetails", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo,
                        DistDrug_drugname,
                        mtcycdrugs_totaldose}, this.GetMTDistDetDetailsOperationCompleted, userState);
        }
        
        private void OnGetMTDistDetDetailsOperationCompleted(object arg) {
            if ((this.GetMTDistDetDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMTDistDetDetailsCompleted(this, new GetMTDistDetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCycleDrugDayDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCycleDrugDayDetails(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string drugname, double mtcycdrugs_totaldose, int cycleNo) {
            object[] results = this.Invoke("GetCycleDrugDayDetails", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo,
                        drugname,
                        mtcycdrugs_totaldose,
                        cycleNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCycleDrugDayDetailsAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string drugname, double mtcycdrugs_totaldose, int cycleNo) {
            this.GetCycleDrugDayDetailsAsync(case_no, JCPlan_jcno, CPPlan_CPNo, drugname, mtcycdrugs_totaldose, cycleNo, null);
        }
        
        /// <remarks/>
        public void GetCycleDrugDayDetailsAsync(string case_no, string JCPlan_jcno, string CPPlan_CPNo, string drugname, double mtcycdrugs_totaldose, int cycleNo, object userState) {
            if ((this.GetCycleDrugDayDetailsOperationCompleted == null)) {
                this.GetCycleDrugDayDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCycleDrugDayDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCycleDrugDayDetails", new object[] {
                        case_no,
                        JCPlan_jcno,
                        CPPlan_CPNo,
                        drugname,
                        mtcycdrugs_totaldose,
                        cycleNo}, this.GetCycleDrugDayDetailsOperationCompleted, userState);
        }
        
        private void OnGetCycleDrugDayDetailsOperationCompleted(object arg) {
            if ((this.GetCycleDrugDayDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCycleDrugDayDetailsCompleted(this, new GetCycleDrugDayDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/executespquery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string executespquery(string p_SQL, string p_Reserved, string db_type) {
            object[] results = this.Invoke("executespquery", new object[] {
                        p_SQL,
                        p_Reserved,
                        db_type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void executespqueryAsync(string p_SQL, string p_Reserved, string db_type) {
            this.executespqueryAsync(p_SQL, p_Reserved, db_type, null);
        }
        
        /// <remarks/>
        public void executespqueryAsync(string p_SQL, string p_Reserved, string db_type, object userState) {
            if ((this.executespqueryOperationCompleted == null)) {
                this.executespqueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecutespqueryOperationCompleted);
            }
            this.InvokeAsync("executespquery", new object[] {
                        p_SQL,
                        p_Reserved,
                        db_type}, this.executespqueryOperationCompleted, userState);
        }
        
        private void OnexecutespqueryOperationCompleted(object arg) {
            if ((this.executespqueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executespqueryCompleted(this, new executespqueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserLoginDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserLoginDetails(string username) {
            object[] results = this.Invoke("GetUserLoginDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLoginDetailsAsync(string username) {
            this.GetUserLoginDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetUserLoginDetailsAsync(string username, object userState) {
            if ((this.GetUserLoginDetailsOperationCompleted == null)) {
                this.GetUserLoginDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLoginDetailsOperationCompleted);
            }
            this.InvokeAsync("GetUserLoginDetails", new object[] {
                        username}, this.GetUserLoginDetailsOperationCompleted, userState);
        }
        
        private void OnGetUserLoginDetailsOperationCompleted(object arg) {
            if ((this.GetUserLoginDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLoginDetailsCompleted(this, new GetUserLoginDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserLoginDetails1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserLoginDetails1(string username) {
            object[] results = this.Invoke("GetUserLoginDetails1", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLoginDetails1Async(string username) {
            this.GetUserLoginDetails1Async(username, null);
        }
        
        /// <remarks/>
        public void GetUserLoginDetails1Async(string username, object userState) {
            if ((this.GetUserLoginDetails1OperationCompleted == null)) {
                this.GetUserLoginDetails1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLoginDetails1OperationCompleted);
            }
            this.InvokeAsync("GetUserLoginDetails1", new object[] {
                        username}, this.GetUserLoginDetails1OperationCompleted, userState);
        }
        
        private void OnGetUserLoginDetails1OperationCompleted(object arg) {
            if ((this.GetUserLoginDetails1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLoginDetails1Completed(this, new GetUserLoginDetails1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUserPassword(string newPassword, string userId) {
            object[] results = this.Invoke("UpdateUserPassword", new object[] {
                        newPassword,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAsync(string newPassword, string userId) {
            this.UpdateUserPasswordAsync(newPassword, userId, null);
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAsync(string newPassword, string userId, object userState) {
            if ((this.UpdateUserPasswordOperationCompleted == null)) {
                this.UpdateUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateUserPassword", new object[] {
                        newPassword,
                        userId}, this.UpdateUserPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateUserPasswordOperationCompleted(object arg) {
            if ((this.UpdateUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserPasswordCompleted(this, new UpdateUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRequisitionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRequisitionDetails(string case_no) {
            object[] results = this.Invoke("GetRequisitionDetails", new object[] {
                        case_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequisitionDetailsAsync(string case_no) {
            this.GetRequisitionDetailsAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetRequisitionDetailsAsync(string case_no, object userState) {
            if ((this.GetRequisitionDetailsOperationCompleted == null)) {
                this.GetRequisitionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequisitionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRequisitionDetails", new object[] {
                        case_no}, this.GetRequisitionDetailsOperationCompleted, userState);
        }
        
        private void OnGetRequisitionDetailsOperationCompleted(object arg) {
            if ((this.GetRequisitionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequisitionDetailsCompleted(this, new GetRequisitionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTJCINVRVWDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTJCINVRVWDetails(string case_no, string REQNNO) {
            object[] results = this.Invoke("GetCTJCINVRVWDetails", new object[] {
                        case_no,
                        REQNNO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTJCINVRVWDetailsAsync(string case_no, string REQNNO) {
            this.GetCTJCINVRVWDetailsAsync(case_no, REQNNO, null);
        }
        
        /// <remarks/>
        public void GetCTJCINVRVWDetailsAsync(string case_no, string REQNNO, object userState) {
            if ((this.GetCTJCINVRVWDetailsOperationCompleted == null)) {
                this.GetCTJCINVRVWDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTJCINVRVWDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCTJCINVRVWDetails", new object[] {
                        case_no,
                        REQNNO}, this.GetCTJCINVRVWDetailsOperationCompleted, userState);
        }
        
        private void OnGetCTJCINVRVWDetailsOperationCompleted(object arg) {
            if ((this.GetCTJCINVRVWDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTJCINVRVWDetailsCompleted(this, new GetCTJCINVRVWDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRREQUISITNDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRREQUISITNDetails(string case_no) {
            object[] results = this.Invoke("GetRREQUISITNDetails", new object[] {
                        case_no});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRREQUISITNDetailsAsync(string case_no) {
            this.GetRREQUISITNDetailsAsync(case_no, null);
        }
        
        /// <remarks/>
        public void GetRREQUISITNDetailsAsync(string case_no, object userState) {
            if ((this.GetRREQUISITNDetailsOperationCompleted == null)) {
                this.GetRREQUISITNDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRREQUISITNDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRREQUISITNDetails", new object[] {
                        case_no}, this.GetRREQUISITNDetailsOperationCompleted, userState);
        }
        
        private void OnGetRREQUISITNDetailsOperationCompleted(object arg) {
            if ((this.GetRREQUISITNDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRREQUISITNDetailsCompleted(this, new GetRREQUISITNDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHistoricalExams", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHistoricalExams(string caseNo) {
            object[] results = this.Invoke("GetHistoricalExams", new object[] {
                        caseNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoricalExamsAsync(string caseNo) {
            this.GetHistoricalExamsAsync(caseNo, null);
        }
        
        /// <remarks/>
        public void GetHistoricalExamsAsync(string caseNo, object userState) {
            if ((this.GetHistoricalExamsOperationCompleted == null)) {
                this.GetHistoricalExamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoricalExamsOperationCompleted);
            }
            this.InvokeAsync("GetHistoricalExams", new object[] {
                        caseNo}, this.GetHistoricalExamsOperationCompleted, userState);
        }
        
        private void OnGetHistoricalExamsOperationCompleted(object arg) {
            if ((this.GetHistoricalExamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoricalExamsCompleted(this, new GetHistoricalExamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTHSTEXDTLByExamNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTHSTEXDTLByExamNo(string CASENO, string HSTEXM_NO) {
            object[] results = this.Invoke("GetCTHSTEXDTLByExamNo", new object[] {
                        CASENO,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTHSTEXDTLByExamNoAsync(string CASENO, string HSTEXM_NO) {
            this.GetCTHSTEXDTLByExamNoAsync(CASENO, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetCTHSTEXDTLByExamNoAsync(string CASENO, string HSTEXM_NO, object userState) {
            if ((this.GetCTHSTEXDTLByExamNoOperationCompleted == null)) {
                this.GetCTHSTEXDTLByExamNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTHSTEXDTLByExamNoOperationCompleted);
            }
            this.InvokeAsync("GetCTHSTEXDTLByExamNo", new object[] {
                        CASENO,
                        HSTEXM_NO}, this.GetCTHSTEXDTLByExamNoOperationCompleted, userState);
        }
        
        private void OnGetCTHSTEXDTLByExamNoOperationCompleted(object arg) {
            if ((this.GetCTHSTEXDTLByExamNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTHSTEXDTLByExamNoCompleted(this, new GetCTHSTEXDTLByExamNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHistExamDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHistExamDetails(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetHistExamDetails", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistExamDetailsAsync(string Case_No, string HSTEXM_NO) {
            this.GetHistExamDetailsAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetHistExamDetailsAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetHistExamDetailsOperationCompleted == null)) {
                this.GetHistExamDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistExamDetailsOperationCompleted);
            }
            this.InvokeAsync("GetHistExamDetails", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetHistExamDetailsOperationCompleted, userState);
        }
        
        private void OnGetHistExamDetailsOperationCompleted(object arg) {
            if ((this.GetHistExamDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistExamDetailsCompleted(this, new GetHistExamDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTCANCHIST", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTCANCHIST(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetCTCANCHIST", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTCANCHISTAsync(string Case_No, string HSTEXM_NO) {
            this.GetCTCANCHISTAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetCTCANCHISTAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetCTCANCHISTOperationCompleted == null)) {
                this.GetCTCANCHISTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTCANCHISTOperationCompleted);
            }
            this.InvokeAsync("GetCTCANCHIST", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetCTCANCHISTOperationCompleted, userState);
        }
        
        private void OnGetCTCANCHISTOperationCompleted(object arg) {
            if ((this.GetCTCANCHISTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTCANCHISTCompleted(this, new GetCTCANCHISTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCMSERVICES", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCMSERVICES(string SERVICEID) {
            object[] results = this.Invoke("GetCMSERVICES", new object[] {
                        SERVICEID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCMSERVICESAsync(string SERVICEID) {
            this.GetCMSERVICESAsync(SERVICEID, null);
        }
        
        /// <remarks/>
        public void GetCMSERVICESAsync(string SERVICEID, object userState) {
            if ((this.GetCMSERVICESOperationCompleted == null)) {
                this.GetCMSERVICESOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCMSERVICESOperationCompleted);
            }
            this.InvokeAsync("GetCMSERVICES", new object[] {
                        SERVICEID}, this.GetCMSERVICESOperationCompleted, userState);
        }
        
        private void OnGetCMSERVICESOperationCompleted(object arg) {
            if ((this.GetCMSERVICESCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCMSERVICESCompleted(this, new GetCMSERVICESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEMPDTLSLF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEMPDTLSLF(string Case_No) {
            object[] results = this.Invoke("GetEMPDTLSLF", new object[] {
                        Case_No});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMPDTLSLFAsync(string Case_No) {
            this.GetEMPDTLSLFAsync(Case_No, null);
        }
        
        /// <remarks/>
        public void GetEMPDTLSLFAsync(string Case_No, object userState) {
            if ((this.GetEMPDTLSLFOperationCompleted == null)) {
                this.GetEMPDTLSLFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMPDTLSLFOperationCompleted);
            }
            this.InvokeAsync("GetEMPDTLSLF", new object[] {
                        Case_No}, this.GetEMPDTLSLFOperationCompleted, userState);
        }
        
        private void OnGetEMPDTLSLFOperationCompleted(object arg) {
            if ((this.GetEMPDTLSLFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMPDTLSLFCompleted(this, new GetEMPDTLSLFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTMHSTCMPL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTMHSTCMPL(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetCTMHSTCMPL", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTMHSTCMPLAsync(string Case_No, string HSTEXM_NO) {
            this.GetCTMHSTCMPLAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetCTMHSTCMPLAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetCTMHSTCMPLOperationCompleted == null)) {
                this.GetCTMHSTCMPLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTMHSTCMPLOperationCompleted);
            }
            this.InvokeAsync("GetCTMHSTCMPL", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetCTMHSTCMPLOperationCompleted, userState);
        }
        
        private void OnGetCTMHSTCMPLOperationCompleted(object arg) {
            if ((this.GetCTMHSTCMPLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTMHSTCMPLCompleted(this, new GetCTMHSTCMPLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTMHSTCBSD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTMHSTCBSD(string Case_No, string HSTEXM_NO, string SYMPT_NO) {
            object[] results = this.Invoke("GetCTMHSTCBSD", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        SYMPT_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTMHSTCBSDAsync(string Case_No, string HSTEXM_NO, string SYMPT_NO) {
            this.GetCTMHSTCBSDAsync(Case_No, HSTEXM_NO, SYMPT_NO, null);
        }
        
        /// <remarks/>
        public void GetCTMHSTCBSDAsync(string Case_No, string HSTEXM_NO, string SYMPT_NO, object userState) {
            if ((this.GetCTMHSTCBSDOperationCompleted == null)) {
                this.GetCTMHSTCBSDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTMHSTCBSDOperationCompleted);
            }
            this.InvokeAsync("GetCTMHSTCBSD", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        SYMPT_NO}, this.GetCTMHSTCBSDOperationCompleted, userState);
        }
        
        private void OnGetCTMHSTCBSDOperationCompleted(object arg) {
            if ((this.GetCTMHSTCBSDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTMHSTCBSDCompleted(this, new GetCTMHSTCBSDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTMHSTCBSF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTMHSTCBSF(string Case_No, string HSTEXM_NO, string SYMPT_NO) {
            object[] results = this.Invoke("GetCTMHSTCBSF", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        SYMPT_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTMHSTCBSFAsync(string Case_No, string HSTEXM_NO, string SYMPT_NO) {
            this.GetCTMHSTCBSFAsync(Case_No, HSTEXM_NO, SYMPT_NO, null);
        }
        
        /// <remarks/>
        public void GetCTMHSTCBSFAsync(string Case_No, string HSTEXM_NO, string SYMPT_NO, object userState) {
            if ((this.GetCTMHSTCBSFOperationCompleted == null)) {
                this.GetCTMHSTCBSFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTMHSTCBSFOperationCompleted);
            }
            this.InvokeAsync("GetCTMHSTCBSF", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        SYMPT_NO}, this.GetCTMHSTCBSFOperationCompleted, userState);
        }
        
        private void OnGetCTMHSTCBSFOperationCompleted(object arg) {
            if ((this.GetCTMHSTCBSFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTMHSTCBSFCompleted(this, new GetCTMHSTCBSFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTMHSTCBSO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTMHSTCBSO(string Case_No, string HSTEXM_NO, string SYMPT_NO) {
            object[] results = this.Invoke("GetCTMHSTCBSO", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        SYMPT_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTMHSTCBSOAsync(string Case_No, string HSTEXM_NO, string SYMPT_NO) {
            this.GetCTMHSTCBSOAsync(Case_No, HSTEXM_NO, SYMPT_NO, null);
        }
        
        /// <remarks/>
        public void GetCTMHSTCBSOAsync(string Case_No, string HSTEXM_NO, string SYMPT_NO, object userState) {
            if ((this.GetCTMHSTCBSOOperationCompleted == null)) {
                this.GetCTMHSTCBSOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTMHSTCBSOOperationCompleted);
            }
            this.InvokeAsync("GetCTMHSTCBSO", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        SYMPT_NO}, this.GetCTMHSTCBSOOperationCompleted, userState);
        }
        
        private void OnGetCTMHSTCBSOOperationCompleted(object arg) {
            if ((this.GetCTMHSTCBSOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTMHSTCBSOCompleted(this, new GetCTMHSTCBSOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTMHSTCBSP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTMHSTCBSP(string Case_No, string HSTEXM_NO, string SYMPT_NO) {
            object[] results = this.Invoke("GetCTMHSTCBSP", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        SYMPT_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTMHSTCBSPAsync(string Case_No, string HSTEXM_NO, string SYMPT_NO) {
            this.GetCTMHSTCBSPAsync(Case_No, HSTEXM_NO, SYMPT_NO, null);
        }
        
        /// <remarks/>
        public void GetCTMHSTCBSPAsync(string Case_No, string HSTEXM_NO, string SYMPT_NO, object userState) {
            if ((this.GetCTMHSTCBSPOperationCompleted == null)) {
                this.GetCTMHSTCBSPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTMHSTCBSPOperationCompleted);
            }
            this.InvokeAsync("GetCTMHSTCBSP", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        SYMPT_NO}, this.GetCTMHSTCBSPOperationCompleted, userState);
        }
        
        private void OnGetCTMHSTCBSPOperationCompleted(object arg) {
            if ((this.GetCTMHSTCBSPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTMHSTCBSPCompleted(this, new GetCTMHSTCBSPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTMHSTCBSS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTMHSTCBSS(string Case_No, string HSTEXM_NO, string SYMPT_NO) {
            object[] results = this.Invoke("GetCTMHSTCBSS", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        SYMPT_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTMHSTCBSSAsync(string Case_No, string HSTEXM_NO, string SYMPT_NO) {
            this.GetCTMHSTCBSSAsync(Case_No, HSTEXM_NO, SYMPT_NO, null);
        }
        
        /// <remarks/>
        public void GetCTMHSTCBSSAsync(string Case_No, string HSTEXM_NO, string SYMPT_NO, object userState) {
            if ((this.GetCTMHSTCBSSOperationCompleted == null)) {
                this.GetCTMHSTCBSSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTMHSTCBSSOperationCompleted);
            }
            this.InvokeAsync("GetCTMHSTCBSS", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        SYMPT_NO}, this.GetCTMHSTCBSSOperationCompleted, userState);
        }
        
        private void OnGetCTMHSTCBSSOperationCompleted(object arg) {
            if ((this.GetCTMHSTCBSSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTMHSTCBSSCompleted(this, new GetCTMHSTCBSSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDiagnosisDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDiagnosisDetails(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetDiagnosisDetails", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiagnosisDetailsAsync(string Case_No, string HSTEXM_NO) {
            this.GetDiagnosisDetailsAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetDiagnosisDetailsAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetDiagnosisDetailsOperationCompleted == null)) {
                this.GetDiagnosisDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiagnosisDetailsOperationCompleted);
            }
            this.InvokeAsync("GetDiagnosisDetails", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetDiagnosisDetailsOperationCompleted, userState);
        }
        
        private void OnGetDiagnosisDetailsOperationCompleted(object arg) {
            if ((this.GetDiagnosisDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiagnosisDetailsCompleted(this, new GetDiagnosisDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDigStsValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDigStsValue(string DM) {
            object[] results = this.Invoke("GetDigStsValue", new object[] {
                        DM});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDigStsValueAsync(string DM) {
            this.GetDigStsValueAsync(DM, null);
        }
        
        /// <remarks/>
        public void GetDigStsValueAsync(string DM, object userState) {
            if ((this.GetDigStsValueOperationCompleted == null)) {
                this.GetDigStsValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDigStsValueOperationCompleted);
            }
            this.InvokeAsync("GetDigStsValue", new object[] {
                        DM}, this.GetDigStsValueOperationCompleted, userState);
        }
        
        private void OnGetDigStsValueOperationCompleted(object arg) {
            if ((this.GetDigStsValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDigStsValueCompleted(this, new GetDigStsValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDiagnosisDetails1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDiagnosisDetails1(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetDiagnosisDetails1", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiagnosisDetails1Async(string Case_No, string HSTEXM_NO) {
            this.GetDiagnosisDetails1Async(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetDiagnosisDetails1Async(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetDiagnosisDetails1OperationCompleted == null)) {
                this.GetDiagnosisDetails1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiagnosisDetails1OperationCompleted);
            }
            this.InvokeAsync("GetDiagnosisDetails1", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetDiagnosisDetails1OperationCompleted, userState);
        }
        
        private void OnGetDiagnosisDetails1OperationCompleted(object arg) {
            if ((this.GetDiagnosisDetails1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiagnosisDetails1Completed(this, new GetDiagnosisDetails1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDiagnosisStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDiagnosisStatus(string DM) {
            object[] results = this.Invoke("GetDiagnosisStatus", new object[] {
                        DM});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiagnosisStatusAsync(string DM) {
            this.GetDiagnosisStatusAsync(DM, null);
        }
        
        /// <remarks/>
        public void GetDiagnosisStatusAsync(string DM, object userState) {
            if ((this.GetDiagnosisStatusOperationCompleted == null)) {
                this.GetDiagnosisStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiagnosisStatusOperationCompleted);
            }
            this.InvokeAsync("GetDiagnosisStatus", new object[] {
                        DM}, this.GetDiagnosisStatusOperationCompleted, userState);
        }
        
        private void OnGetDiagnosisStatusOperationCompleted(object arg) {
            if ((this.GetDiagnosisStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiagnosisStatusCompleted(this, new GetDiagnosisStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInterventionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetInterventionDetails(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetInterventionDetails", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetInterventionDetailsAsync(string Case_No, string HSTEXM_NO) {
            this.GetInterventionDetailsAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetInterventionDetailsAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetInterventionDetailsOperationCompleted == null)) {
                this.GetInterventionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInterventionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetInterventionDetails", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetInterventionDetailsOperationCompleted, userState);
        }
        
        private void OnGetInterventionDetailsOperationCompleted(object arg) {
            if ((this.GetInterventionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInterventionDetailsCompleted(this, new GetInterventionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSurgeryDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSurgeryDetails(string Case_No, string HSTEXM_NO, string INX_NO) {
            object[] results = this.Invoke("GetSurgeryDetails", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        INX_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSurgeryDetailsAsync(string Case_No, string HSTEXM_NO, string INX_NO) {
            this.GetSurgeryDetailsAsync(Case_No, HSTEXM_NO, INX_NO, null);
        }
        
        /// <remarks/>
        public void GetSurgeryDetailsAsync(string Case_No, string HSTEXM_NO, string INX_NO, object userState) {
            if ((this.GetSurgeryDetailsOperationCompleted == null)) {
                this.GetSurgeryDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSurgeryDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSurgeryDetails", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        INX_NO}, this.GetSurgeryDetailsOperationCompleted, userState);
        }
        
        private void OnGetSurgeryDetailsOperationCompleted(object arg) {
            if ((this.GetSurgeryDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSurgeryDetailsCompleted(this, new GetSurgeryDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExternalRTDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetExternalRTDetails(string Case_No, string HSTEXM_NO, string INX_NO) {
            object[] results = this.Invoke("GetExternalRTDetails", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        INX_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalRTDetailsAsync(string Case_No, string HSTEXM_NO, string INX_NO) {
            this.GetExternalRTDetailsAsync(Case_No, HSTEXM_NO, INX_NO, null);
        }
        
        /// <remarks/>
        public void GetExternalRTDetailsAsync(string Case_No, string HSTEXM_NO, string INX_NO, object userState) {
            if ((this.GetExternalRTDetailsOperationCompleted == null)) {
                this.GetExternalRTDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalRTDetailsOperationCompleted);
            }
            this.InvokeAsync("GetExternalRTDetails", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        INX_NO}, this.GetExternalRTDetailsOperationCompleted, userState);
        }
        
        private void OnGetExternalRTDetailsOperationCompleted(object arg) {
            if ((this.GetExternalRTDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalRTDetailsCompleted(this, new GetExternalRTDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBrachytherapyDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBrachytherapyDetails(string Case_No, string HSTEXM_NO, string INX_NO) {
            object[] results = this.Invoke("GetBrachytherapyDetails", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        INX_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBrachytherapyDetailsAsync(string Case_No, string HSTEXM_NO, string INX_NO) {
            this.GetBrachytherapyDetailsAsync(Case_No, HSTEXM_NO, INX_NO, null);
        }
        
        /// <remarks/>
        public void GetBrachytherapyDetailsAsync(string Case_No, string HSTEXM_NO, string INX_NO, object userState) {
            if ((this.GetBrachytherapyDetailsOperationCompleted == null)) {
                this.GetBrachytherapyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBrachytherapyDetailsOperationCompleted);
            }
            this.InvokeAsync("GetBrachytherapyDetails", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        INX_NO}, this.GetBrachytherapyDetailsOperationCompleted, userState);
        }
        
        private void OnGetBrachytherapyDetailsOperationCompleted(object arg) {
            if ((this.GetBrachytherapyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBrachytherapyDetailsCompleted(this, new GetBrachytherapyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChemotherapyDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetChemotherapyDetails(string Case_No, string HSTEXM_NO, string INX_NO) {
            object[] results = this.Invoke("GetChemotherapyDetails", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        INX_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetChemotherapyDetailsAsync(string Case_No, string HSTEXM_NO, string INX_NO) {
            this.GetChemotherapyDetailsAsync(Case_No, HSTEXM_NO, INX_NO, null);
        }
        
        /// <remarks/>
        public void GetChemotherapyDetailsAsync(string Case_No, string HSTEXM_NO, string INX_NO, object userState) {
            if ((this.GetChemotherapyDetailsOperationCompleted == null)) {
                this.GetChemotherapyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChemotherapyDetailsOperationCompleted);
            }
            this.InvokeAsync("GetChemotherapyDetails", new object[] {
                        Case_No,
                        HSTEXM_NO,
                        INX_NO}, this.GetChemotherapyDetailsOperationCompleted, userState);
        }
        
        private void OnGetChemotherapyDetailsOperationCompleted(object arg) {
            if ((this.GetChemotherapyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChemotherapyDetailsCompleted(this, new GetChemotherapyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrugName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDrugName(string ITEMCODE) {
            object[] results = this.Invoke("GetDrugName", new object[] {
                        ITEMCODE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrugNameAsync(string ITEMCODE) {
            this.GetDrugNameAsync(ITEMCODE, null);
        }
        
        /// <remarks/>
        public void GetDrugNameAsync(string ITEMCODE, object userState) {
            if ((this.GetDrugNameOperationCompleted == null)) {
                this.GetDrugNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrugNameOperationCompleted);
            }
            this.InvokeAsync("GetDrugName", new object[] {
                        ITEMCODE}, this.GetDrugNameOperationCompleted, userState);
        }
        
        private void OnGetDrugNameOperationCompleted(object arg) {
            if ((this.GetDrugNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrugNameCompleted(this, new GetDrugNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrugName1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDrugName1(string ITEMCODE, int index) {
            object[] results = this.Invoke("GetDrugName1", new object[] {
                        ITEMCODE,
                        index});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrugName1Async(string ITEMCODE, int index) {
            this.GetDrugName1Async(ITEMCODE, index, null);
        }
        
        /// <remarks/>
        public void GetDrugName1Async(string ITEMCODE, int index, object userState) {
            if ((this.GetDrugName1OperationCompleted == null)) {
                this.GetDrugName1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrugName1OperationCompleted);
            }
            this.InvokeAsync("GetDrugName1", new object[] {
                        ITEMCODE,
                        index}, this.GetDrugName1OperationCompleted, userState);
        }
        
        private void OnGetDrugName1OperationCompleted(object arg) {
            if ((this.GetDrugName1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrugName1Completed(this, new GetDrugName1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMedicalHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMedicalHistory(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetMedicalHistory", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMedicalHistoryAsync(string Case_No, string HSTEXM_NO) {
            this.GetMedicalHistoryAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetMedicalHistoryAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetMedicalHistoryOperationCompleted == null)) {
                this.GetMedicalHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedicalHistoryOperationCompleted);
            }
            this.InvokeAsync("GetMedicalHistory", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetMedicalHistoryOperationCompleted, userState);
        }
        
        private void OnGetMedicalHistoryOperationCompleted(object arg) {
            if ((this.GetMedicalHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedicalHistoryCompleted(this, new GetMedicalHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllergyDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllergyDetails(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetAllergyDetails", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllergyDetailsAsync(string Case_No, string HSTEXM_NO) {
            this.GetAllergyDetailsAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetAllergyDetailsAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetAllergyDetailsOperationCompleted == null)) {
                this.GetAllergyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllergyDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAllergyDetails", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetAllergyDetailsOperationCompleted, userState);
        }
        
        private void OnGetAllergyDetailsOperationCompleted(object arg) {
            if ((this.GetAllergyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllergyDetailsCompleted(this, new GetAllergyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMenstrualHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMenstrualHistory(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetMenstrualHistory", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenstrualHistoryAsync(string Case_No, string HSTEXM_NO) {
            this.GetMenstrualHistoryAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetMenstrualHistoryAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetMenstrualHistoryOperationCompleted == null)) {
                this.GetMenstrualHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenstrualHistoryOperationCompleted);
            }
            this.InvokeAsync("GetMenstrualHistory", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetMenstrualHistoryOperationCompleted, userState);
        }
        
        private void OnGetMenstrualHistoryOperationCompleted(object arg) {
            if ((this.GetMenstrualHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenstrualHistoryCompleted(this, new GetMenstrualHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetObstetricHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetObstetricHistory(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetObstetricHistory", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetObstetricHistoryAsync(string Case_No, string HSTEXM_NO) {
            this.GetObstetricHistoryAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetObstetricHistoryAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetObstetricHistoryOperationCompleted == null)) {
                this.GetObstetricHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObstetricHistoryOperationCompleted);
            }
            this.InvokeAsync("GetObstetricHistory", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetObstetricHistoryOperationCompleted, userState);
        }
        
        private void OnGetObstetricHistoryOperationCompleted(object arg) {
            if ((this.GetObstetricHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObstetricHistoryCompleted(this, new GetObstetricHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContraceptiveHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetContraceptiveHistory(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetContraceptiveHistory", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetContraceptiveHistoryAsync(string Case_No, string HSTEXM_NO) {
            this.GetContraceptiveHistoryAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetContraceptiveHistoryAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetContraceptiveHistoryOperationCompleted == null)) {
                this.GetContraceptiveHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContraceptiveHistoryOperationCompleted);
            }
            this.InvokeAsync("GetContraceptiveHistory", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetContraceptiveHistoryOperationCompleted, userState);
        }
        
        private void OnGetContraceptiveHistoryOperationCompleted(object arg) {
            if ((this.GetContraceptiveHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContraceptiveHistoryCompleted(this, new GetContraceptiveHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHormoneTherapyHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHormoneTherapyHistory(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetHormoneTherapyHistory", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHormoneTherapyHistoryAsync(string Case_No, string HSTEXM_NO) {
            this.GetHormoneTherapyHistoryAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetHormoneTherapyHistoryAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetHormoneTherapyHistoryOperationCompleted == null)) {
                this.GetHormoneTherapyHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHormoneTherapyHistoryOperationCompleted);
            }
            this.InvokeAsync("GetHormoneTherapyHistory", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetHormoneTherapyHistoryOperationCompleted, userState);
        }
        
        private void OnGetHormoneTherapyHistoryOperationCompleted(object arg) {
            if ((this.GetHormoneTherapyHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHormoneTherapyHistoryCompleted(this, new GetHormoneTherapyHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEnvOccupationalHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEnvOccupationalHistory(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetEnvOccupationalHistory", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnvOccupationalHistoryAsync(string Case_No, string HSTEXM_NO) {
            this.GetEnvOccupationalHistoryAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetEnvOccupationalHistoryAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetEnvOccupationalHistoryOperationCompleted == null)) {
                this.GetEnvOccupationalHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnvOccupationalHistoryOperationCompleted);
            }
            this.InvokeAsync("GetEnvOccupationalHistory", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetEnvOccupationalHistoryOperationCompleted, userState);
        }
        
        private void OnGetEnvOccupationalHistoryOperationCompleted(object arg) {
            if ((this.GetEnvOccupationalHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnvOccupationalHistoryCompleted(this, new GetEnvOccupationalHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFamilyHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFamilyHistory(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetFamilyHistory", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFamilyHistoryAsync(string Case_No, string HSTEXM_NO) {
            this.GetFamilyHistoryAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetFamilyHistoryAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetFamilyHistoryOperationCompleted == null)) {
                this.GetFamilyHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFamilyHistoryOperationCompleted);
            }
            this.InvokeAsync("GetFamilyHistory", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetFamilyHistoryOperationCompleted, userState);
        }
        
        private void OnGetFamilyHistoryOperationCompleted(object arg) {
            if ((this.GetFamilyHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFamilyHistoryCompleted(this, new GetFamilyHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLifeStyle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLifeStyle(string Case_No, string HSTEXM_NO) {
            object[] results = this.Invoke("GetLifeStyle", new object[] {
                        Case_No,
                        HSTEXM_NO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLifeStyleAsync(string Case_No, string HSTEXM_NO) {
            this.GetLifeStyleAsync(Case_No, HSTEXM_NO, null);
        }
        
        /// <remarks/>
        public void GetLifeStyleAsync(string Case_No, string HSTEXM_NO, object userState) {
            if ((this.GetLifeStyleOperationCompleted == null)) {
                this.GetLifeStyleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLifeStyleOperationCompleted);
            }
            this.InvokeAsync("GetLifeStyle", new object[] {
                        Case_No,
                        HSTEXM_NO}, this.GetLifeStyleOperationCompleted, userState);
        }
        
        private void OnGetLifeStyleOperationCompleted(object arg) {
            if ((this.GetLifeStyleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLifeStyleCompleted(this, new GetLifeStyleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCMServices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCMServices(string serviceId) {
            object[] results = this.Invoke("GetCMServices", new object[] {
                        serviceId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCMServicesAsync(string serviceId) {
            this.GetCMServicesAsync(serviceId, null);
        }
        
        /// <remarks/>
        public void GetCMServicesAsync(string serviceId, object userState) {
            if ((this.GetCMServicesOperationCompleted == null)) {
                this.GetCMServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCMServicesOperationCompleted);
            }
            this.InvokeAsync("GetCMServices", new object[] {
                        serviceId}, this.GetCMServicesOperationCompleted, userState);
        }
        
        private void OnGetCMServicesOperationCompleted(object arg) {
            if ((this.GetCMServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCMServicesCompleted(this, new GetCMServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHistExamDtTm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHistExamDtTm(string caseNo, string entryDate, string entryTime) {
            object[] results = this.Invoke("GetHistExamDtTm", new object[] {
                        caseNo,
                        entryDate,
                        entryTime});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistExamDtTmAsync(string caseNo, string entryDate, string entryTime) {
            this.GetHistExamDtTmAsync(caseNo, entryDate, entryTime, null);
        }
        
        /// <remarks/>
        public void GetHistExamDtTmAsync(string caseNo, string entryDate, string entryTime, object userState) {
            if ((this.GetHistExamDtTmOperationCompleted == null)) {
                this.GetHistExamDtTmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistExamDtTmOperationCompleted);
            }
            this.InvokeAsync("GetHistExamDtTm", new object[] {
                        caseNo,
                        entryDate,
                        entryTime}, this.GetHistExamDtTmOperationCompleted, userState);
        }
        
        private void OnGetHistExamDtTmOperationCompleted(object arg) {
            if ((this.GetHistExamDtTmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistExamDtTmCompleted(this, new GetHistExamDtTmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCISReferral", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCISReferral(string caseNo, string entryDate, string entryTime) {
            object[] results = this.Invoke("GetCISReferral", new object[] {
                        caseNo,
                        entryDate,
                        entryTime});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCISReferralAsync(string caseNo, string entryDate, string entryTime) {
            this.GetCISReferralAsync(caseNo, entryDate, entryTime, null);
        }
        
        /// <remarks/>
        public void GetCISReferralAsync(string caseNo, string entryDate, string entryTime, object userState) {
            if ((this.GetCISReferralOperationCompleted == null)) {
                this.GetCISReferralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCISReferralOperationCompleted);
            }
            this.InvokeAsync("GetCISReferral", new object[] {
                        caseNo,
                        entryDate,
                        entryTime}, this.GetCISReferralOperationCompleted, userState);
        }
        
        private void OnGetCISReferralOperationCompleted(object arg) {
            if ((this.GetCISReferralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCISReferralCompleted(this, new GetCISReferralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPalliativeDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPalliativeDetails(string caseNo, string jcNo) {
            object[] results = this.Invoke("GetPalliativeDetails", new object[] {
                        caseNo,
                        jcNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPalliativeDetailsAsync(string caseNo, string jcNo) {
            this.GetPalliativeDetailsAsync(caseNo, jcNo, null);
        }
        
        /// <remarks/>
        public void GetPalliativeDetailsAsync(string caseNo, string jcNo, object userState) {
            if ((this.GetPalliativeDetailsOperationCompleted == null)) {
                this.GetPalliativeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPalliativeDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPalliativeDetails", new object[] {
                        caseNo,
                        jcNo}, this.GetPalliativeDetailsOperationCompleted, userState);
        }
        
        private void OnGetPalliativeDetailsOperationCompleted(object arg) {
            if ((this.GetPalliativeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPalliativeDetailsCompleted(this, new GetPalliativeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPalliativeInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPalliativeInfo(string caseNo, string jcNo) {
            object[] results = this.Invoke("GetPalliativeInfo", new object[] {
                        caseNo,
                        jcNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPalliativeInfoAsync(string caseNo, string jcNo) {
            this.GetPalliativeInfoAsync(caseNo, jcNo, null);
        }
        
        /// <remarks/>
        public void GetPalliativeInfoAsync(string caseNo, string jcNo, object userState) {
            if ((this.GetPalliativeInfoOperationCompleted == null)) {
                this.GetPalliativeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPalliativeInfoOperationCompleted);
            }
            this.InvokeAsync("GetPalliativeInfo", new object[] {
                        caseNo,
                        jcNo}, this.GetPalliativeInfoOperationCompleted, userState);
        }
        
        private void OnGetPalliativeInfoOperationCompleted(object arg) {
            if ((this.GetPalliativeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPalliativeInfoCompleted(this, new GetPalliativeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRadicalDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRadicalDetail(string caseNo, string jcNo) {
            object[] results = this.Invoke("GetRadicalDetail", new object[] {
                        caseNo,
                        jcNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadicalDetailAsync(string caseNo, string jcNo) {
            this.GetRadicalDetailAsync(caseNo, jcNo, null);
        }
        
        /// <remarks/>
        public void GetRadicalDetailAsync(string caseNo, string jcNo, object userState) {
            if ((this.GetRadicalDetailOperationCompleted == null)) {
                this.GetRadicalDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadicalDetailOperationCompleted);
            }
            this.InvokeAsync("GetRadicalDetail", new object[] {
                        caseNo,
                        jcNo}, this.GetRadicalDetailOperationCompleted, userState);
        }
        
        private void OnGetRadicalDetailOperationCompleted(object arg) {
            if ((this.GetRadicalDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadicalDetailCompleted(this, new GetRadicalDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRadical", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRadical(string caseNo, string jcNo) {
            object[] results = this.Invoke("GetRadical", new object[] {
                        caseNo,
                        jcNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadicalAsync(string caseNo, string jcNo) {
            this.GetRadicalAsync(caseNo, jcNo, null);
        }
        
        /// <remarks/>
        public void GetRadicalAsync(string caseNo, string jcNo, object userState) {
            if ((this.GetRadicalOperationCompleted == null)) {
                this.GetRadicalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadicalOperationCompleted);
            }
            this.InvokeAsync("GetRadical", new object[] {
                        caseNo,
                        jcNo}, this.GetRadicalOperationCompleted, userState);
        }
        
        private void OnGetRadicalOperationCompleted(object arg) {
            if ((this.GetRadicalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadicalCompleted(this, new GetRadicalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDiagnosisDetails2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDiagnosisDetails2(string caseNo, string jcNo) {
            object[] results = this.Invoke("GetDiagnosisDetails2", new object[] {
                        caseNo,
                        jcNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiagnosisDetails2Async(string caseNo, string jcNo) {
            this.GetDiagnosisDetails2Async(caseNo, jcNo, null);
        }
        
        /// <remarks/>
        public void GetDiagnosisDetails2Async(string caseNo, string jcNo, object userState) {
            if ((this.GetDiagnosisDetails2OperationCompleted == null)) {
                this.GetDiagnosisDetails2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiagnosisDetails2OperationCompleted);
            }
            this.InvokeAsync("GetDiagnosisDetails2", new object[] {
                        caseNo,
                        jcNo}, this.GetDiagnosisDetails2OperationCompleted, userState);
        }
        
        private void OnGetDiagnosisDetails2OperationCompleted(object arg) {
            if ((this.GetDiagnosisDetails2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiagnosisDetails2Completed(this, new GetDiagnosisDetails2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInvestigationOutReview", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetInvestigationOutReview(string caseNo, string jcNo) {
            object[] results = this.Invoke("GetInvestigationOutReview", new object[] {
                        caseNo,
                        jcNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvestigationOutReviewAsync(string caseNo, string jcNo) {
            this.GetInvestigationOutReviewAsync(caseNo, jcNo, null);
        }
        
        /// <remarks/>
        public void GetInvestigationOutReviewAsync(string caseNo, string jcNo, object userState) {
            if ((this.GetInvestigationOutReviewOperationCompleted == null)) {
                this.GetInvestigationOutReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvestigationOutReviewOperationCompleted);
            }
            this.InvokeAsync("GetInvestigationOutReview", new object[] {
                        caseNo,
                        jcNo}, this.GetInvestigationOutReviewOperationCompleted, userState);
        }
        
        private void OnGetInvestigationOutReviewOperationCompleted(object arg) {
            if ((this.GetInvestigationOutReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvestigationOutReviewCompleted(this, new GetInvestigationOutReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInvestigationOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetInvestigationOut(string caseNo, string jcNo) {
            object[] results = this.Invoke("GetInvestigationOut", new object[] {
                        caseNo,
                        jcNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvestigationOutAsync(string caseNo, string jcNo) {
            this.GetInvestigationOutAsync(caseNo, jcNo, null);
        }
        
        /// <remarks/>
        public void GetInvestigationOutAsync(string caseNo, string jcNo, object userState) {
            if ((this.GetInvestigationOutOperationCompleted == null)) {
                this.GetInvestigationOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvestigationOutOperationCompleted);
            }
            this.InvokeAsync("GetInvestigationOut", new object[] {
                        caseNo,
                        jcNo}, this.GetInvestigationOutOperationCompleted, userState);
        }
        
        private void OnGetInvestigationOutOperationCompleted(object arg) {
            if ((this.GetInvestigationOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvestigationOutCompleted(this, new GetInvestigationOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTJCINVRVW", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTJCINVRVW(string caseNo, string jcNo, string reqNo) {
            object[] results = this.Invoke("GetCTJCINVRVW", new object[] {
                        caseNo,
                        jcNo,
                        reqNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTJCINVRVWAsync(string caseNo, string jcNo, string reqNo) {
            this.GetCTJCINVRVWAsync(caseNo, jcNo, reqNo, null);
        }
        
        /// <remarks/>
        public void GetCTJCINVRVWAsync(string caseNo, string jcNo, string reqNo, object userState) {
            if ((this.GetCTJCINVRVWOperationCompleted == null)) {
                this.GetCTJCINVRVWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTJCINVRVWOperationCompleted);
            }
            this.InvokeAsync("GetCTJCINVRVW", new object[] {
                        caseNo,
                        jcNo,
                        reqNo}, this.GetCTJCINVRVWOperationCompleted, userState);
        }
        
        private void OnGetCTJCINVRVWOperationCompleted(object arg) {
            if ((this.GetCTJCINVRVWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTJCINVRVWCompleted(this, new GetCTJCINVRVWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRREQUISITN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRREQUISITN(string caseNo) {
            object[] results = this.Invoke("GetRREQUISITN", new object[] {
                        caseNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRREQUISITNAsync(string caseNo) {
            this.GetRREQUISITNAsync(caseNo, null);
        }
        
        /// <remarks/>
        public void GetRREQUISITNAsync(string caseNo, object userState) {
            if ((this.GetRREQUISITNOperationCompleted == null)) {
                this.GetRREQUISITNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRREQUISITNOperationCompleted);
            }
            this.InvokeAsync("GetRREQUISITN", new object[] {
                        caseNo}, this.GetRREQUISITNOperationCompleted, userState);
        }
        
        private void OnGetRREQUISITNOperationCompleted(object arg) {
            if ((this.GetRREQUISITNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRREQUISITNCompleted(this, new GetRREQUISITNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPREVCANCER_HISTORY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPREVCANCER_HISTORY(string caseNo, string hstExamNo) {
            object[] results = this.Invoke("GetPREVCANCER_HISTORY", new object[] {
                        caseNo,
                        hstExamNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPREVCANCER_HISTORYAsync(string caseNo, string hstExamNo) {
            this.GetPREVCANCER_HISTORYAsync(caseNo, hstExamNo, null);
        }
        
        /// <remarks/>
        public void GetPREVCANCER_HISTORYAsync(string caseNo, string hstExamNo, object userState) {
            if ((this.GetPREVCANCER_HISTORYOperationCompleted == null)) {
                this.GetPREVCANCER_HISTORYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPREVCANCER_HISTORYOperationCompleted);
            }
            this.InvokeAsync("GetPREVCANCER_HISTORY", new object[] {
                        caseNo,
                        hstExamNo}, this.GetPREVCANCER_HISTORYOperationCompleted, userState);
        }
        
        private void OnGetPREVCANCER_HISTORYOperationCompleted(object arg) {
            if ((this.GetPREVCANCER_HISTORYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPREVCANCER_HISTORYCompleted(this, new GetPREVCANCER_HISTORYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSurgeryAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSurgeryAll(string caseNo, string hstExamNo, string prvNo) {
            object[] results = this.Invoke("GetSurgeryAll", new object[] {
                        caseNo,
                        hstExamNo,
                        prvNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSurgeryAllAsync(string caseNo, string hstExamNo, string prvNo) {
            this.GetSurgeryAllAsync(caseNo, hstExamNo, prvNo, null);
        }
        
        /// <remarks/>
        public void GetSurgeryAllAsync(string caseNo, string hstExamNo, string prvNo, object userState) {
            if ((this.GetSurgeryAllOperationCompleted == null)) {
                this.GetSurgeryAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSurgeryAllOperationCompleted);
            }
            this.InvokeAsync("GetSurgeryAll", new object[] {
                        caseNo,
                        hstExamNo,
                        prvNo}, this.GetSurgeryAllOperationCompleted, userState);
        }
        
        private void OnGetSurgeryAllOperationCompleted(object arg) {
            if ((this.GetSurgeryAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSurgeryAllCompleted(this, new GetSurgeryAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExternalRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetExternalRT(string caseNo, string hstExamNo, string prvNo) {
            object[] results = this.Invoke("GetExternalRT", new object[] {
                        caseNo,
                        hstExamNo,
                        prvNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalRTAsync(string caseNo, string hstExamNo, string prvNo) {
            this.GetExternalRTAsync(caseNo, hstExamNo, prvNo, null);
        }
        
        /// <remarks/>
        public void GetExternalRTAsync(string caseNo, string hstExamNo, string prvNo, object userState) {
            if ((this.GetExternalRTOperationCompleted == null)) {
                this.GetExternalRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalRTOperationCompleted);
            }
            this.InvokeAsync("GetExternalRT", new object[] {
                        caseNo,
                        hstExamNo,
                        prvNo}, this.GetExternalRTOperationCompleted, userState);
        }
        
        private void OnGetExternalRTOperationCompleted(object arg) {
            if ((this.GetExternalRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalRTCompleted(this, new GetExternalRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBrachytherapy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBrachytherapy(string caseNo, string hstExamNo, string prvNo) {
            object[] results = this.Invoke("GetBrachytherapy", new object[] {
                        caseNo,
                        hstExamNo,
                        prvNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBrachytherapyAsync(string caseNo, string hstExamNo, string prvNo) {
            this.GetBrachytherapyAsync(caseNo, hstExamNo, prvNo, null);
        }
        
        /// <remarks/>
        public void GetBrachytherapyAsync(string caseNo, string hstExamNo, string prvNo, object userState) {
            if ((this.GetBrachytherapyOperationCompleted == null)) {
                this.GetBrachytherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBrachytherapyOperationCompleted);
            }
            this.InvokeAsync("GetBrachytherapy", new object[] {
                        caseNo,
                        hstExamNo,
                        prvNo}, this.GetBrachytherapyOperationCompleted, userState);
        }
        
        private void OnGetBrachytherapyOperationCompleted(object arg) {
            if ((this.GetBrachytherapyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBrachytherapyCompleted(this, new GetBrachytherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChemotherapy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetChemotherapy(string caseNo, string hstExamNo, string prvNo) {
            object[] results = this.Invoke("GetChemotherapy", new object[] {
                        caseNo,
                        hstExamNo,
                        prvNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetChemotherapyAsync(string caseNo, string hstExamNo, string prvNo) {
            this.GetChemotherapyAsync(caseNo, hstExamNo, prvNo, null);
        }
        
        /// <remarks/>
        public void GetChemotherapyAsync(string caseNo, string hstExamNo, string prvNo, object userState) {
            if ((this.GetChemotherapyOperationCompleted == null)) {
                this.GetChemotherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChemotherapyOperationCompleted);
            }
            this.InvokeAsync("GetChemotherapy", new object[] {
                        caseNo,
                        hstExamNo,
                        prvNo}, this.GetChemotherapyOperationCompleted, userState);
        }
        
        private void OnGetChemotherapyOperationCompleted(object arg) {
            if ((this.GetChemotherapyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChemotherapyCompleted(this, new GetChemotherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGeneralExam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetGeneralExam(string caseNo, string hstExamNo) {
            object[] results = this.Invoke("GetGeneralExam", new object[] {
                        caseNo,
                        hstExamNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralExamAsync(string caseNo, string hstExamNo) {
            this.GetGeneralExamAsync(caseNo, hstExamNo, null);
        }
        
        /// <remarks/>
        public void GetGeneralExamAsync(string caseNo, string hstExamNo, object userState) {
            if ((this.GetGeneralExamOperationCompleted == null)) {
                this.GetGeneralExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralExamOperationCompleted);
            }
            this.InvokeAsync("GetGeneralExam", new object[] {
                        caseNo,
                        hstExamNo}, this.GetGeneralExamOperationCompleted, userState);
        }
        
        private void OnGetGeneralExamOperationCompleted(object arg) {
            if ((this.GetGeneralExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralExamCompleted(this, new GetGeneralExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTDiagnosis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCTDiagnosis(string caseNo, string jcNo) {
            object[] results = this.Invoke("GetCTDiagnosis", new object[] {
                        caseNo,
                        jcNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTDiagnosisAsync(string caseNo, string jcNo) {
            this.GetCTDiagnosisAsync(caseNo, jcNo, null);
        }
        
        /// <remarks/>
        public void GetCTDiagnosisAsync(string caseNo, string jcNo, object userState) {
            if ((this.GetCTDiagnosisOperationCompleted == null)) {
                this.GetCTDiagnosisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTDiagnosisOperationCompleted);
            }
            this.InvokeAsync("GetCTDiagnosis", new object[] {
                        caseNo,
                        jcNo}, this.GetCTDiagnosisOperationCompleted, userState);
        }
        
        private void OnGetCTDiagnosisOperationCompleted(object arg) {
            if ((this.GetCTDiagnosisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTDiagnosisCompleted(this, new GetCTDiagnosisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHistExamDtTm1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHistExamDtTm1(string caseNo, string diagDate, string diagTime) {
            object[] results = this.Invoke("GetHistExamDtTm1", new object[] {
                        caseNo,
                        diagDate,
                        diagTime});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistExamDtTm1Async(string caseNo, string diagDate, string diagTime) {
            this.GetHistExamDtTm1Async(caseNo, diagDate, diagTime, null);
        }
        
        /// <remarks/>
        public void GetHistExamDtTm1Async(string caseNo, string diagDate, string diagTime, object userState) {
            if ((this.GetHistExamDtTm1OperationCompleted == null)) {
                this.GetHistExamDtTm1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistExamDtTm1OperationCompleted);
            }
            this.InvokeAsync("GetHistExamDtTm1", new object[] {
                        caseNo,
                        diagDate,
                        diagTime}, this.GetHistExamDtTm1OperationCompleted, userState);
        }
        
        private void OnGetHistExamDtTm1OperationCompleted(object arg) {
            if ((this.GetHistExamDtTm1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistExamDtTm1Completed(this, new GetHistExamDtTm1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJCNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetJCNo(string caseNo, string jcDate, string saveTime) {
            object[] results = this.Invoke("GetJCNo", new object[] {
                        caseNo,
                        jcDate,
                        saveTime});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetJCNoAsync(string caseNo, string jcDate, string saveTime) {
            this.GetJCNoAsync(caseNo, jcDate, saveTime, null);
        }
        
        /// <remarks/>
        public void GetJCNoAsync(string caseNo, string jcDate, string saveTime, object userState) {
            if ((this.GetJCNoOperationCompleted == null)) {
                this.GetJCNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJCNoOperationCompleted);
            }
            this.InvokeAsync("GetJCNo", new object[] {
                        caseNo,
                        jcDate,
                        saveTime}, this.GetJCNoOperationCompleted, userState);
        }
        
        private void OnGetJCNoOperationCompleted(object arg) {
            if ((this.GetJCNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJCNoCompleted(this, new GetJCNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClinicalNotes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetClinicalNotes(string caseNo, string date, string time) {
            object[] results = this.Invoke("GetClinicalNotes", new object[] {
                        caseNo,
                        date,
                        time});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetClinicalNotesAsync(string caseNo, string date, string time) {
            this.GetClinicalNotesAsync(caseNo, date, time, null);
        }
        
        /// <remarks/>
        public void GetClinicalNotesAsync(string caseNo, string date, string time, object userState) {
            if ((this.GetClinicalNotesOperationCompleted == null)) {
                this.GetClinicalNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinicalNotesOperationCompleted);
            }
            this.InvokeAsync("GetClinicalNotes", new object[] {
                        caseNo,
                        date,
                        time}, this.GetClinicalNotesOperationCompleted, userState);
        }
        
        private void OnGetClinicalNotesOperationCompleted(object arg) {
            if ((this.GetClinicalNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinicalNotesCompleted(this, new GetClinicalNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdditionalRemarks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAdditionalRemarks(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetAdditionalRemarks", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdditionalRemarksAsync(string caseNo, string hstExmNo) {
            this.GetAdditionalRemarksAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetAdditionalRemarksAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetAdditionalRemarksOperationCompleted == null)) {
                this.GetAdditionalRemarksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdditionalRemarksOperationCompleted);
            }
            this.InvokeAsync("GetAdditionalRemarks", new object[] {
                        caseNo,
                        hstExmNo}, this.GetAdditionalRemarksOperationCompleted, userState);
        }
        
        private void OnGetAdditionalRemarksOperationCompleted(object arg) {
            if ((this.GetAdditionalRemarksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdditionalRemarksCompleted(this, new GetAdditionalRemarksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCranialDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCranialDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetCranialDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCranialDetailsAsync(string caseNo, string hstExmNo) {
            this.GetCranialDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetCranialDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetCranialDetailsOperationCompleted == null)) {
                this.GetCranialDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCranialDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCranialDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetCranialDetailsOperationCompleted, userState);
        }
        
        private void OnGetCranialDetailsOperationCompleted(object arg) {
            if ((this.GetCranialDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCranialDetailsCompleted(this, new GetCranialDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGaitDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetGaitDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetGaitDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetGaitDetailsAsync(string caseNo, string hstExmNo) {
            this.GetGaitDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetGaitDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetGaitDetailsOperationCompleted == null)) {
                this.GetGaitDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGaitDetailsOperationCompleted);
            }
            this.InvokeAsync("GetGaitDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetGaitDetailsOperationCompleted, userState);
        }
        
        private void OnGetGaitDetailsOperationCompleted(object arg) {
            if ((this.GetGaitDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGaitDetailsCompleted(this, new GetGaitDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSensoryDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSensoryDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetSensoryDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSensoryDetailsAsync(string caseNo, string hstExmNo) {
            this.GetSensoryDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetSensoryDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetSensoryDetailsOperationCompleted == null)) {
                this.GetSensoryDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSensoryDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSensoryDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetSensoryDetailsOperationCompleted, userState);
        }
        
        private void OnGetSensoryDetailsOperationCompleted(object arg) {
            if ((this.GetSensoryDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSensoryDetailsCompleted(this, new GetSensoryDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMotorSystemDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMotorSystemDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetMotorSystemDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMotorSystemDetailsAsync(string caseNo, string hstExmNo) {
            this.GetMotorSystemDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetMotorSystemDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetMotorSystemDetailsOperationCompleted == null)) {
                this.GetMotorSystemDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMotorSystemDetailsOperationCompleted);
            }
            this.InvokeAsync("GetMotorSystemDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetMotorSystemDetailsOperationCompleted, userState);
        }
        
        private void OnGetMotorSystemDetailsOperationCompleted(object arg) {
            if ((this.GetMotorSystemDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMotorSystemDetailsCompleted(this, new GetMotorSystemDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMuscleDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMuscleDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetMuscleDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMuscleDetailsAsync(string caseNo, string hstExmNo) {
            this.GetMuscleDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetMuscleDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetMuscleDetailsOperationCompleted == null)) {
                this.GetMuscleDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMuscleDetailsOperationCompleted);
            }
            this.InvokeAsync("GetMuscleDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetMuscleDetailsOperationCompleted, userState);
        }
        
        private void OnGetMuscleDetailsOperationCompleted(object arg) {
            if ((this.GetMuscleDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMuscleDetailsCompleted(this, new GetMuscleDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReflexesDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetReflexesDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetReflexesDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetReflexesDetailsAsync(string caseNo, string hstExmNo) {
            this.GetReflexesDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetReflexesDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetReflexesDetailsOperationCompleted == null)) {
                this.GetReflexesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReflexesDetailsOperationCompleted);
            }
            this.InvokeAsync("GetReflexesDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetReflexesDetailsOperationCompleted, userState);
        }
        
        private void OnGetReflexesDetailsOperationCompleted(object arg) {
            if ((this.GetReflexesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReflexesDetailsCompleted(this, new GetReflexesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCerebellarDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCerebellarDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetCerebellarDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCerebellarDetailsAsync(string caseNo, string hstExmNo) {
            this.GetCerebellarDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetCerebellarDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetCerebellarDetailsOperationCompleted == null)) {
                this.GetCerebellarDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCerebellarDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCerebellarDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetCerebellarDetailsOperationCompleted, userState);
        }
        
        private void OnGetCerebellarDetailsOperationCompleted(object arg) {
            if ((this.GetCerebellarDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCerebellarDetailsCompleted(this, new GetCerebellarDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEndocrineDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEndocrineDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetEndocrineDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEndocrineDetailsAsync(string caseNo, string hstExmNo) {
            this.GetEndocrineDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetEndocrineDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetEndocrineDetailsOperationCompleted == null)) {
                this.GetEndocrineDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEndocrineDetailsOperationCompleted);
            }
            this.InvokeAsync("GetEndocrineDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetEndocrineDetailsOperationCompleted, userState);
        }
        
        private void OnGetEndocrineDetailsOperationCompleted(object arg) {
            if ((this.GetEndocrineDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEndocrineDetailsCompleted(this, new GetEndocrineDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRemarks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRemarks(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetRemarks", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRemarksAsync(string caseNo, string hstExmNo) {
            this.GetRemarksAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetRemarksAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetRemarksOperationCompleted == null)) {
                this.GetRemarksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRemarksOperationCompleted);
            }
            this.InvokeAsync("GetRemarks", new object[] {
                        caseNo,
                        hstExmNo}, this.GetRemarksOperationCompleted, userState);
        }
        
        private void OnGetRemarksOperationCompleted(object arg) {
            if ((this.GetRemarksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRemarksCompleted(this, new GetRemarksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientOutcome", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPatientOutcome(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetPatientOutcome", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientOutcomeAsync(string caseNo, string hstExmNo) {
            this.GetPatientOutcomeAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetPatientOutcomeAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetPatientOutcomeOperationCompleted == null)) {
                this.GetPatientOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientOutcomeOperationCompleted);
            }
            this.InvokeAsync("GetPatientOutcome", new object[] {
                        caseNo,
                        hstExmNo}, this.GetPatientOutcomeOperationCompleted, userState);
        }
        
        private void OnGetPatientOutcomeOperationCompleted(object arg) {
            if ((this.GetPatientOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientOutcomeCompleted(this, new GetPatientOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClinicExt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetClinicExt(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetClinicExt", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetClinicExtAsync(string caseNo, string hstExmNo) {
            this.GetClinicExtAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetClinicExtAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetClinicExtOperationCompleted == null)) {
                this.GetClinicExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinicExtOperationCompleted);
            }
            this.InvokeAsync("GetClinicExt", new object[] {
                        caseNo,
                        hstExmNo}, this.GetClinicExtOperationCompleted, userState);
        }
        
        private void OnGetClinicExtOperationCompleted(object arg) {
            if ((this.GetClinicExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinicExtCompleted(this, new GetClinicExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdvancedDisease", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAdvancedDisease(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetAdvancedDisease", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdvancedDiseaseAsync(string caseNo, string hstExmNo) {
            this.GetAdvancedDiseaseAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetAdvancedDiseaseAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetAdvancedDiseaseOperationCompleted == null)) {
                this.GetAdvancedDiseaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdvancedDiseaseOperationCompleted);
            }
            this.InvokeAsync("GetAdvancedDisease", new object[] {
                        caseNo,
                        hstExmNo}, this.GetAdvancedDiseaseOperationCompleted, userState);
        }
        
        private void OnGetAdvancedDiseaseOperationCompleted(object arg) {
            if ((this.GetAdvancedDiseaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdvancedDiseaseCompleted(this, new GetAdvancedDiseaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecurrentCancer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRecurrentCancer(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetRecurrentCancer", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecurrentCancerAsync(string caseNo, string hstExmNo) {
            this.GetRecurrentCancerAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetRecurrentCancerAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetRecurrentCancerOperationCompleted == null)) {
                this.GetRecurrentCancerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecurrentCancerOperationCompleted);
            }
            this.InvokeAsync("GetRecurrentCancer", new object[] {
                        caseNo,
                        hstExmNo}, this.GetRecurrentCancerOperationCompleted, userState);
        }
        
        private void OnGetRecurrentCancerOperationCompleted(object arg) {
            if ((this.GetRecurrentCancerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecurrentCancerCompleted(this, new GetRecurrentCancerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNOS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetNOS(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetNOS", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetNOSAsync(string caseNo, string hstExmNo) {
            this.GetNOSAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetNOSAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetNOSOperationCompleted == null)) {
                this.GetNOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNOSOperationCompleted);
            }
            this.InvokeAsync("GetNOS", new object[] {
                        caseNo,
                        hstExmNo}, this.GetNOSOperationCompleted, userState);
        }
        
        private void OnGetNOSOperationCompleted(object arg) {
            if ((this.GetNOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNOSCompleted(this, new GetNOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCSFD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCSFD(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetCSFD", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCSFDAsync(string caseNo, string hstExmNo) {
            this.GetCSFDAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetCSFDAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetCSFDOperationCompleted == null)) {
                this.GetCSFDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCSFDOperationCompleted);
            }
            this.InvokeAsync("GetCSFD", new object[] {
                        caseNo,
                        hstExmNo}, this.GetCSFDOperationCompleted, userState);
        }
        
        private void OnGetCSFDOperationCompleted(object arg) {
            if ((this.GetCSFDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCSFDCompleted(this, new GetCSFDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMeningeal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMeningeal(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetMeningeal", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeningealAsync(string caseNo, string hstExmNo) {
            this.GetMeningealAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetMeningealAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetMeningealOperationCompleted == null)) {
                this.GetMeningealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeningealOperationCompleted);
            }
            this.InvokeAsync("GetMeningeal", new object[] {
                        caseNo,
                        hstExmNo}, this.GetMeningealOperationCompleted, userState);
        }
        
        private void OnGetMeningealOperationCompleted(object arg) {
            if ((this.GetMeningealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeningealCompleted(this, new GetMeningealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNPS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetNPS(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetNPS", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetNPSAsync(string caseNo, string hstExmNo) {
            this.GetNPSAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetNPSAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetNPSOperationCompleted == null)) {
                this.GetNPSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNPSOperationCompleted);
            }
            this.InvokeAsync("GetNPS", new object[] {
                        caseNo,
                        hstExmNo}, this.GetNPSOperationCompleted, userState);
        }
        
        private void OnGetNPSOperationCompleted(object arg) {
            if ((this.GetNPSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNPSCompleted(this, new GetNPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEyesDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEyesDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetEyesDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEyesDetailsAsync(string caseNo, string hstExmNo) {
            this.GetEyesDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetEyesDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetEyesDetailsOperationCompleted == null)) {
                this.GetEyesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEyesDetailsOperationCompleted);
            }
            this.InvokeAsync("GetEyesDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetEyesDetailsOperationCompleted, userState);
        }
        
        private void OnGetEyesDetailsOperationCompleted(object arg) {
            if ((this.GetEyesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEyesDetailsCompleted(this, new GetEyesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExternalEyeExam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetExternalEyeExam(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetExternalEyeExam", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalEyeExamAsync(string caseNo, string hstExmNo) {
            this.GetExternalEyeExamAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetExternalEyeExamAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetExternalEyeExamOperationCompleted == null)) {
                this.GetExternalEyeExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalEyeExamOperationCompleted);
            }
            this.InvokeAsync("GetExternalEyeExam", new object[] {
                        caseNo,
                        hstExmNo}, this.GetExternalEyeExamOperationCompleted, userState);
        }
        
        private void OnGetExternalEyeExamOperationCompleted(object arg) {
            if ((this.GetExternalEyeExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalEyeExamCompleted(this, new GetExternalEyeExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInternalEyeExam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetInternalEyeExam(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetInternalEyeExam", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetInternalEyeExamAsync(string caseNo, string hstExmNo) {
            this.GetInternalEyeExamAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetInternalEyeExamAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetInternalEyeExamOperationCompleted == null)) {
                this.GetInternalEyeExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInternalEyeExamOperationCompleted);
            }
            this.InvokeAsync("GetInternalEyeExam", new object[] {
                        caseNo,
                        hstExmNo}, this.GetInternalEyeExamOperationCompleted, userState);
        }
        
        private void OnGetInternalEyeExamOperationCompleted(object arg) {
            if ((this.GetInternalEyeExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInternalEyeExamCompleted(this, new GetInternalEyeExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHeadNeckDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHeadNeckDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetHeadNeckDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHeadNeckDetailsAsync(string caseNo, string hstExmNo) {
            this.GetHeadNeckDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetHeadNeckDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetHeadNeckDetailsOperationCompleted == null)) {
                this.GetHeadNeckDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHeadNeckDetailsOperationCompleted);
            }
            this.InvokeAsync("GetHeadNeckDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetHeadNeckDetailsOperationCompleted, userState);
        }
        
        private void OnGetHeadNeckDetailsOperationCompleted(object arg) {
            if ((this.GetHeadNeckDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHeadNeckDetailsCompleted(this, new GetHeadNeckDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMetastasisDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMetastasisDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetMetastasisDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetastasisDetailsAsync(string caseNo, string hstExmNo) {
            this.GetMetastasisDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetMetastasisDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetMetastasisDetailsOperationCompleted == null)) {
                this.GetMetastasisDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetastasisDetailsOperationCompleted);
            }
            this.InvokeAsync("GetMetastasisDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetMetastasisDetailsOperationCompleted, userState);
        }
        
        private void OnGetMetastasisDetailsOperationCompleted(object arg) {
            if ((this.GetMetastasisDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetastasisDetailsCompleted(this, new GetMetastasisDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMOCDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMOCDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetMOCDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMOCDetailsAsync(string caseNo, string hstExmNo) {
            this.GetMOCDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetMOCDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetMOCDetailsOperationCompleted == null)) {
                this.GetMOCDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMOCDetailsOperationCompleted);
            }
            this.InvokeAsync("GetMOCDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetMOCDetailsOperationCompleted, userState);
        }
        
        private void OnGetMOCDetailsOperationCompleted(object arg) {
            if ((this.GetMOCDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMOCDetailsCompleted(this, new GetMOCDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJawDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetJawDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetJawDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetJawDetailsAsync(string caseNo, string hstExmNo) {
            this.GetJawDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetJawDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetJawDetailsOperationCompleted == null)) {
                this.GetJawDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJawDetailsOperationCompleted);
            }
            this.InvokeAsync("GetJawDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetJawDetailsOperationCompleted, userState);
        }
        
        private void OnGetJawDetailsOperationCompleted(object arg) {
            if ((this.GetJawDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJawDetailsCompleted(this, new GetJawDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNeckDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetNeckDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetNeckDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetNeckDetailsAsync(string caseNo, string hstExmNo) {
            this.GetNeckDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetNeckDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetNeckDetailsOperationCompleted == null)) {
                this.GetNeckDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNeckDetailsOperationCompleted);
            }
            this.InvokeAsync("GetNeckDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetNeckDetailsOperationCompleted, userState);
        }
        
        private void OnGetNeckDetailsOperationCompleted(object arg) {
            if ((this.GetNeckDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNeckDetailsCompleted(this, new GetNeckDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTSHNDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTSHNDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetTSHNDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTSHNDetailsAsync(string caseNo, string hstExmNo) {
            this.GetTSHNDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetTSHNDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetTSHNDetailsOperationCompleted == null)) {
                this.GetTSHNDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTSHNDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTSHNDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetTSHNDetailsOperationCompleted, userState);
        }
        
        private void OnGetTSHNDetailsOperationCompleted(object arg) {
            if ((this.GetTSHNDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTSHNDetailsCompleted(this, new GetTSHNDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystemExamDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSystemExamDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetSystemExamDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemExamDetailsAsync(string caseNo, string hstExmNo) {
            this.GetSystemExamDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetSystemExamDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetSystemExamDetailsOperationCompleted == null)) {
                this.GetSystemExamDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemExamDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSystemExamDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetSystemExamDetailsOperationCompleted, userState);
        }
        
        private void OnGetSystemExamDetailsOperationCompleted(object arg) {
            if ((this.GetSystemExamDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemExamDetailsCompleted(this, new GetSystemExamDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTumorExamDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTumorExamDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetTumorExamDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTumorExamDetailsAsync(string caseNo, string hstExmNo) {
            this.GetTumorExamDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetTumorExamDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetTumorExamDetailsOperationCompleted == null)) {
                this.GetTumorExamDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTumorExamDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTumorExamDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetTumorExamDetailsOperationCompleted, userState);
        }
        
        private void OnGetTumorExamDetailsOperationCompleted(object arg) {
            if ((this.GetTumorExamDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTumorExamDetailsCompleted(this, new GetTumorExamDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTumorDetailsLeft", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTumorDetailsLeft(string caseNo, string hstExmNo, string tmrSide) {
            object[] results = this.Invoke("GetTumorDetailsLeft", new object[] {
                        caseNo,
                        hstExmNo,
                        tmrSide});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTumorDetailsLeftAsync(string caseNo, string hstExmNo, string tmrSide) {
            this.GetTumorDetailsLeftAsync(caseNo, hstExmNo, tmrSide, null);
        }
        
        /// <remarks/>
        public void GetTumorDetailsLeftAsync(string caseNo, string hstExmNo, string tmrSide, object userState) {
            if ((this.GetTumorDetailsLeftOperationCompleted == null)) {
                this.GetTumorDetailsLeftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTumorDetailsLeftOperationCompleted);
            }
            this.InvokeAsync("GetTumorDetailsLeft", new object[] {
                        caseNo,
                        hstExmNo,
                        tmrSide}, this.GetTumorDetailsLeftOperationCompleted, userState);
        }
        
        private void OnGetTumorDetailsLeftOperationCompleted(object arg) {
            if ((this.GetTumorDetailsLeftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTumorDetailsLeftCompleted(this, new GetTumorDetailsLeftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMetastasisDetails1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMetastasisDetails1(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetMetastasisDetails1", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetastasisDetails1Async(string caseNo, string hstExmNo) {
            this.GetMetastasisDetails1Async(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetMetastasisDetails1Async(string caseNo, string hstExmNo, object userState) {
            if ((this.GetMetastasisDetails1OperationCompleted == null)) {
                this.GetMetastasisDetails1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetastasisDetails1OperationCompleted);
            }
            this.InvokeAsync("GetMetastasisDetails1", new object[] {
                        caseNo,
                        hstExmNo}, this.GetMetastasisDetails1OperationCompleted, userState);
        }
        
        private void OnGetMetastasisDetails1OperationCompleted(object arg) {
            if ((this.GetMetastasisDetails1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetastasisDetails1Completed(this, new GetMetastasisDetails1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResidualDiseaseDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetResidualDiseaseDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetResidualDiseaseDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetResidualDiseaseDetailsAsync(string caseNo, string hstExmNo) {
            this.GetResidualDiseaseDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetResidualDiseaseDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetResidualDiseaseDetailsOperationCompleted == null)) {
                this.GetResidualDiseaseDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResidualDiseaseDetailsOperationCompleted);
            }
            this.InvokeAsync("GetResidualDiseaseDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetResidualDiseaseDetailsOperationCompleted, userState);
        }
        
        private void OnGetResidualDiseaseDetailsOperationCompleted(object arg) {
            if ((this.GetResidualDiseaseDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResidualDiseaseDetailsCompleted(this, new GetResidualDiseaseDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExamNodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetExamNodes(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetExamNodes", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetExamNodesAsync(string caseNo, string hstExmNo) {
            this.GetExamNodesAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetExamNodesAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetExamNodesOperationCompleted == null)) {
                this.GetExamNodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExamNodesOperationCompleted);
            }
            this.InvokeAsync("GetExamNodes", new object[] {
                        caseNo,
                        hstExmNo}, this.GetExamNodesOperationCompleted, userState);
        }
        
        private void OnGetExamNodesOperationCompleted(object arg) {
            if ((this.GetExamNodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExamNodesCompleted(this, new GetExamNodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProfilePathology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProfilePathology(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetProfilePathology", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfilePathologyAsync(string caseNo, string hstExmNo) {
            this.GetProfilePathologyAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetProfilePathologyAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetProfilePathologyOperationCompleted == null)) {
                this.GetProfilePathologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfilePathologyOperationCompleted);
            }
            this.InvokeAsync("GetProfilePathology", new object[] {
                        caseNo,
                        hstExmNo}, this.GetProfilePathologyOperationCompleted, userState);
        }
        
        private void OnGetProfilePathologyOperationCompleted(object arg) {
            if ((this.GetProfilePathologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfilePathologyCompleted(this, new GetProfilePathologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProcedureUsed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProcedureUsed(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetProcedureUsed", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcedureUsedAsync(string caseNo, string hstExmNo) {
            this.GetProcedureUsedAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetProcedureUsedAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetProcedureUsedOperationCompleted == null)) {
                this.GetProcedureUsedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcedureUsedOperationCompleted);
            }
            this.InvokeAsync("GetProcedureUsed", new object[] {
                        caseNo,
                        hstExmNo}, this.GetProcedureUsedOperationCompleted, userState);
        }
        
        private void OnGetProcedureUsedOperationCompleted(object arg) {
            if ((this.GetProcedureUsedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcedureUsedCompleted(this, new GetProcedureUsedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProcedureSoftTissueUsed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProcedureSoftTissueUsed(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetProcedureSoftTissueUsed", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcedureSoftTissueUsedAsync(string caseNo, string hstExmNo) {
            this.GetProcedureSoftTissueUsedAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetProcedureSoftTissueUsedAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetProcedureSoftTissueUsedOperationCompleted == null)) {
                this.GetProcedureSoftTissueUsedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcedureSoftTissueUsedOperationCompleted);
            }
            this.InvokeAsync("GetProcedureSoftTissueUsed", new object[] {
                        caseNo,
                        hstExmNo}, this.GetProcedureSoftTissueUsedOperationCompleted, userState);
        }
        
        private void OnGetProcedureSoftTissueUsedOperationCompleted(object arg) {
            if ((this.GetProcedureSoftTissueUsedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcedureSoftTissueUsedCompleted(this, new GetProcedureSoftTissueUsedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProcedureMandibleUsed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProcedureMandibleUsed(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetProcedureMandibleUsed", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcedureMandibleUsedAsync(string caseNo, string hstExmNo) {
            this.GetProcedureMandibleUsedAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetProcedureMandibleUsedAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetProcedureMandibleUsedOperationCompleted == null)) {
                this.GetProcedureMandibleUsedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcedureMandibleUsedOperationCompleted);
            }
            this.InvokeAsync("GetProcedureMandibleUsed", new object[] {
                        caseNo,
                        hstExmNo}, this.GetProcedureMandibleUsedOperationCompleted, userState);
        }
        
        private void OnGetProcedureMandibleUsedOperationCompleted(object arg) {
            if ((this.GetProcedureMandibleUsedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcedureMandibleUsedCompleted(this, new GetProcedureMandibleUsedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProcedureDraftAssessment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProcedureDraftAssessment(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetProcedureDraftAssessment", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcedureDraftAssessmentAsync(string caseNo, string hstExmNo) {
            this.GetProcedureDraftAssessmentAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetProcedureDraftAssessmentAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetProcedureDraftAssessmentOperationCompleted == null)) {
                this.GetProcedureDraftAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcedureDraftAssessmentOperationCompleted);
            }
            this.InvokeAsync("GetProcedureDraftAssessment", new object[] {
                        caseNo,
                        hstExmNo}, this.GetProcedureDraftAssessmentOperationCompleted, userState);
        }
        
        private void OnGetProcedureDraftAssessmentOperationCompleted(object arg) {
            if ((this.GetProcedureDraftAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcedureDraftAssessmentCompleted(this, new GetProcedureDraftAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSkinHairExam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSkinHairExam(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetSkinHairExam", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSkinHairExamAsync(string caseNo, string hstExmNo) {
            this.GetSkinHairExamAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetSkinHairExamAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetSkinHairExamOperationCompleted == null)) {
                this.GetSkinHairExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSkinHairExamOperationCompleted);
            }
            this.InvokeAsync("GetSkinHairExam", new object[] {
                        caseNo,
                        hstExmNo}, this.GetSkinHairExamOperationCompleted, userState);
        }
        
        private void OnGetSkinHairExamOperationCompleted(object arg) {
            if ((this.GetSkinHairExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSkinHairExamCompleted(this, new GetSkinHairExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBeSensSign", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBeSensSign(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetBeSensSign", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBeSensSignAsync(string caseNo, string hstExmNo) {
            this.GetBeSensSignAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetBeSensSignAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetBeSensSignOperationCompleted == null)) {
                this.GetBeSensSignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBeSensSignOperationCompleted);
            }
            this.InvokeAsync("GetBeSensSign", new object[] {
                        caseNo,
                        hstExmNo}, this.GetBeSensSignOperationCompleted, userState);
        }
        
        private void OnGetBeSensSignOperationCompleted(object arg) {
            if ((this.GetBeSensSignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBeSensSignCompleted(this, new GetBeSensSignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBeMotPower", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBeMotPower(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetBeMotPower", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBeMotPowerAsync(string caseNo, string hstExmNo) {
            this.GetBeMotPowerAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetBeMotPowerAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetBeMotPowerOperationCompleted == null)) {
                this.GetBeMotPowerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBeMotPowerOperationCompleted);
            }
            this.InvokeAsync("GetBeMotPower", new object[] {
                        caseNo,
                        hstExmNo}, this.GetBeMotPowerOperationCompleted, userState);
        }
        
        private void OnGetBeMotPowerOperationCompleted(object arg) {
            if ((this.GetBeMotPowerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBeMotPowerCompleted(this, new GetBeMotPowerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBeMovRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBeMovRange(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetBeMovRange", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBeMovRangeAsync(string caseNo, string hstExmNo) {
            this.GetBeMovRangeAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetBeMovRangeAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetBeMovRangeOperationCompleted == null)) {
                this.GetBeMovRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBeMovRangeOperationCompleted);
            }
            this.InvokeAsync("GetBeMovRange", new object[] {
                        caseNo,
                        hstExmNo}, this.GetBeMovRangeOperationCompleted, userState);
        }
        
        private void OnGetBeMovRangeOperationCompleted(object arg) {
            if ((this.GetBeMovRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBeMovRangeCompleted(this, new GetBeMovRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBeDeformity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBeDeformity(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetBeDeformity", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBeDeformityAsync(string caseNo, string hstExmNo) {
            this.GetBeDeformityAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetBeDeformityAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetBeDeformityOperationCompleted == null)) {
                this.GetBeDeformityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBeDeformityOperationCompleted);
            }
            this.InvokeAsync("GetBeDeformity", new object[] {
                        caseNo,
                        hstExmNo}, this.GetBeDeformityOperationCompleted, userState);
        }
        
        private void OnGetBeDeformityOperationCompleted(object arg) {
            if ((this.GetBeDeformityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBeDeformityCompleted(this, new GetBeDeformityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBeTenderness", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBeTenderness(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetBeTenderness", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBeTendernessAsync(string caseNo, string hstExmNo) {
            this.GetBeTendernessAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetBeTendernessAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetBeTendernessOperationCompleted == null)) {
                this.GetBeTendernessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBeTendernessOperationCompleted);
            }
            this.InvokeAsync("GetBeTenderness", new object[] {
                        caseNo,
                        hstExmNo}, this.GetBeTendernessOperationCompleted, userState);
        }
        
        private void OnGetBeTendernessOperationCompleted(object arg) {
            if ((this.GetBeTendernessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBeTendernessCompleted(this, new GetBeTendernessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBeSwelling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBeSwelling(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetBeSwelling", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBeSwellingAsync(string caseNo, string hstExmNo) {
            this.GetBeSwellingAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetBeSwellingAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetBeSwellingOperationCompleted == null)) {
                this.GetBeSwellingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBeSwellingOperationCompleted);
            }
            this.InvokeAsync("GetBeSwelling", new object[] {
                        caseNo,
                        hstExmNo}, this.GetBeSwellingOperationCompleted, userState);
        }
        
        private void OnGetBeSwellingOperationCompleted(object arg) {
            if ((this.GetBeSwellingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBeSwellingCompleted(this, new GetBeSwellingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystemExam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSystemExam(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetSystemExam", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemExamAsync(string caseNo, string hstExmNo) {
            this.GetSystemExamAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetSystemExamAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetSystemExamOperationCompleted == null)) {
                this.GetSystemExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemExamOperationCompleted);
            }
            this.InvokeAsync("GetSystemExam", new object[] {
                        caseNo,
                        hstExmNo}, this.GetSystemExamOperationCompleted, userState);
        }
        
        private void OnGetSystemExamOperationCompleted(object arg) {
            if ((this.GetSystemExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemExamCompleted(this, new GetSystemExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUroTumorExam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUroTumorExam(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetUroTumorExam", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUroTumorExamAsync(string caseNo, string hstExmNo) {
            this.GetUroTumorExamAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetUroTumorExamAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetUroTumorExamOperationCompleted == null)) {
                this.GetUroTumorExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUroTumorExamOperationCompleted);
            }
            this.InvokeAsync("GetUroTumorExam", new object[] {
                        caseNo,
                        hstExmNo}, this.GetUroTumorExamOperationCompleted, userState);
        }
        
        private void OnGetUroTumorExamOperationCompleted(object arg) {
            if ((this.GetUroTumorExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUroTumorExamCompleted(this, new GetUroTumorExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGyneTumorExam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetGyneTumorExam(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetGyneTumorExam", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetGyneTumorExamAsync(string caseNo, string hstExmNo) {
            this.GetGyneTumorExamAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetGyneTumorExamAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetGyneTumorExamOperationCompleted == null)) {
                this.GetGyneTumorExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGyneTumorExamOperationCompleted);
            }
            this.InvokeAsync("GetGyneTumorExam", new object[] {
                        caseNo,
                        hstExmNo}, this.GetGyneTumorExamOperationCompleted, userState);
        }
        
        private void OnGetGyneTumorExamOperationCompleted(object arg) {
            if ((this.GetGyneTumorExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGyneTumorExamCompleted(this, new GetGyneTumorExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFemaleGenitaliaExam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFemaleGenitaliaExam(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetFemaleGenitaliaExam", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFemaleGenitaliaExamAsync(string caseNo, string hstExmNo) {
            this.GetFemaleGenitaliaExamAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetFemaleGenitaliaExamAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetFemaleGenitaliaExamOperationCompleted == null)) {
                this.GetFemaleGenitaliaExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFemaleGenitaliaExamOperationCompleted);
            }
            this.InvokeAsync("GetFemaleGenitaliaExam", new object[] {
                        caseNo,
                        hstExmNo}, this.GetFemaleGenitaliaExamOperationCompleted, userState);
        }
        
        private void OnGetFemaleGenitaliaExamOperationCompleted(object arg) {
            if ((this.GetFemaleGenitaliaExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFemaleGenitaliaExamCompleted(this, new GetFemaleGenitaliaExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaleGenitaliaExam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMaleGenitaliaExam(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetMaleGenitaliaExam", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaleGenitaliaExamAsync(string caseNo, string hstExmNo) {
            this.GetMaleGenitaliaExamAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetMaleGenitaliaExamAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetMaleGenitaliaExamOperationCompleted == null)) {
                this.GetMaleGenitaliaExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaleGenitaliaExamOperationCompleted);
            }
            this.InvokeAsync("GetMaleGenitaliaExam", new object[] {
                        caseNo,
                        hstExmNo}, this.GetMaleGenitaliaExamOperationCompleted, userState);
        }
        
        private void OnGetMaleGenitaliaExamOperationCompleted(object arg) {
            if ((this.GetMaleGenitaliaExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaleGenitaliaExamCompleted(this, new GetMaleGenitaliaExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPerRectalExam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPerRectalExam(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetPerRectalExam", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerRectalExamAsync(string caseNo, string hstExmNo) {
            this.GetPerRectalExamAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetPerRectalExamAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetPerRectalExamOperationCompleted == null)) {
                this.GetPerRectalExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerRectalExamOperationCompleted);
            }
            this.InvokeAsync("GetPerRectalExam", new object[] {
                        caseNo,
                        hstExmNo}, this.GetPerRectalExamOperationCompleted, userState);
        }
        
        private void OnGetPerRectalExamOperationCompleted(object arg) {
            if ((this.GetPerRectalExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerRectalExamCompleted(this, new GetPerRectalExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrimaryTumorGastro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrimaryTumorGastro(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetPrimaryTumorGastro", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrimaryTumorGastroAsync(string caseNo, string hstExmNo) {
            this.GetPrimaryTumorGastroAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetPrimaryTumorGastroAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetPrimaryTumorGastroOperationCompleted == null)) {
                this.GetPrimaryTumorGastroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrimaryTumorGastroOperationCompleted);
            }
            this.InvokeAsync("GetPrimaryTumorGastro", new object[] {
                        caseNo,
                        hstExmNo}, this.GetPrimaryTumorGastroOperationCompleted, userState);
        }
        
        private void OnGetPrimaryTumorGastroOperationCompleted(object arg) {
            if ((this.GetPrimaryTumorGastroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrimaryTumorGastroCompleted(this, new GetPrimaryTumorGastroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAscitesExamination", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAscitesExamination(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetAscitesExamination", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAscitesExaminationAsync(string caseNo, string hstExmNo) {
            this.GetAscitesExaminationAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetAscitesExaminationAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetAscitesExaminationOperationCompleted == null)) {
                this.GetAscitesExaminationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAscitesExaminationOperationCompleted);
            }
            this.InvokeAsync("GetAscitesExamination", new object[] {
                        caseNo,
                        hstExmNo}, this.GetAscitesExaminationOperationCompleted, userState);
        }
        
        private void OnGetAscitesExaminationOperationCompleted(object arg) {
            if ((this.GetAscitesExaminationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAscitesExaminationCompleted(this, new GetAscitesExaminationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPercussionAscites", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPercussionAscites(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetPercussionAscites", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPercussionAscitesAsync(string caseNo, string hstExmNo) {
            this.GetPercussionAscitesAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetPercussionAscitesAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetPercussionAscitesOperationCompleted == null)) {
                this.GetPercussionAscitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPercussionAscitesOperationCompleted);
            }
            this.InvokeAsync("GetPercussionAscites", new object[] {
                        caseNo,
                        hstExmNo}, this.GetPercussionAscitesOperationCompleted, userState);
        }
        
        private void OnGetPercussionAscitesOperationCompleted(object arg) {
            if ((this.GetPercussionAscitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPercussionAscitesCompleted(this, new GetPercussionAscitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTumorDetailsRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTumorDetailsRight(string caseNo, string hstExmNo, string tmrSide) {
            object[] results = this.Invoke("GetTumorDetailsRight", new object[] {
                        caseNo,
                        hstExmNo,
                        tmrSide});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTumorDetailsRightAsync(string caseNo, string hstExmNo, string tmrSide) {
            this.GetTumorDetailsRightAsync(caseNo, hstExmNo, tmrSide, null);
        }
        
        /// <remarks/>
        public void GetTumorDetailsRightAsync(string caseNo, string hstExmNo, string tmrSide, object userState) {
            if ((this.GetTumorDetailsRightOperationCompleted == null)) {
                this.GetTumorDetailsRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTumorDetailsRightOperationCompleted);
            }
            this.InvokeAsync("GetTumorDetailsRight", new object[] {
                        caseNo,
                        hstExmNo,
                        tmrSide}, this.GetTumorDetailsRightOperationCompleted, userState);
        }
        
        private void OnGetTumorDetailsRightOperationCompleted(object arg) {
            if ((this.GetTumorDetailsRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTumorDetailsRightCompleted(this, new GetTumorDetailsRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCVSDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCVSDetails(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetCVSDetails", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCVSDetailsAsync(string caseNo, string hstExmNo) {
            this.GetCVSDetailsAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetCVSDetailsAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetCVSDetailsOperationCompleted == null)) {
                this.GetCVSDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCVSDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCVSDetails", new object[] {
                        caseNo,
                        hstExmNo}, this.GetCVSDetailsOperationCompleted, userState);
        }
        
        private void OnGetCVSDetailsOperationCompleted(object arg) {
            if ((this.GetCVSDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCVSDetailsCompleted(this, new GetCVSDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCVSInspection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCVSInspection(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetCVSInspection", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCVSInspectionAsync(string caseNo, string hstExmNo) {
            this.GetCVSInspectionAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetCVSInspectionAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetCVSInspectionOperationCompleted == null)) {
                this.GetCVSInspectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCVSInspectionOperationCompleted);
            }
            this.InvokeAsync("GetCVSInspection", new object[] {
                        caseNo,
                        hstExmNo}, this.GetCVSInspectionOperationCompleted, userState);
        }
        
        private void OnGetCVSInspectionOperationCompleted(object arg) {
            if ((this.GetCVSInspectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCVSInspectionCompleted(this, new GetCVSInspectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCVSAuscultation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCVSAuscultation(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetCVSAuscultation", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCVSAuscultationAsync(string caseNo, string hstExmNo) {
            this.GetCVSAuscultationAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetCVSAuscultationAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetCVSAuscultationOperationCompleted == null)) {
                this.GetCVSAuscultationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCVSAuscultationOperationCompleted);
            }
            this.InvokeAsync("GetCVSAuscultation", new object[] {
                        caseNo,
                        hstExmNo}, this.GetCVSAuscultationOperationCompleted, userState);
        }
        
        private void OnGetCVSAuscultationOperationCompleted(object arg) {
            if ((this.GetCVSAuscultationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCVSAuscultationCompleted(this, new GetCVSAuscultationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetThoracicTumorExam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetThoracicTumorExam(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetThoracicTumorExam", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetThoracicTumorExamAsync(string caseNo, string hstExmNo) {
            this.GetThoracicTumorExamAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetThoracicTumorExamAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetThoracicTumorExamOperationCompleted == null)) {
                this.GetThoracicTumorExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThoracicTumorExamOperationCompleted);
            }
            this.InvokeAsync("GetThoracicTumorExam", new object[] {
                        caseNo,
                        hstExmNo}, this.GetThoracicTumorExamOperationCompleted, userState);
        }
        
        private void OnGetThoracicTumorExamOperationCompleted(object arg) {
            if ((this.GetThoracicTumorExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThoracicTumorExamCompleted(this, new GetThoracicTumorExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAbdomenInspection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAbdomenInspection(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetAbdomenInspection", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAbdomenInspectionAsync(string caseNo, string hstExmNo) {
            this.GetAbdomenInspectionAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetAbdomenInspectionAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetAbdomenInspectionOperationCompleted == null)) {
                this.GetAbdomenInspectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAbdomenInspectionOperationCompleted);
            }
            this.InvokeAsync("GetAbdomenInspection", new object[] {
                        caseNo,
                        hstExmNo}, this.GetAbdomenInspectionOperationCompleted, userState);
        }
        
        private void OnGetAbdomenInspectionOperationCompleted(object arg) {
            if ((this.GetAbdomenInspectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAbdomenInspectionCompleted(this, new GetAbdomenInspectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAbdomenPalpation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAbdomenPalpation(string caseNo, string hstExmNo) {
            object[] results = this.Invoke("GetAbdomenPalpation", new object[] {
                        caseNo,
                        hstExmNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAbdomenPalpationAsync(string caseNo, string hstExmNo) {
            this.GetAbdomenPalpationAsync(caseNo, hstExmNo, null);
        }
        
        /// <remarks/>
        public void GetAbdomenPalpationAsync(string caseNo, string hstExmNo, object userState) {
            if ((this.GetAbdomenPalpationOperationCompleted == null)) {
                this.GetAbdomenPalpationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAbdomenPalpationOperationCompleted);
            }
            this.InvokeAsync("GetAbdomenPalpation", new object[] {
                        caseNo,
                        hstExmNo}, this.GetAbdomenPalpationOperationCompleted, userState);
        }
        
        private void OnGetAbdomenPalpationOperationCompleted(object arg) {
            if ((this.GetAbdomenPalpationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAbdomenPalpationCompleted(this, new GetAbdomenPalpationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEmployeeDetails(string empCode) {
            object[] results = this.Invoke("GetEmployeeDetails", new object[] {
                        empCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeDetailsAsync(string empCode) {
            this.GetEmployeeDetailsAsync(empCode, null);
        }
        
        /// <remarks/>
        public void GetEmployeeDetailsAsync(string empCode, object userState) {
            if ((this.GetEmployeeDetailsOperationCompleted == null)) {
                this.GetEmployeeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeDetailsOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeDetails", new object[] {
                        empCode}, this.GetEmployeeDetailsOperationCompleted, userState);
        }
        
        private void OnGetEmployeeDetailsOperationCompleted(object arg) {
            if ((this.GetEmployeeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeDetailsCompleted(this, new GetEmployeeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClinicalEventHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetClinicalEventHistory(string caseNo, string ceDate) {
            object[] results = this.Invoke("GetClinicalEventHistory", new object[] {
                        caseNo,
                        ceDate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetClinicalEventHistoryAsync(string caseNo, string ceDate) {
            this.GetClinicalEventHistoryAsync(caseNo, ceDate, null);
        }
        
        /// <remarks/>
        public void GetClinicalEventHistoryAsync(string caseNo, string ceDate, object userState) {
            if ((this.GetClinicalEventHistoryOperationCompleted == null)) {
                this.GetClinicalEventHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinicalEventHistoryOperationCompleted);
            }
            this.InvokeAsync("GetClinicalEventHistory", new object[] {
                        caseNo,
                        ceDate}, this.GetClinicalEventHistoryOperationCompleted, userState);
        }
        
        private void OnGetClinicalEventHistoryOperationCompleted(object arg) {
            if ((this.GetClinicalEventHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinicalEventHistoryCompleted(this, new GetClinicalEventHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistinctClinicalEventDates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDistinctClinicalEventDates(string caseNo) {
            object[] results = this.Invoke("GetDistinctClinicalEventDates", new object[] {
                        caseNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistinctClinicalEventDatesAsync(string caseNo) {
            this.GetDistinctClinicalEventDatesAsync(caseNo, null);
        }
        
        /// <remarks/>
        public void GetDistinctClinicalEventDatesAsync(string caseNo, object userState) {
            if ((this.GetDistinctClinicalEventDatesOperationCompleted == null)) {
                this.GetDistinctClinicalEventDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistinctClinicalEventDatesOperationCompleted);
            }
            this.InvokeAsync("GetDistinctClinicalEventDates", new object[] {
                        caseNo}, this.GetDistinctClinicalEventDatesOperationCompleted, userState);
        }
        
        private void OnGetDistinctClinicalEventDatesOperationCompleted(object arg) {
            if ((this.GetDistinctClinicalEventDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistinctClinicalEventDatesCompleted(this, new GetDistinctClinicalEventDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHistologyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHistologyData(string histCd) {
            object[] results = this.Invoke("GetHistologyData", new object[] {
                        histCd});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistologyDataAsync(string histCd) {
            this.GetHistologyDataAsync(histCd, null);
        }
        
        /// <remarks/>
        public void GetHistologyDataAsync(string histCd, object userState) {
            if ((this.GetHistologyDataOperationCompleted == null)) {
                this.GetHistologyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistologyDataOperationCompleted);
            }
            this.InvokeAsync("GetHistologyData", new object[] {
                        histCd}, this.GetHistologyDataOperationCompleted, userState);
        }
        
        private void OnGetHistologyDataOperationCompleted(object arg) {
            if ((this.GetHistologyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistologyDataCompleted(this, new GetHistologyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProcedureName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProcedureName(string procCode) {
            object[] results = this.Invoke("GetProcedureName", new object[] {
                        procCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcedureNameAsync(string procCode) {
            this.GetProcedureNameAsync(procCode, null);
        }
        
        /// <remarks/>
        public void GetProcedureNameAsync(string procCode, object userState) {
            if ((this.GetProcedureNameOperationCompleted == null)) {
                this.GetProcedureNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcedureNameOperationCompleted);
            }
            this.InvokeAsync("GetProcedureName", new object[] {
                        procCode}, this.GetProcedureNameOperationCompleted, userState);
        }
        
        private void OnGetProcedureNameOperationCompleted(object arg) {
            if ((this.GetProcedureNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcedureNameCompleted(this, new GetProcedureNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBMAReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDBMAReport(string reqNo) {
            object[] results = this.Invoke("GetDBMAReport", new object[] {
                        reqNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBMAReportAsync(string reqNo) {
            this.GetDBMAReportAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void GetDBMAReportAsync(string reqNo, object userState) {
            if ((this.GetDBMAReportOperationCompleted == null)) {
                this.GetDBMAReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBMAReportOperationCompleted);
            }
            this.InvokeAsync("GetDBMAReport", new object[] {
                        reqNo}, this.GetDBMAReportOperationCompleted, userState);
        }
        
        private void OnGetDBMAReportOperationCompleted(object arg) {
            if ((this.GetDBMAReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBMAReportCompleted(this, new GetDBMAReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JCOutsideTreatmentReview", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JCOutsideTreatmentReview(int jc_no, string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_JCOutsideTreatmentReview", new object[] {
                        jc_no,
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JCOutsideTreatmentReviewAsync(int jc_no, string case_no, string Err) {
            this.Get_emr_JCOutsideTreatmentReviewAsync(jc_no, case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JCOutsideTreatmentReviewAsync(int jc_no, string case_no, string Err, object userState) {
            if ((this.Get_emr_JCOutsideTreatmentReviewOperationCompleted == null)) {
                this.Get_emr_JCOutsideTreatmentReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JCOutsideTreatmentReviewOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JCOutsideTreatmentReview", new object[] {
                        jc_no,
                        case_no,
                        Err}, this.Get_emr_JCOutsideTreatmentReviewOperationCompleted, userState);
        }
        
        private void OnGet_emr_JCOutsideTreatmentReviewOperationCompleted(object arg) {
            if ((this.Get_emr_JCOutsideTreatmentReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JCOutsideTreatmentReviewCompleted(this, new Get_emr_JCOutsideTreatmentReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CLINICAL_DIAGNOSIS_DETAILS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CLINICAL_DIAGNOSIS_DETAILS(int jc_no, string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_CLINICAL_DIAGNOSIS_DETAILS", new object[] {
                        jc_no,
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CLINICAL_DIAGNOSIS_DETAILSAsync(int jc_no, string case_no, string Err) {
            this.Get_emr_CLINICAL_DIAGNOSIS_DETAILSAsync(jc_no, case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CLINICAL_DIAGNOSIS_DETAILSAsync(int jc_no, string case_no, string Err, object userState) {
            if ((this.Get_emr_CLINICAL_DIAGNOSIS_DETAILSOperationCompleted == null)) {
                this.Get_emr_CLINICAL_DIAGNOSIS_DETAILSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CLINICAL_DIAGNOSIS_DETAILSOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CLINICAL_DIAGNOSIS_DETAILS", new object[] {
                        jc_no,
                        case_no,
                        Err}, this.Get_emr_CLINICAL_DIAGNOSIS_DETAILSOperationCompleted, userState);
        }
        
        private void OnGet_emr_CLINICAL_DIAGNOSIS_DETAILSOperationCompleted(object arg) {
            if ((this.Get_emr_CLINICAL_DIAGNOSIS_DETAILSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CLINICAL_DIAGNOSIS_DETAILSCompleted(this, new Get_emr_CLINICAL_DIAGNOSIS_DETAILSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JC_DiagnMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JC_DiagnMethod(string dm_type, string dm, ref string Err) {
            object[] results = this.Invoke("Get_emr_JC_DiagnMethod", new object[] {
                        dm_type,
                        dm,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JC_DiagnMethodAsync(string dm_type, string dm, string Err) {
            this.Get_emr_JC_DiagnMethodAsync(dm_type, dm, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JC_DiagnMethodAsync(string dm_type, string dm, string Err, object userState) {
            if ((this.Get_emr_JC_DiagnMethodOperationCompleted == null)) {
                this.Get_emr_JC_DiagnMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JC_DiagnMethodOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JC_DiagnMethod", new object[] {
                        dm_type,
                        dm,
                        Err}, this.Get_emr_JC_DiagnMethodOperationCompleted, userState);
        }
        
        private void OnGet_emr_JC_DiagnMethodOperationCompleted(object arg) {
            if ((this.Get_emr_JC_DiagnMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JC_DiagnMethodCompleted(this, new Get_emr_JC_DiagnMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JC_PriSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JC_PriSite(string scode, ref string Err) {
            object[] results = this.Invoke("Get_emr_JC_PriSite", new object[] {
                        scode,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JC_PriSiteAsync(string scode, string Err) {
            this.Get_emr_JC_PriSiteAsync(scode, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JC_PriSiteAsync(string scode, string Err, object userState) {
            if ((this.Get_emr_JC_PriSiteOperationCompleted == null)) {
                this.Get_emr_JC_PriSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JC_PriSiteOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JC_PriSite", new object[] {
                        scode,
                        Err}, this.Get_emr_JC_PriSiteOperationCompleted, userState);
        }
        
        private void OnGet_emr_JC_PriSiteOperationCompleted(object arg) {
            if ((this.Get_emr_JC_PriSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JC_PriSiteCompleted(this, new Get_emr_JC_PriSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JC_PriHistology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JC_PriHistology(string hist_code, ref string Err) {
            object[] results = this.Invoke("Get_emr_JC_PriHistology", new object[] {
                        hist_code,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JC_PriHistologyAsync(string hist_code, string Err) {
            this.Get_emr_JC_PriHistologyAsync(hist_code, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JC_PriHistologyAsync(string hist_code, string Err, object userState) {
            if ((this.Get_emr_JC_PriHistologyOperationCompleted == null)) {
                this.Get_emr_JC_PriHistologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JC_PriHistologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JC_PriHistology", new object[] {
                        hist_code,
                        Err}, this.Get_emr_JC_PriHistologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_JC_PriHistologyOperationCompleted(object arg) {
            if ((this.Get_emr_JC_PriHistologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JC_PriHistologyCompleted(this, new Get_emr_JC_PriHistologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JC_StageGroupping", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JC_StageGroupping(string clin_t, string clin_n, string clin_m, ref string Err) {
            object[] results = this.Invoke("Get_emr_JC_StageGroupping", new object[] {
                        clin_t,
                        clin_n,
                        clin_m,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JC_StageGrouppingAsync(string clin_t, string clin_n, string clin_m, string Err) {
            this.Get_emr_JC_StageGrouppingAsync(clin_t, clin_n, clin_m, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JC_StageGrouppingAsync(string clin_t, string clin_n, string clin_m, string Err, object userState) {
            if ((this.Get_emr_JC_StageGrouppingOperationCompleted == null)) {
                this.Get_emr_JC_StageGrouppingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JC_StageGrouppingOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JC_StageGroupping", new object[] {
                        clin_t,
                        clin_n,
                        clin_m,
                        Err}, this.Get_emr_JC_StageGrouppingOperationCompleted, userState);
        }
        
        private void OnGet_emr_JC_StageGrouppingOperationCompleted(object arg) {
            if ((this.Get_emr_JC_StageGrouppingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JC_StageGrouppingCompleted(this, new Get_emr_JC_StageGrouppingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JC_ICD9", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JC_ICD9(string icd9, ref string Err) {
            object[] results = this.Invoke("Get_emr_JC_ICD9", new object[] {
                        icd9,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JC_ICD9Async(string icd9, string Err) {
            this.Get_emr_JC_ICD9Async(icd9, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JC_ICD9Async(string icd9, string Err, object userState) {
            if ((this.Get_emr_JC_ICD9OperationCompleted == null)) {
                this.Get_emr_JC_ICD9OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JC_ICD9OperationCompleted);
            }
            this.InvokeAsync("Get_emr_JC_ICD9", new object[] {
                        icd9,
                        Err}, this.Get_emr_JC_ICD9OperationCompleted, userState);
        }
        
        private void OnGet_emr_JC_ICD9OperationCompleted(object arg) {
            if ((this.Get_emr_JC_ICD9Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JC_ICD9Completed(this, new Get_emr_JC_ICD9CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JC_RadicalTreatmentDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JC_RadicalTreatmentDetails(int jc_no, string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_JC_RadicalTreatmentDetails", new object[] {
                        jc_no,
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JC_RadicalTreatmentDetailsAsync(int jc_no, string case_no, string Err) {
            this.Get_emr_JC_RadicalTreatmentDetailsAsync(jc_no, case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JC_RadicalTreatmentDetailsAsync(int jc_no, string case_no, string Err, object userState) {
            if ((this.Get_emr_JC_RadicalTreatmentDetailsOperationCompleted == null)) {
                this.Get_emr_JC_RadicalTreatmentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JC_RadicalTreatmentDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JC_RadicalTreatmentDetails", new object[] {
                        jc_no,
                        case_no,
                        Err}, this.Get_emr_JC_RadicalTreatmentDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_JC_RadicalTreatmentDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_JC_RadicalTreatmentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JC_RadicalTreatmentDetailsCompleted(this, new Get_emr_JC_RadicalTreatmentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JC_RadicalDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JC_RadicalDetails(int jc_no, string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_JC_RadicalDetails", new object[] {
                        jc_no,
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JC_RadicalDetailsAsync(int jc_no, string case_no, string Err) {
            this.Get_emr_JC_RadicalDetailsAsync(jc_no, case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JC_RadicalDetailsAsync(int jc_no, string case_no, string Err, object userState) {
            if ((this.Get_emr_JC_RadicalDetailsOperationCompleted == null)) {
                this.Get_emr_JC_RadicalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JC_RadicalDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JC_RadicalDetails", new object[] {
                        jc_no,
                        case_no,
                        Err}, this.Get_emr_JC_RadicalDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_JC_RadicalDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_JC_RadicalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JC_RadicalDetailsCompleted(this, new Get_emr_JC_RadicalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JC_PalliativeTreatmentDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JC_PalliativeTreatmentDetails(int jc_no, string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_JC_PalliativeTreatmentDetails", new object[] {
                        jc_no,
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JC_PalliativeTreatmentDetailsAsync(int jc_no, string case_no, string Err) {
            this.Get_emr_JC_PalliativeTreatmentDetailsAsync(jc_no, case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JC_PalliativeTreatmentDetailsAsync(int jc_no, string case_no, string Err, object userState) {
            if ((this.Get_emr_JC_PalliativeTreatmentDetailsOperationCompleted == null)) {
                this.Get_emr_JC_PalliativeTreatmentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JC_PalliativeTreatmentDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JC_PalliativeTreatmentDetails", new object[] {
                        jc_no,
                        case_no,
                        Err}, this.Get_emr_JC_PalliativeTreatmentDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_JC_PalliativeTreatmentDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_JC_PalliativeTreatmentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JC_PalliativeTreatmentDetailsCompleted(this, new Get_emr_JC_PalliativeTreatmentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JC_PalliativeDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JC_PalliativeDetails(int jc_no, string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_JC_PalliativeDetails", new object[] {
                        jc_no,
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JC_PalliativeDetailsAsync(int jc_no, string case_no, string Err) {
            this.Get_emr_JC_PalliativeDetailsAsync(jc_no, case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JC_PalliativeDetailsAsync(int jc_no, string case_no, string Err, object userState) {
            if ((this.Get_emr_JC_PalliativeDetailsOperationCompleted == null)) {
                this.Get_emr_JC_PalliativeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JC_PalliativeDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JC_PalliativeDetails", new object[] {
                        jc_no,
                        case_no,
                        Err}, this.Get_emr_JC_PalliativeDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_JC_PalliativeDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_JC_PalliativeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JC_PalliativeDetailsCompleted(this, new Get_emr_JC_PalliativeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_ClinicalNote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_ClinicalNote(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_ClinicalNote", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ClinicalNoteAsync(string case_no, string Err) {
            this.Get_emr_ClinicalNoteAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ClinicalNoteAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_ClinicalNoteOperationCompleted == null)) {
                this.Get_emr_ClinicalNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ClinicalNoteOperationCompleted);
            }
            this.InvokeAsync("Get_emr_ClinicalNote", new object[] {
                        case_no,
                        Err}, this.Get_emr_ClinicalNoteOperationCompleted, userState);
        }
        
        private void OnGet_emr_ClinicalNoteOperationCompleted(object arg) {
            if ((this.Get_emr_ClinicalNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ClinicalNoteCompleted(this, new Get_emr_ClinicalNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Referrals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Referrals(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Referrals", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ReferralsAsync(string case_no, string Err) {
            this.Get_emr_ReferralsAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ReferralsAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_ReferralsOperationCompleted == null)) {
                this.Get_emr_ReferralsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ReferralsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Referrals", new object[] {
                        case_no,
                        Err}, this.Get_emr_ReferralsOperationCompleted, userState);
        }
        
        private void OnGet_emr_ReferralsOperationCompleted(object arg) {
            if ((this.Get_emr_ReferralsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ReferralsCompleted(this, new Get_emr_ReferralsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_ClinicalDiagnosis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_ClinicalDiagnosis(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_ClinicalDiagnosis", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ClinicalDiagnosisAsync(string case_no, string Err) {
            this.Get_emr_ClinicalDiagnosisAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ClinicalDiagnosisAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_ClinicalDiagnosisOperationCompleted == null)) {
                this.Get_emr_ClinicalDiagnosisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ClinicalDiagnosisOperationCompleted);
            }
            this.InvokeAsync("Get_emr_ClinicalDiagnosis", new object[] {
                        case_no,
                        Err}, this.Get_emr_ClinicalDiagnosisOperationCompleted, userState);
        }
        
        private void OnGet_emr_ClinicalDiagnosisOperationCompleted(object arg) {
            if ((this.Get_emr_ClinicalDiagnosisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ClinicalDiagnosisCompleted(this, new Get_emr_ClinicalDiagnosisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PreventiveOncology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PreventiveOncology(string case_no, int hist_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_PreventiveOncology", new object[] {
                        case_no,
                        hist_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PreventiveOncologyAsync(string case_no, int hist_examno, string Err) {
            this.Get_emr_PreventiveOncologyAsync(case_no, hist_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PreventiveOncologyAsync(string case_no, int hist_examno, string Err, object userState) {
            if ((this.Get_emr_PreventiveOncologyOperationCompleted == null)) {
                this.Get_emr_PreventiveOncologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PreventiveOncologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PreventiveOncology", new object[] {
                        case_no,
                        hist_examno,
                        Err}, this.Get_emr_PreventiveOncologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_PreventiveOncologyOperationCompleted(object arg) {
            if ((this.Get_emr_PreventiveOncologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PreventiveOncologyCompleted(this, new Get_emr_PreventiveOncologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_REF_CLINDIS_MGMTPLAN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_REF_CLINDIS_MGMTPLAN(string case_no, int hist_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_REF_CLINDIS_MGMTPLAN", new object[] {
                        case_no,
                        hist_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_REF_CLINDIS_MGMTPLANAsync(string case_no, int hist_examno, string Err) {
            this.Get_emr_REF_CLINDIS_MGMTPLANAsync(case_no, hist_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_REF_CLINDIS_MGMTPLANAsync(string case_no, int hist_examno, string Err, object userState) {
            if ((this.Get_emr_REF_CLINDIS_MGMTPLANOperationCompleted == null)) {
                this.Get_emr_REF_CLINDIS_MGMTPLANOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_REF_CLINDIS_MGMTPLANOperationCompleted);
            }
            this.InvokeAsync("Get_emr_REF_CLINDIS_MGMTPLAN", new object[] {
                        case_no,
                        hist_examno,
                        Err}, this.Get_emr_REF_CLINDIS_MGMTPLANOperationCompleted, userState);
        }
        
        private void OnGet_emr_REF_CLINDIS_MGMTPLANOperationCompleted(object arg) {
            if ((this.Get_emr_REF_CLINDIS_MGMTPLANCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_REF_CLINDIS_MGMTPLANCompleted(this, new Get_emr_REF_CLINDIS_MGMTPLANCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AttendanceCounselling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AttendanceCounselling(string case_no, int hist_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_AttendanceCounselling", new object[] {
                        case_no,
                        hist_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AttendanceCounsellingAsync(string case_no, int hist_examno, string Err) {
            this.Get_emr_AttendanceCounsellingAsync(case_no, hist_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AttendanceCounsellingAsync(string case_no, int hist_examno, string Err, object userState) {
            if ((this.Get_emr_AttendanceCounsellingOperationCompleted == null)) {
                this.Get_emr_AttendanceCounsellingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AttendanceCounsellingOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AttendanceCounselling", new object[] {
                        case_no,
                        hist_examno,
                        Err}, this.Get_emr_AttendanceCounsellingOperationCompleted, userState);
        }
        
        private void OnGet_emr_AttendanceCounsellingOperationCompleted(object arg) {
            if ((this.Get_emr_AttendanceCounsellingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AttendanceCounsellingCompleted(this, new Get_emr_AttendanceCounsellingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_ToabccoCessationCounselling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_ToabccoCessationCounselling(string case_no, int hist_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_ToabccoCessationCounselling", new object[] {
                        case_no,
                        hist_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ToabccoCessationCounsellingAsync(string case_no, int hist_examno, string Err) {
            this.Get_emr_ToabccoCessationCounsellingAsync(case_no, hist_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ToabccoCessationCounsellingAsync(string case_no, int hist_examno, string Err, object userState) {
            if ((this.Get_emr_ToabccoCessationCounsellingOperationCompleted == null)) {
                this.Get_emr_ToabccoCessationCounsellingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ToabccoCessationCounsellingOperationCompleted);
            }
            this.InvokeAsync("Get_emr_ToabccoCessationCounselling", new object[] {
                        case_no,
                        hist_examno,
                        Err}, this.Get_emr_ToabccoCessationCounsellingOperationCompleted, userState);
        }
        
        private void OnGet_emr_ToabccoCessationCounsellingOperationCompleted(object arg) {
            if ((this.Get_emr_ToabccoCessationCounsellingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ToabccoCessationCounsellingCompleted(this, new Get_emr_ToabccoCessationCounsellingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_RemarksDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_RemarksDetails(string case_no, int histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_RemarksDetails", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_RemarksDetailsAsync(string case_no, int histexam_no, string Err) {
            this.Get_emr_RemarksDetailsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_RemarksDetailsAsync(string case_no, int histexam_no, string Err, object userState) {
            if ((this.Get_emr_RemarksDetailsOperationCompleted == null)) {
                this.Get_emr_RemarksDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_RemarksDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_RemarksDetails", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_RemarksDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_RemarksDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_RemarksDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_RemarksDetailsCompleted(this, new Get_emr_RemarksDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AddendumDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AddendumDetails(string case_no, int histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_AddendumDetails", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AddendumDetailsAsync(string case_no, int histexam_no, string Err) {
            this.Get_emr_AddendumDetailsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AddendumDetailsAsync(string case_no, int histexam_no, string Err, object userState) {
            if ((this.Get_emr_AddendumDetailsOperationCompleted == null)) {
                this.Get_emr_AddendumDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AddendumDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AddendumDetails", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_AddendumDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_AddendumDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_AddendumDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AddendumDetailsCompleted(this, new Get_emr_AddendumDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_PAE_No_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_PAE_No_List(string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_PAE_No_List", new object[] {
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_PAE_No_ListAsync(string CASE_NO, string d_type, string Err) {
            this.Get_PAE_No_ListAsync(CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_PAE_No_ListAsync(string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_PAE_No_ListOperationCompleted == null)) {
                this.Get_PAE_No_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_PAE_No_ListOperationCompleted);
            }
            this.InvokeAsync("Get_PAE_No_List", new object[] {
                        CASE_NO,
                        d_type,
                        Err}, this.Get_PAE_No_ListOperationCompleted, userState);
        }
        
        private void OnGet_PAE_No_ListOperationCompleted(object arg) {
            if ((this.Get_PAE_No_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_PAE_No_ListCompleted(this, new Get_PAE_No_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_PAE_No_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_PAE_No_Details(string Pae_no, string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_PAE_No_Details", new object[] {
                        Pae_no,
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_PAE_No_DetailsAsync(string Pae_no, string CASE_NO, string d_type, string Err) {
            this.Get_PAE_No_DetailsAsync(Pae_no, CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_PAE_No_DetailsAsync(string Pae_no, string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_PAE_No_DetailsOperationCompleted == null)) {
                this.Get_PAE_No_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_PAE_No_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_PAE_No_Details", new object[] {
                        Pae_no,
                        CASE_NO,
                        d_type,
                        Err}, this.Get_PAE_No_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_PAE_No_DetailsOperationCompleted(object arg) {
            if ((this.Get_PAE_No_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_PAE_No_DetailsCompleted(this, new Get_PAE_No_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Eval_Anaesthetist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Eval_Anaesthetist(string EMPCODE, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_Eval_Anaesthetist", new object[] {
                        EMPCODE,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Eval_AnaesthetistAsync(string EMPCODE, string d_type, string Err) {
            this.Get_Eval_AnaesthetistAsync(EMPCODE, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_Eval_AnaesthetistAsync(string EMPCODE, string d_type, string Err, object userState) {
            if ((this.Get_Eval_AnaesthetistOperationCompleted == null)) {
                this.Get_Eval_AnaesthetistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Eval_AnaesthetistOperationCompleted);
            }
            this.InvokeAsync("Get_Eval_Anaesthetist", new object[] {
                        EMPCODE,
                        d_type,
                        Err}, this.Get_Eval_AnaesthetistOperationCompleted, userState);
        }
        
        private void OnGet_Eval_AnaesthetistOperationCompleted(object arg) {
            if ((this.Get_Eval_AnaesthetistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Eval_AnaesthetistCompleted(this, new Get_Eval_AnaesthetistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Pae_Examination", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Pae_Examination(string Pae_no, string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_Pae_Examination", new object[] {
                        Pae_no,
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Pae_ExaminationAsync(string Pae_no, string CASE_NO, string d_type, string Err) {
            this.Get_Pae_ExaminationAsync(Pae_no, CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_Pae_ExaminationAsync(string Pae_no, string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_Pae_ExaminationOperationCompleted == null)) {
                this.Get_Pae_ExaminationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Pae_ExaminationOperationCompleted);
            }
            this.InvokeAsync("Get_Pae_Examination", new object[] {
                        Pae_no,
                        CASE_NO,
                        d_type,
                        Err}, this.Get_Pae_ExaminationOperationCompleted, userState);
        }
        
        private void OnGet_Pae_ExaminationOperationCompleted(object arg) {
            if ((this.Get_Pae_ExaminationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Pae_ExaminationCompleted(this, new Get_Pae_ExaminationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_otadvice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_otadvice(string Pae_no, string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_otadvice", new object[] {
                        Pae_no,
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_otadviceAsync(string Pae_no, string CASE_NO, string d_type, string Err) {
            this.Get_otadviceAsync(Pae_no, CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_otadviceAsync(string Pae_no, string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_otadviceOperationCompleted == null)) {
                this.Get_otadviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_otadviceOperationCompleted);
            }
            this.InvokeAsync("Get_otadvice", new object[] {
                        Pae_no,
                        CASE_NO,
                        d_type,
                        Err}, this.Get_otadviceOperationCompleted, userState);
        }
        
        private void OnGet_otadviceOperationCompleted(object arg) {
            if ((this.Get_otadviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_otadviceCompleted(this, new Get_otadviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Anesthesia_ProcNo_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Anesthesia_ProcNo_List(string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_Anesthesia_ProcNo_List", new object[] {
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Anesthesia_ProcNo_ListAsync(string CASE_NO, string d_type, string Err) {
            this.Get_Anesthesia_ProcNo_ListAsync(CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_Anesthesia_ProcNo_ListAsync(string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_Anesthesia_ProcNo_ListOperationCompleted == null)) {
                this.Get_Anesthesia_ProcNo_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Anesthesia_ProcNo_ListOperationCompleted);
            }
            this.InvokeAsync("Get_Anesthesia_ProcNo_List", new object[] {
                        CASE_NO,
                        d_type,
                        Err}, this.Get_Anesthesia_ProcNo_ListOperationCompleted, userState);
        }
        
        private void OnGet_Anesthesia_ProcNo_ListOperationCompleted(object arg) {
            if ((this.Get_Anesthesia_ProcNo_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Anesthesia_ProcNo_ListCompleted(this, new Get_Anesthesia_ProcNo_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Anesthesia_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Anesthesia_Details(string ane_no, string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_Anesthesia_Details", new object[] {
                        ane_no,
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Anesthesia_DetailsAsync(string ane_no, string CASE_NO, string d_type, string Err) {
            this.Get_Anesthesia_DetailsAsync(ane_no, CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_Anesthesia_DetailsAsync(string ane_no, string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_Anesthesia_DetailsOperationCompleted == null)) {
                this.Get_Anesthesia_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Anesthesia_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_Anesthesia_Details", new object[] {
                        ane_no,
                        CASE_NO,
                        d_type,
                        Err}, this.Get_Anesthesia_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_Anesthesia_DetailsOperationCompleted(object arg) {
            if ((this.Get_Anesthesia_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Anesthesia_DetailsCompleted(this, new Get_Anesthesia_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Ane_Patient_admit_Dtl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Ane_Patient_admit_Dtl(string CASE_NO, string ane_date, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_Ane_Patient_admit_Dtl", new object[] {
                        CASE_NO,
                        ane_date,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Ane_Patient_admit_DtlAsync(string CASE_NO, string ane_date, string d_type, string Err) {
            this.Get_Ane_Patient_admit_DtlAsync(CASE_NO, ane_date, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_Ane_Patient_admit_DtlAsync(string CASE_NO, string ane_date, string d_type, string Err, object userState) {
            if ((this.Get_Ane_Patient_admit_DtlOperationCompleted == null)) {
                this.Get_Ane_Patient_admit_DtlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Ane_Patient_admit_DtlOperationCompleted);
            }
            this.InvokeAsync("Get_Ane_Patient_admit_Dtl", new object[] {
                        CASE_NO,
                        ane_date,
                        d_type,
                        Err}, this.Get_Ane_Patient_admit_DtlOperationCompleted, userState);
        }
        
        private void OnGet_Ane_Patient_admit_DtlOperationCompleted(object arg) {
            if ((this.Get_Ane_Patient_admit_DtlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Ane_Patient_admit_DtlCompleted(this, new Get_Ane_Patient_admit_DtlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Surgical_ProcNo_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Surgical_ProcNo_List(string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_Surgical_ProcNo_List", new object[] {
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Surgical_ProcNo_ListAsync(string CASE_NO, string d_type, string Err) {
            this.Get_Surgical_ProcNo_ListAsync(CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_Surgical_ProcNo_ListAsync(string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_Surgical_ProcNo_ListOperationCompleted == null)) {
                this.Get_Surgical_ProcNo_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Surgical_ProcNo_ListOperationCompleted);
            }
            this.InvokeAsync("Get_Surgical_ProcNo_List", new object[] {
                        CASE_NO,
                        d_type,
                        Err}, this.Get_Surgical_ProcNo_ListOperationCompleted, userState);
        }
        
        private void OnGet_Surgical_ProcNo_ListOperationCompleted(object arg) {
            if ((this.Get_Surgical_ProcNo_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Surgical_ProcNo_ListCompleted(this, new Get_Surgical_ProcNo_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Other_Surgical_ProcNo_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Other_Surgical_ProcNo_List(string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_Other_Surgical_ProcNo_List", new object[] {
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Other_Surgical_ProcNo_ListAsync(string CASE_NO, string d_type, string Err) {
            this.Get_Other_Surgical_ProcNo_ListAsync(CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_Other_Surgical_ProcNo_ListAsync(string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_Other_Surgical_ProcNo_ListOperationCompleted == null)) {
                this.Get_Other_Surgical_ProcNo_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Other_Surgical_ProcNo_ListOperationCompleted);
            }
            this.InvokeAsync("Get_Other_Surgical_ProcNo_List", new object[] {
                        CASE_NO,
                        d_type,
                        Err}, this.Get_Other_Surgical_ProcNo_ListOperationCompleted, userState);
        }
        
        private void OnGet_Other_Surgical_ProcNo_ListOperationCompleted(object arg) {
            if ((this.Get_Other_Surgical_ProcNo_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Other_Surgical_ProcNo_ListCompleted(this, new Get_Other_Surgical_ProcNo_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Surgical_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Surgical_Details(string Surg_No, string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_Surgical_Details", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Surgical_DetailsAsync(string Surg_No, string CASE_NO, string d_type, string Err) {
            this.Get_Surgical_DetailsAsync(Surg_No, CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_Surgical_DetailsAsync(string Surg_No, string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_Surgical_DetailsOperationCompleted == null)) {
                this.Get_Surgical_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Surgical_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_Surgical_Details", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err}, this.Get_Surgical_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_Surgical_DetailsOperationCompleted(object arg) {
            if ((this.Get_Surgical_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Surgical_DetailsCompleted(this, new Get_Surgical_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Other_Surgical_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Other_Surgical_Details(string Surg_No, string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_Other_Surgical_Details", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Other_Surgical_DetailsAsync(string Surg_No, string CASE_NO, string d_type, string Err) {
            this.Get_Other_Surgical_DetailsAsync(Surg_No, CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_Other_Surgical_DetailsAsync(string Surg_No, string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_Other_Surgical_DetailsOperationCompleted == null)) {
                this.Get_Other_Surgical_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Other_Surgical_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_Other_Surgical_Details", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err}, this.Get_Other_Surgical_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_Other_Surgical_DetailsOperationCompleted(object arg) {
            if ((this.Get_Other_Surgical_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Other_Surgical_DetailsCompleted(this, new Get_Other_Surgical_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_AnesthProcNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_AnesthProcNo(string Surg_No, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_AnesthProcNo", new object[] {
                        Surg_No,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_AnesthProcNoAsync(string Surg_No, string d_type, string Err) {
            this.Get_AnesthProcNoAsync(Surg_No, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_AnesthProcNoAsync(string Surg_No, string d_type, string Err, object userState) {
            if ((this.Get_AnesthProcNoOperationCompleted == null)) {
                this.Get_AnesthProcNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_AnesthProcNoOperationCompleted);
            }
            this.InvokeAsync("Get_AnesthProcNo", new object[] {
                        Surg_No,
                        d_type,
                        Err}, this.Get_AnesthProcNoOperationCompleted, userState);
        }
        
        private void OnGet_AnesthProcNoOperationCompleted(object arg) {
            if ((this.Get_AnesthProcNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_AnesthProcNoCompleted(this, new Get_AnesthProcNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OTImage_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_OTImage_Detail(string Surg_No, string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_OTImage_Detail", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_OTImage_DetailAsync(string Surg_No, string CASE_NO, string d_type, string Err) {
            this.Get_OTImage_DetailAsync(Surg_No, CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_OTImage_DetailAsync(string Surg_No, string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_OTImage_DetailOperationCompleted == null)) {
                this.Get_OTImage_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_OTImage_DetailOperationCompleted);
            }
            this.InvokeAsync("Get_OTImage_Detail", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err}, this.Get_OTImage_DetailOperationCompleted, userState);
        }
        
        private void OnGet_OTImage_DetailOperationCompleted(object arg) {
            if ((this.Get_OTImage_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_OTImage_DetailCompleted(this, new Get_OTImage_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OTTINOPFND_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_OTTINOPFND_Detail(string Surg_No, string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_OTTINOPFND_Detail", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_OTTINOPFND_DetailAsync(string Surg_No, string CASE_NO, string d_type, string Err) {
            this.Get_OTTINOPFND_DetailAsync(Surg_No, CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_OTTINOPFND_DetailAsync(string Surg_No, string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_OTTINOPFND_DetailOperationCompleted == null)) {
                this.Get_OTTINOPFND_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_OTTINOPFND_DetailOperationCompleted);
            }
            this.InvokeAsync("Get_OTTINOPFND_Detail", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err}, this.Get_OTTINOPFND_DetailOperationCompleted, userState);
        }
        
        private void OnGet_OTTINOPFND_DetailOperationCompleted(object arg) {
            if ((this.Get_OTTINOPFND_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_OTTINOPFND_DetailCompleted(this, new Get_OTTINOPFND_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RECON_SURGERY_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_RECON_SURGERY_Details(string Surg_No, string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_RECON_SURGERY_Details", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RECON_SURGERY_DetailsAsync(string Surg_No, string CASE_NO, string d_type, string Err) {
            this.Get_RECON_SURGERY_DetailsAsync(Surg_No, CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_RECON_SURGERY_DetailsAsync(string Surg_No, string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_RECON_SURGERY_DetailsOperationCompleted == null)) {
                this.Get_RECON_SURGERY_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RECON_SURGERY_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_RECON_SURGERY_Details", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err}, this.Get_RECON_SURGERY_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_RECON_SURGERY_DetailsOperationCompleted(object arg) {
            if ((this.Get_RECON_SURGERY_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RECON_SURGERY_DetailsCompleted(this, new Get_RECON_SURGERY_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Procedure_SURGERY_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Procedure_SURGERY_Details(string Surg_No, string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_Procedure_SURGERY_Details", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Procedure_SURGERY_DetailsAsync(string Surg_No, string CASE_NO, string d_type, string Err) {
            this.Get_Procedure_SURGERY_DetailsAsync(Surg_No, CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_Procedure_SURGERY_DetailsAsync(string Surg_No, string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_Procedure_SURGERY_DetailsOperationCompleted == null)) {
                this.Get_Procedure_SURGERY_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Procedure_SURGERY_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_Procedure_SURGERY_Details", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err}, this.Get_Procedure_SURGERY_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_Procedure_SURGERY_DetailsOperationCompleted(object arg) {
            if ((this.Get_Procedure_SURGERY_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Procedure_SURGERY_DetailsCompleted(this, new Get_Procedure_SURGERY_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_FindSubsite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_FindSubsite(string SiteCode, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_FindSubsite", new object[] {
                        SiteCode,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_FindSubsiteAsync(string SiteCode, string d_type, string Err) {
            this.Get_FindSubsiteAsync(SiteCode, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_FindSubsiteAsync(string SiteCode, string d_type, string Err, object userState) {
            if ((this.Get_FindSubsiteOperationCompleted == null)) {
                this.Get_FindSubsiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_FindSubsiteOperationCompleted);
            }
            this.InvokeAsync("Get_FindSubsite", new object[] {
                        SiteCode,
                        d_type,
                        Err}, this.Get_FindSubsiteOperationCompleted, userState);
        }
        
        private void OnGet_FindSubsiteOperationCompleted(object arg) {
            if ((this.Get_FindSubsiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_FindSubsiteCompleted(this, new Get_FindSubsiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_FindDefect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_FindDefect(string DefectCode, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_FindDefect", new object[] {
                        DefectCode,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_FindDefectAsync(string DefectCode, string d_type, string Err) {
            this.Get_FindDefectAsync(DefectCode, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_FindDefectAsync(string DefectCode, string d_type, string Err, object userState) {
            if ((this.Get_FindDefectOperationCompleted == null)) {
                this.Get_FindDefectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_FindDefectOperationCompleted);
            }
            this.InvokeAsync("Get_FindDefect", new object[] {
                        DefectCode,
                        d_type,
                        Err}, this.Get_FindDefectOperationCompleted, userState);
        }
        
        private void OnGet_FindDefectOperationCompleted(object arg) {
            if ((this.Get_FindDefectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_FindDefectCompleted(this, new Get_FindDefectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ReProcedures", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_ReProcedures(string Surg_No, string CASE_NO, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_ReProcedures", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ReProceduresAsync(string Surg_No, string CASE_NO, string d_type, string Err) {
            this.Get_ReProceduresAsync(Surg_No, CASE_NO, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_ReProceduresAsync(string Surg_No, string CASE_NO, string d_type, string Err, object userState) {
            if ((this.Get_ReProceduresOperationCompleted == null)) {
                this.Get_ReProceduresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ReProceduresOperationCompleted);
            }
            this.InvokeAsync("Get_ReProcedures", new object[] {
                        Surg_No,
                        CASE_NO,
                        d_type,
                        Err}, this.Get_ReProceduresOperationCompleted, userState);
        }
        
        private void OnGet_ReProceduresOperationCompleted(object arg) {
            if ((this.Get_ReProceduresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ReProceduresCompleted(this, new Get_ReProceduresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ROIS_CourseNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_ROIS_CourseNo(string CASE_NO, ref string Err) {
            object[] results = this.Invoke("Get_ROIS_CourseNo", new object[] {
                        CASE_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ROIS_CourseNoAsync(string CASE_NO, string Err) {
            this.Get_ROIS_CourseNoAsync(CASE_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_ROIS_CourseNoAsync(string CASE_NO, string Err, object userState) {
            if ((this.Get_ROIS_CourseNoOperationCompleted == null)) {
                this.Get_ROIS_CourseNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ROIS_CourseNoOperationCompleted);
            }
            this.InvokeAsync("Get_ROIS_CourseNo", new object[] {
                        CASE_NO,
                        Err}, this.Get_ROIS_CourseNoOperationCompleted, userState);
        }
        
        private void OnGet_ROIS_CourseNoOperationCompleted(object arg) {
            if ((this.Get_ROIS_CourseNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ROIS_CourseNoCompleted(this, new Get_ROIS_CourseNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ROIS_PhaseNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_ROIS_PhaseNo(string CASE_NO, string Course_No, ref string Err) {
            object[] results = this.Invoke("Get_ROIS_PhaseNo", new object[] {
                        CASE_NO,
                        Course_No,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ROIS_PhaseNoAsync(string CASE_NO, string Course_No, string Err) {
            this.Get_ROIS_PhaseNoAsync(CASE_NO, Course_No, Err, null);
        }
        
        /// <remarks/>
        public void Get_ROIS_PhaseNoAsync(string CASE_NO, string Course_No, string Err, object userState) {
            if ((this.Get_ROIS_PhaseNoOperationCompleted == null)) {
                this.Get_ROIS_PhaseNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ROIS_PhaseNoOperationCompleted);
            }
            this.InvokeAsync("Get_ROIS_PhaseNo", new object[] {
                        CASE_NO,
                        Course_No,
                        Err}, this.Get_ROIS_PhaseNoOperationCompleted, userState);
        }
        
        private void OnGet_ROIS_PhaseNoOperationCompleted(object arg) {
            if ((this.Get_ROIS_PhaseNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ROIS_PhaseNoCompleted(this, new Get_ROIS_PhaseNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ROIS_PlanNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_ROIS_PlanNo(string CASE_NO, string Course_No, string PhaseNo, ref string Err) {
            object[] results = this.Invoke("Get_ROIS_PlanNo", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ROIS_PlanNoAsync(string CASE_NO, string Course_No, string PhaseNo, string Err) {
            this.Get_ROIS_PlanNoAsync(CASE_NO, Course_No, PhaseNo, Err, null);
        }
        
        /// <remarks/>
        public void Get_ROIS_PlanNoAsync(string CASE_NO, string Course_No, string PhaseNo, string Err, object userState) {
            if ((this.Get_ROIS_PlanNoOperationCompleted == null)) {
                this.Get_ROIS_PlanNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ROIS_PlanNoOperationCompleted);
            }
            this.InvokeAsync("Get_ROIS_PlanNo", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Err}, this.Get_ROIS_PlanNoOperationCompleted, userState);
        }
        
        private void OnGet_ROIS_PlanNoOperationCompleted(object arg) {
            if ((this.Get_ROIS_PlanNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ROIS_PlanNoCompleted(this, new Get_ROIS_PlanNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Plan_ROIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Plan_ROIS(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_Plan_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Plan_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_Plan_ROISAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Plan_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_Plan_ROISOperationCompleted == null)) {
                this.Get_Plan_ROISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Plan_ROISOperationCompleted);
            }
            this.InvokeAsync("Get_Plan_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_Plan_ROISOperationCompleted, userState);
        }
        
        private void OnGet_Plan_ROISOperationCompleted(object arg) {
            if ((this.Get_Plan_ROISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Plan_ROISCompleted(this, new Get_Plan_ROISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_TeleTheradet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_TeleTheradet(string DOC_NAME, string UNIT_NAME, ref string Err) {
            object[] results = this.Invoke("Get_TeleTheradet", new object[] {
                        DOC_NAME,
                        UNIT_NAME,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_TeleTheradetAsync(string DOC_NAME, string UNIT_NAME, string Err) {
            this.Get_TeleTheradetAsync(DOC_NAME, UNIT_NAME, Err, null);
        }
        
        /// <remarks/>
        public void Get_TeleTheradetAsync(string DOC_NAME, string UNIT_NAME, string Err, object userState) {
            if ((this.Get_TeleTheradetOperationCompleted == null)) {
                this.Get_TeleTheradetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_TeleTheradetOperationCompleted);
            }
            this.InvokeAsync("Get_TeleTheradet", new object[] {
                        DOC_NAME,
                        UNIT_NAME,
                        Err}, this.Get_TeleTheradetOperationCompleted, userState);
        }
        
        private void OnGet_TeleTheradetOperationCompleted(object arg) {
            if ((this.Get_TeleTheradetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_TeleTheradetCompleted(this, new Get_TeleTheradetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Unit_Name", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Unit_Name(string DMGCODE, ref string Err) {
            object[] results = this.Invoke("Get_Unit_Name", new object[] {
                        DMGCODE,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Unit_NameAsync(string DMGCODE, string Err) {
            this.Get_Unit_NameAsync(DMGCODE, Err, null);
        }
        
        /// <remarks/>
        public void Get_Unit_NameAsync(string DMGCODE, string Err, object userState) {
            if ((this.Get_Unit_NameOperationCompleted == null)) {
                this.Get_Unit_NameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Unit_NameOperationCompleted);
            }
            this.InvokeAsync("Get_Unit_Name", new object[] {
                        DMGCODE,
                        Err}, this.Get_Unit_NameOperationCompleted, userState);
        }
        
        private void OnGet_Unit_NameOperationCompleted(object arg) {
            if ((this.Get_Unit_NameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Unit_NameCompleted(this, new Get_Unit_NameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Unit_Name2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Unit_Name2(string UNIT_NO, ref string Err) {
            object[] results = this.Invoke("Get_Unit_Name2", new object[] {
                        UNIT_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Unit_Name2Async(string UNIT_NO, string Err) {
            this.Get_Unit_Name2Async(UNIT_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_Unit_Name2Async(string UNIT_NO, string Err, object userState) {
            if ((this.Get_Unit_Name2OperationCompleted == null)) {
                this.Get_Unit_Name2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Unit_Name2OperationCompleted);
            }
            this.InvokeAsync("Get_Unit_Name2", new object[] {
                        UNIT_NO,
                        Err}, this.Get_Unit_Name2OperationCompleted, userState);
        }
        
        private void OnGet_Unit_Name2OperationCompleted(object arg) {
            if ((this.Get_Unit_Name2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Unit_Name2Completed(this, new Get_Unit_Name2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Plan1_ROIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Plan1_ROIS(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_Plan1_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Plan1_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_Plan1_ROISAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Plan1_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_Plan1_ROISOperationCompleted == null)) {
                this.Get_Plan1_ROISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Plan1_ROISOperationCompleted);
            }
            this.InvokeAsync("Get_Plan1_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_Plan1_ROISOperationCompleted, userState);
        }
        
        private void OnGet_Plan1_ROISOperationCompleted(object arg) {
            if ((this.Get_Plan1_ROISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Plan1_ROISCompleted(this, new Get_Plan1_ROISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Energy_ROIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Energy_ROIS(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_Energy_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Energy_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_Energy_ROISAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Energy_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_Energy_ROISOperationCompleted == null)) {
                this.Get_Energy_ROISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Energy_ROISOperationCompleted);
            }
            this.InvokeAsync("Get_Energy_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_Energy_ROISOperationCompleted, userState);
        }
        
        private void OnGet_Energy_ROISOperationCompleted(object arg) {
            if ((this.Get_Energy_ROISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Energy_ROISCompleted(this, new Get_Energy_ROISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Energy1_ROIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Energy1_ROIS(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_Energy1_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Energy1_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_Energy1_ROISAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Energy1_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_Energy1_ROISOperationCompleted == null)) {
                this.Get_Energy1_ROISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Energy1_ROISOperationCompleted);
            }
            this.InvokeAsync("Get_Energy1_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_Energy1_ROISOperationCompleted, userState);
        }
        
        private void OnGet_Energy1_ROISOperationCompleted(object arg) {
            if ((this.Get_Energy1_ROISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Energy1_ROISCompleted(this, new Get_Energy1_ROISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Beam_ROIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Beam_ROIS(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_Beam_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Beam_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_Beam_ROISAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Beam_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_Beam_ROISOperationCompleted == null)) {
                this.Get_Beam_ROISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Beam_ROISOperationCompleted);
            }
            this.InvokeAsync("Get_Beam_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_Beam_ROISOperationCompleted, userState);
        }
        
        private void OnGet_Beam_ROISOperationCompleted(object arg) {
            if ((this.Get_Beam_ROISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Beam_ROISCompleted(this, new Get_Beam_ROISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Beam1_ROIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Beam1_ROIS(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_Beam1_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Beam1_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_Beam1_ROISAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Beam1_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_Beam1_ROISOperationCompleted == null)) {
                this.Get_Beam1_ROISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Beam1_ROISOperationCompleted);
            }
            this.InvokeAsync("Get_Beam1_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_Beam1_ROISOperationCompleted, userState);
        }
        
        private void OnGet_Beam1_ROISOperationCompleted(object arg) {
            if ((this.Get_Beam1_ROISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Beam1_ROISCompleted(this, new Get_Beam1_ROISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BeamWed_ROIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BeamWed_ROIS(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_BeamWed_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BeamWed_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_BeamWed_ROISAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_BeamWed_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_BeamWed_ROISOperationCompleted == null)) {
                this.Get_BeamWed_ROISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BeamWed_ROISOperationCompleted);
            }
            this.InvokeAsync("Get_BeamWed_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_BeamWed_ROISOperationCompleted, userState);
        }
        
        private void OnGet_BeamWed_ROISOperationCompleted(object arg) {
            if ((this.Get_BeamWed_ROISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BeamWed_ROISCompleted(this, new Get_BeamWed_ROISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BeamWed1_ROIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BeamWed1_ROIS(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_BeamWed1_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BeamWed1_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_BeamWed1_ROISAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_BeamWed1_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_BeamWed1_ROISOperationCompleted == null)) {
                this.Get_BeamWed1_ROISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BeamWed1_ROISOperationCompleted);
            }
            this.InvokeAsync("Get_BeamWed1_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_BeamWed1_ROISOperationCompleted, userState);
        }
        
        private void OnGet_BeamWed1_ROISOperationCompleted(object arg) {
            if ((this.Get_BeamWed1_ROISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BeamWed1_ROISCompleted(this, new Get_BeamWed1_ROISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BeamPlan_ROIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BeamPlan_ROIS(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_BeamPlan_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BeamPlan_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_BeamPlan_ROISAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_BeamPlan_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_BeamPlan_ROISOperationCompleted == null)) {
                this.Get_BeamPlan_ROISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BeamPlan_ROISOperationCompleted);
            }
            this.InvokeAsync("Get_BeamPlan_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_BeamPlan_ROISOperationCompleted, userState);
        }
        
        private void OnGet_BeamPlan_ROISOperationCompleted(object arg) {
            if ((this.Get_BeamPlan_ROISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BeamPlan_ROISCompleted(this, new Get_BeamPlan_ROISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BeamPlan1_ROIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BeamPlan1_ROIS(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_BeamPlan1_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BeamPlan1_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_BeamPlan1_ROISAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_BeamPlan1_ROISAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_BeamPlan1_ROISOperationCompleted == null)) {
                this.Get_BeamPlan1_ROISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BeamPlan1_ROISOperationCompleted);
            }
            this.InvokeAsync("Get_BeamPlan1_ROIS", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_BeamPlan1_ROISOperationCompleted, userState);
        }
        
        private void OnGet_BeamPlan1_ROISOperationCompleted(object arg) {
            if ((this.Get_BeamPlan1_ROISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BeamPlan1_ROISCompleted(this, new Get_BeamPlan1_ROISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ROTPRDOS_M", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_ROTPRDOS_M(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_ROTPRDOS_M", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ROTPRDOS_MAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_ROTPRDOS_MAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_ROTPRDOS_MAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_ROTPRDOS_MOperationCompleted == null)) {
                this.Get_ROTPRDOS_MOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ROTPRDOS_MOperationCompleted);
            }
            this.InvokeAsync("Get_ROTPRDOS_M", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_ROTPRDOS_MOperationCompleted, userState);
        }
        
        private void OnGet_ROTPRDOS_MOperationCompleted(object arg) {
            if ((this.Get_ROTPRDOS_MCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ROTPRDOS_MCompleted(this, new Get_ROTPRDOS_MCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ROTPDOS_M1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_ROTPDOS_M1(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_ROTPDOS_M1", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ROTPDOS_M1Async(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_ROTPDOS_M1Async(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_ROTPDOS_M1Async(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_ROTPDOS_M1OperationCompleted == null)) {
                this.Get_ROTPDOS_M1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ROTPDOS_M1OperationCompleted);
            }
            this.InvokeAsync("Get_ROTPDOS_M1", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_ROTPDOS_M1OperationCompleted, userState);
        }
        
        private void OnGet_ROTPDOS_M1OperationCompleted(object arg) {
            if ((this.Get_ROTPDOS_M1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ROTPDOS_M1Completed(this, new Get_ROTPDOS_M1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ROTPRDOS_D", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_ROTPRDOS_D(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, ref string Err) {
            object[] results = this.Invoke("Get_ROTPRDOS_D", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ROTPRDOS_DAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err) {
            this.Get_ROTPRDOS_DAsync(CASE_NO, Course_No, PhaseNo, Plan_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_ROTPRDOS_DAsync(string CASE_NO, int Course_No, string PhaseNo, int Plan_no, string Err, object userState) {
            if ((this.Get_ROTPRDOS_DOperationCompleted == null)) {
                this.Get_ROTPRDOS_DOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ROTPRDOS_DOperationCompleted);
            }
            this.InvokeAsync("Get_ROTPRDOS_D", new object[] {
                        CASE_NO,
                        Course_No,
                        PhaseNo,
                        Plan_no,
                        Err}, this.Get_ROTPRDOS_DOperationCompleted, userState);
        }
        
        private void OnGet_ROTPRDOS_DOperationCompleted(object arg) {
            if ((this.Get_ROTPRDOS_DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ROTPRDOS_DCompleted(this, new Get_ROTPRDOS_DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyNumber_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyNumber_List(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_BrachyNumber_List", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyNumber_ListAsync(string case_no, string Err) {
            this.Get_BrachyNumber_ListAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyNumber_ListAsync(string case_no, string Err, object userState) {
            if ((this.Get_BrachyNumber_ListOperationCompleted == null)) {
                this.Get_BrachyNumber_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyNumber_ListOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyNumber_List", new object[] {
                        case_no,
                        Err}, this.Get_BrachyNumber_ListOperationCompleted, userState);
        }
        
        private void OnGet_BrachyNumber_ListOperationCompleted(object arg) {
            if ((this.Get_BrachyNumber_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyNumber_ListCompleted(this, new Get_BrachyNumber_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyCountIntraCavitary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyCountIntraCavitary(string CASE_NO, string BrachyNo, ref string Err) {
            object[] results = this.Invoke("Get_BrachyCountIntraCavitary", new object[] {
                        CASE_NO,
                        BrachyNo,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyCountIntraCavitaryAsync(string CASE_NO, string BrachyNo, string Err) {
            this.Get_BrachyCountIntraCavitaryAsync(CASE_NO, BrachyNo, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyCountIntraCavitaryAsync(string CASE_NO, string BrachyNo, string Err, object userState) {
            if ((this.Get_BrachyCountIntraCavitaryOperationCompleted == null)) {
                this.Get_BrachyCountIntraCavitaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyCountIntraCavitaryOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyCountIntraCavitary", new object[] {
                        CASE_NO,
                        BrachyNo,
                        Err}, this.Get_BrachyCountIntraCavitaryOperationCompleted, userState);
        }
        
        private void OnGet_BrachyCountIntraCavitaryOperationCompleted(object arg) {
            if ((this.Get_BrachyCountIntraCavitaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyCountIntraCavitaryCompleted(this, new Get_BrachyCountIntraCavitaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_IntraCavitary_ROBTINTDET", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_IntraCavitary_ROBTINTDET(string CASE_NO, string BrachyNo, string app_no, ref string Err) {
            object[] results = this.Invoke("Get_IntraCavitary_ROBTINTDET", new object[] {
                        CASE_NO,
                        BrachyNo,
                        app_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_IntraCavitary_ROBTINTDETAsync(string CASE_NO, string BrachyNo, string app_no, string Err) {
            this.Get_IntraCavitary_ROBTINTDETAsync(CASE_NO, BrachyNo, app_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_IntraCavitary_ROBTINTDETAsync(string CASE_NO, string BrachyNo, string app_no, string Err, object userState) {
            if ((this.Get_IntraCavitary_ROBTINTDETOperationCompleted == null)) {
                this.Get_IntraCavitary_ROBTINTDETOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_IntraCavitary_ROBTINTDETOperationCompleted);
            }
            this.InvokeAsync("Get_IntraCavitary_ROBTINTDET", new object[] {
                        CASE_NO,
                        BrachyNo,
                        app_no,
                        Err}, this.Get_IntraCavitary_ROBTINTDETOperationCompleted, userState);
        }
        
        private void OnGet_IntraCavitary_ROBTINTDETOperationCompleted(object arg) {
            if ((this.Get_IntraCavitary_ROBTINTDETCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_IntraCavitary_ROBTINTDETCompleted(this, new Get_IntraCavitary_ROBTINTDETCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_IntraCavitary_ROBTINCPLN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_IntraCavitary_ROBTINCPLN(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, ref string Err) {
            object[] results = this.Invoke("Get_IntraCavitary_ROBTINCPLN", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_IntraCavitary_ROBTINCPLNAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err) {
            this.Get_IntraCavitary_ROBTINCPLNAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, PLAN_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_IntraCavitary_ROBTINCPLNAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err, object userState) {
            if ((this.Get_IntraCavitary_ROBTINCPLNOperationCompleted == null)) {
                this.Get_IntraCavitary_ROBTINCPLNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_IntraCavitary_ROBTINCPLNOperationCompleted);
            }
            this.InvokeAsync("Get_IntraCavitary_ROBTINCPLN", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err}, this.Get_IntraCavitary_ROBTINCPLNOperationCompleted, userState);
        }
        
        private void OnGet_IntraCavitary_ROBTINCPLNOperationCompleted(object arg) {
            if ((this.Get_IntraCavitary_ROBTINCPLNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_IntraCavitary_ROBTINCPLNCompleted(this, new Get_IntraCavitary_ROBTINCPLNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyIntraCavitary_SCHNO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyIntraCavitary_SCHNO(string CASE_NO, string reqno, ref string Err) {
            object[] results = this.Invoke("Get_BrachyIntraCavitary_SCHNO", new object[] {
                        CASE_NO,
                        reqno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_SCHNOAsync(string CASE_NO, string reqno, string Err) {
            this.Get_BrachyIntraCavitary_SCHNOAsync(CASE_NO, reqno, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_SCHNOAsync(string CASE_NO, string reqno, string Err, object userState) {
            if ((this.Get_BrachyIntraCavitary_SCHNOOperationCompleted == null)) {
                this.Get_BrachyIntraCavitary_SCHNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyIntraCavitary_SCHNOOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyIntraCavitary_SCHNO", new object[] {
                        CASE_NO,
                        reqno,
                        Err}, this.Get_BrachyIntraCavitary_SCHNOOperationCompleted, userState);
        }
        
        private void OnGet_BrachyIntraCavitary_SCHNOOperationCompleted(object arg) {
            if ((this.Get_BrachyIntraCavitary_SCHNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyIntraCavitary_SCHNOCompleted(this, new Get_BrachyIntraCavitary_SCHNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyIntraCavitary_OTTSRGRECN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyIntraCavitary_OTTSRGRECN(string CASE_NO, string schnum, ref string Err) {
            object[] results = this.Invoke("Get_BrachyIntraCavitary_OTTSRGRECN", new object[] {
                        CASE_NO,
                        schnum,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_OTTSRGRECNAsync(string CASE_NO, string schnum, string Err) {
            this.Get_BrachyIntraCavitary_OTTSRGRECNAsync(CASE_NO, schnum, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_OTTSRGRECNAsync(string CASE_NO, string schnum, string Err, object userState) {
            if ((this.Get_BrachyIntraCavitary_OTTSRGRECNOperationCompleted == null)) {
                this.Get_BrachyIntraCavitary_OTTSRGRECNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyIntraCavitary_OTTSRGRECNOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyIntraCavitary_OTTSRGRECN", new object[] {
                        CASE_NO,
                        schnum,
                        Err}, this.Get_BrachyIntraCavitary_OTTSRGRECNOperationCompleted, userState);
        }
        
        private void OnGet_BrachyIntraCavitary_OTTSRGRECNOperationCompleted(object arg) {
            if ((this.Get_BrachyIntraCavitary_OTTSRGRECNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyIntraCavitary_OTTSRGRECNCompleted(this, new Get_BrachyIntraCavitary_OTTSRGRECNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyIntraCavitary_REQN_TYPE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyIntraCavitary_REQN_TYPE(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, ref string Err) {
            object[] results = this.Invoke("Get_BrachyIntraCavitary_REQN_TYPE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        reqno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_REQN_TYPEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, string Err) {
            this.Get_BrachyIntraCavitary_REQN_TYPEAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, reqno, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_REQN_TYPEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, string Err, object userState) {
            if ((this.Get_BrachyIntraCavitary_REQN_TYPEOperationCompleted == null)) {
                this.Get_BrachyIntraCavitary_REQN_TYPEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyIntraCavitary_REQN_TYPEOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyIntraCavitary_REQN_TYPE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        reqno,
                        Err}, this.Get_BrachyIntraCavitary_REQN_TYPEOperationCompleted, userState);
        }
        
        private void OnGet_BrachyIntraCavitary_REQN_TYPEOperationCompleted(object arg) {
            if ((this.Get_BrachyIntraCavitary_REQN_TYPECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyIntraCavitary_REQN_TYPECompleted(this, new Get_BrachyIntraCavitary_REQN_TYPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyIntraCavitary_ROBTREQSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyIntraCavitary_ROBTREQSN(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, ref string Err) {
            object[] results = this.Invoke("Get_BrachyIntraCavitary_ROBTREQSN", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_ROBTREQSNAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string Err) {
            this.Get_BrachyIntraCavitary_ROBTREQSNAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_ROBTREQSNAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string Err, object userState) {
            if ((this.Get_BrachyIntraCavitary_ROBTREQSNOperationCompleted == null)) {
                this.Get_BrachyIntraCavitary_ROBTREQSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyIntraCavitary_ROBTREQSNOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyIntraCavitary_ROBTREQSN", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        Err}, this.Get_BrachyIntraCavitary_ROBTREQSNOperationCompleted, userState);
        }
        
        private void OnGet_BrachyIntraCavitary_ROBTREQSNOperationCompleted(object arg) {
            if ((this.Get_BrachyIntraCavitary_ROBTREQSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyIntraCavitary_ROBTREQSNCompleted(this, new Get_BrachyIntraCavitary_ROBTREQSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyIntraCavitary_ROBTOTNOTE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyIntraCavitary_ROBTOTNOTE(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, ref string Err) {
            object[] results = this.Invoke("Get_BrachyIntraCavitary_ROBTOTNOTE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_ROBTOTNOTEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string Err) {
            this.Get_BrachyIntraCavitary_ROBTOTNOTEAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_ROBTOTNOTEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string Err, object userState) {
            if ((this.Get_BrachyIntraCavitary_ROBTOTNOTEOperationCompleted == null)) {
                this.Get_BrachyIntraCavitary_ROBTOTNOTEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyIntraCavitary_ROBTOTNOTEOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyIntraCavitary_ROBTOTNOTE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        Err}, this.Get_BrachyIntraCavitary_ROBTOTNOTEOperationCompleted, userState);
        }
        
        private void OnGet_BrachyIntraCavitary_ROBTOTNOTEOperationCompleted(object arg) {
            if ((this.Get_BrachyIntraCavitary_ROBTOTNOTECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyIntraCavitary_ROBTOTNOTECompleted(this, new Get_BrachyIntraCavitary_ROBTOTNOTECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyIntraCavitary_ROBTINTDET", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyIntraCavitary_ROBTINTDET(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, ref string Err) {
            object[] results = this.Invoke("Get_BrachyIntraCavitary_ROBTINTDET", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_ROBTINTDETAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err) {
            this.Get_BrachyIntraCavitary_ROBTINTDETAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, PLAN_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyIntraCavitary_ROBTINTDETAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err, object userState) {
            if ((this.Get_BrachyIntraCavitary_ROBTINTDETOperationCompleted == null)) {
                this.Get_BrachyIntraCavitary_ROBTINTDETOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyIntraCavitary_ROBTINTDETOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyIntraCavitary_ROBTINTDET", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err}, this.Get_BrachyIntraCavitary_ROBTINTDETOperationCompleted, userState);
        }
        
        private void OnGet_BrachyIntraCavitary_ROBTINTDETOperationCompleted(object arg) {
            if ((this.Get_BrachyIntraCavitary_ROBTINTDETCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyIntraCavitary_ROBTINTDETCompleted(this, new Get_BrachyIntraCavitary_ROBTINTDETCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyCountInterstitial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyCountInterstitial(string CASE_NO, string BrachyNo, ref string Err) {
            object[] results = this.Invoke("Get_BrachyCountInterstitial", new object[] {
                        CASE_NO,
                        BrachyNo,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyCountInterstitialAsync(string CASE_NO, string BrachyNo, string Err) {
            this.Get_BrachyCountInterstitialAsync(CASE_NO, BrachyNo, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyCountInterstitialAsync(string CASE_NO, string BrachyNo, string Err, object userState) {
            if ((this.Get_BrachyCountInterstitialOperationCompleted == null)) {
                this.Get_BrachyCountInterstitialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyCountInterstitialOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyCountInterstitial", new object[] {
                        CASE_NO,
                        BrachyNo,
                        Err}, this.Get_BrachyCountInterstitialOperationCompleted, userState);
        }
        
        private void OnGet_BrachyCountInterstitialOperationCompleted(object arg) {
            if ((this.Get_BrachyCountInterstitialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyCountInterstitialCompleted(this, new Get_BrachyCountInterstitialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Interstitial_ROBTITSDLS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Interstitial_ROBTITSDLS(string CASE_NO, string BrachyNo, string app_no, ref string Err) {
            object[] results = this.Invoke("Get_Interstitial_ROBTITSDLS", new object[] {
                        CASE_NO,
                        BrachyNo,
                        app_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Interstitial_ROBTITSDLSAsync(string CASE_NO, string BrachyNo, string app_no, string Err) {
            this.Get_Interstitial_ROBTITSDLSAsync(CASE_NO, BrachyNo, app_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Interstitial_ROBTITSDLSAsync(string CASE_NO, string BrachyNo, string app_no, string Err, object userState) {
            if ((this.Get_Interstitial_ROBTITSDLSOperationCompleted == null)) {
                this.Get_Interstitial_ROBTITSDLSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Interstitial_ROBTITSDLSOperationCompleted);
            }
            this.InvokeAsync("Get_Interstitial_ROBTITSDLS", new object[] {
                        CASE_NO,
                        BrachyNo,
                        app_no,
                        Err}, this.Get_Interstitial_ROBTITSDLSOperationCompleted, userState);
        }
        
        private void OnGet_Interstitial_ROBTITSDLSOperationCompleted(object arg) {
            if ((this.Get_Interstitial_ROBTITSDLSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Interstitial_ROBTITSDLSCompleted(this, new Get_Interstitial_ROBTITSDLSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Interstitial_ROBTISPLN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Interstitial_ROBTISPLN(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, ref string Err) {
            object[] results = this.Invoke("Get_Interstitial_ROBTISPLN", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Interstitial_ROBTISPLNAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err) {
            this.Get_Interstitial_ROBTISPLNAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, PLAN_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_Interstitial_ROBTISPLNAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err, object userState) {
            if ((this.Get_Interstitial_ROBTISPLNOperationCompleted == null)) {
                this.Get_Interstitial_ROBTISPLNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Interstitial_ROBTISPLNOperationCompleted);
            }
            this.InvokeAsync("Get_Interstitial_ROBTISPLN", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err}, this.Get_Interstitial_ROBTISPLNOperationCompleted, userState);
        }
        
        private void OnGet_Interstitial_ROBTISPLNOperationCompleted(object arg) {
            if ((this.Get_Interstitial_ROBTISPLNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Interstitial_ROBTISPLNCompleted(this, new Get_Interstitial_ROBTISPLNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyInterstitial_SCHNO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyInterstitial_SCHNO(string CASE_NO, string reqno, ref string Err) {
            object[] results = this.Invoke("Get_BrachyInterstitial_SCHNO", new object[] {
                        CASE_NO,
                        reqno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_SCHNOAsync(string CASE_NO, string reqno, string Err) {
            this.Get_BrachyInterstitial_SCHNOAsync(CASE_NO, reqno, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_SCHNOAsync(string CASE_NO, string reqno, string Err, object userState) {
            if ((this.Get_BrachyInterstitial_SCHNOOperationCompleted == null)) {
                this.Get_BrachyInterstitial_SCHNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyInterstitial_SCHNOOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyInterstitial_SCHNO", new object[] {
                        CASE_NO,
                        reqno,
                        Err}, this.Get_BrachyInterstitial_SCHNOOperationCompleted, userState);
        }
        
        private void OnGet_BrachyInterstitial_SCHNOOperationCompleted(object arg) {
            if ((this.Get_BrachyInterstitial_SCHNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyInterstitial_SCHNOCompleted(this, new Get_BrachyInterstitial_SCHNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyInterstitial_OTTSRGRECN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyInterstitial_OTTSRGRECN(string CASE_NO, string schnum, ref string Err) {
            object[] results = this.Invoke("Get_BrachyInterstitial_OTTSRGRECN", new object[] {
                        CASE_NO,
                        schnum,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_OTTSRGRECNAsync(string CASE_NO, string schnum, string Err) {
            this.Get_BrachyInterstitial_OTTSRGRECNAsync(CASE_NO, schnum, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_OTTSRGRECNAsync(string CASE_NO, string schnum, string Err, object userState) {
            if ((this.Get_BrachyInterstitial_OTTSRGRECNOperationCompleted == null)) {
                this.Get_BrachyInterstitial_OTTSRGRECNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyInterstitial_OTTSRGRECNOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyInterstitial_OTTSRGRECN", new object[] {
                        CASE_NO,
                        schnum,
                        Err}, this.Get_BrachyInterstitial_OTTSRGRECNOperationCompleted, userState);
        }
        
        private void OnGet_BrachyInterstitial_OTTSRGRECNOperationCompleted(object arg) {
            if ((this.Get_BrachyInterstitial_OTTSRGRECNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyInterstitial_OTTSRGRECNCompleted(this, new Get_BrachyInterstitial_OTTSRGRECNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyInterstitial_REQN_TYPE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyInterstitial_REQN_TYPE(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, ref string Err) {
            object[] results = this.Invoke("Get_BrachyInterstitial_REQN_TYPE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        reqno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_REQN_TYPEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, string Err) {
            this.Get_BrachyInterstitial_REQN_TYPEAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, reqno, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_REQN_TYPEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, string Err, object userState) {
            if ((this.Get_BrachyInterstitial_REQN_TYPEOperationCompleted == null)) {
                this.Get_BrachyInterstitial_REQN_TYPEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyInterstitial_REQN_TYPEOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyInterstitial_REQN_TYPE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        reqno,
                        Err}, this.Get_BrachyInterstitial_REQN_TYPEOperationCompleted, userState);
        }
        
        private void OnGet_BrachyInterstitial_REQN_TYPEOperationCompleted(object arg) {
            if ((this.Get_BrachyInterstitial_REQN_TYPECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyInterstitial_REQN_TYPECompleted(this, new Get_BrachyInterstitial_REQN_TYPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyInterstitial_ROBTOTNOTE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyInterstitial_ROBTOTNOTE(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, ref string Err) {
            object[] results = this.Invoke("Get_BrachyInterstitial_ROBTOTNOTE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_ROBTOTNOTEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string Err) {
            this.Get_BrachyInterstitial_ROBTOTNOTEAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_ROBTOTNOTEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string Err, object userState) {
            if ((this.Get_BrachyInterstitial_ROBTOTNOTEOperationCompleted == null)) {
                this.Get_BrachyInterstitial_ROBTOTNOTEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyInterstitial_ROBTOTNOTEOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyInterstitial_ROBTOTNOTE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        Err}, this.Get_BrachyInterstitial_ROBTOTNOTEOperationCompleted, userState);
        }
        
        private void OnGet_BrachyInterstitial_ROBTOTNOTEOperationCompleted(object arg) {
            if ((this.Get_BrachyInterstitial_ROBTOTNOTECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyInterstitial_ROBTOTNOTECompleted(this, new Get_BrachyInterstitial_ROBTOTNOTECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyInterstitial_ROBTOTNOTE_Dtls", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyInterstitial_ROBTOTNOTE_Dtls(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, ref string Err) {
            object[] results = this.Invoke("Get_BrachyInterstitial_ROBTOTNOTE_Dtls", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        reqno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_ROBTOTNOTE_DtlsAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, string Err) {
            this.Get_BrachyInterstitial_ROBTOTNOTE_DtlsAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, reqno, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_ROBTOTNOTE_DtlsAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, string Err, object userState) {
            if ((this.Get_BrachyInterstitial_ROBTOTNOTE_DtlsOperationCompleted == null)) {
                this.Get_BrachyInterstitial_ROBTOTNOTE_DtlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyInterstitial_ROBTOTNOTE_DtlsOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyInterstitial_ROBTOTNOTE_Dtls", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        reqno,
                        Err}, this.Get_BrachyInterstitial_ROBTOTNOTE_DtlsOperationCompleted, userState);
        }
        
        private void OnGet_BrachyInterstitial_ROBTOTNOTE_DtlsOperationCompleted(object arg) {
            if ((this.Get_BrachyInterstitial_ROBTOTNOTE_DtlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyInterstitial_ROBTOTNOTE_DtlsCompleted(this, new Get_BrachyInterstitial_ROBTOTNOTE_DtlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyInterstitial_ROBTITSDLS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyInterstitial_ROBTITSDLS(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, ref string Err) {
            object[] results = this.Invoke("Get_BrachyInterstitial_ROBTITSDLS", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_ROBTITSDLSAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err) {
            this.Get_BrachyInterstitial_ROBTITSDLSAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, PLAN_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyInterstitial_ROBTITSDLSAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err, object userState) {
            if ((this.Get_BrachyInterstitial_ROBTITSDLSOperationCompleted == null)) {
                this.Get_BrachyInterstitial_ROBTITSDLSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyInterstitial_ROBTITSDLSOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyInterstitial_ROBTITSDLS", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err}, this.Get_BrachyInterstitial_ROBTITSDLSOperationCompleted, userState);
        }
        
        private void OnGet_BrachyInterstitial_ROBTITSDLSOperationCompleted(object arg) {
            if ((this.Get_BrachyInterstitial_ROBTITSDLSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyInterstitial_ROBTITSDLSCompleted(this, new Get_BrachyInterstitial_ROBTITSDLSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachyCountSurface", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachyCountSurface(string CASE_NO, string BrachyNo, ref string Err) {
            object[] results = this.Invoke("Get_BrachyCountSurface", new object[] {
                        CASE_NO,
                        BrachyNo,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachyCountSurfaceAsync(string CASE_NO, string BrachyNo, string Err) {
            this.Get_BrachyCountSurfaceAsync(CASE_NO, BrachyNo, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachyCountSurfaceAsync(string CASE_NO, string BrachyNo, string Err, object userState) {
            if ((this.Get_BrachyCountSurfaceOperationCompleted == null)) {
                this.Get_BrachyCountSurfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachyCountSurfaceOperationCompleted);
            }
            this.InvokeAsync("Get_BrachyCountSurface", new object[] {
                        CASE_NO,
                        BrachyNo,
                        Err}, this.Get_BrachyCountSurfaceOperationCompleted, userState);
        }
        
        private void OnGet_BrachyCountSurfaceOperationCompleted(object arg) {
            if ((this.Get_BrachyCountSurfaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachyCountSurfaceCompleted(this, new Get_BrachyCountSurfaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Surface_ROBTSADLS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Surface_ROBTSADLS(string CASE_NO, string BrachyNo, string app_no, ref string Err) {
            object[] results = this.Invoke("Get_Surface_ROBTSADLS", new object[] {
                        CASE_NO,
                        BrachyNo,
                        app_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Surface_ROBTSADLSAsync(string CASE_NO, string BrachyNo, string app_no, string Err) {
            this.Get_Surface_ROBTSADLSAsync(CASE_NO, BrachyNo, app_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Surface_ROBTSADLSAsync(string CASE_NO, string BrachyNo, string app_no, string Err, object userState) {
            if ((this.Get_Surface_ROBTSADLSOperationCompleted == null)) {
                this.Get_Surface_ROBTSADLSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Surface_ROBTSADLSOperationCompleted);
            }
            this.InvokeAsync("Get_Surface_ROBTSADLS", new object[] {
                        CASE_NO,
                        BrachyNo,
                        app_no,
                        Err}, this.Get_Surface_ROBTSADLSOperationCompleted, userState);
        }
        
        private void OnGet_Surface_ROBTSADLSOperationCompleted(object arg) {
            if ((this.Get_Surface_ROBTSADLSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Surface_ROBTSADLSCompleted(this, new Get_Surface_ROBTSADLSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Surface_ROBTSAPLN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Surface_ROBTSAPLN(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, ref string Err) {
            object[] results = this.Invoke("Get_Surface_ROBTSAPLN", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Surface_ROBTSAPLNAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err) {
            this.Get_Surface_ROBTSAPLNAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, PLAN_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_Surface_ROBTSAPLNAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err, object userState) {
            if ((this.Get_Surface_ROBTSAPLNOperationCompleted == null)) {
                this.Get_Surface_ROBTSAPLNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Surface_ROBTSAPLNOperationCompleted);
            }
            this.InvokeAsync("Get_Surface_ROBTSAPLN", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err}, this.Get_Surface_ROBTSAPLNOperationCompleted, userState);
        }
        
        private void OnGet_Surface_ROBTSAPLNOperationCompleted(object arg) {
            if ((this.Get_Surface_ROBTSAPLNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Surface_ROBTSAPLNCompleted(this, new Get_Surface_ROBTSAPLNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachySurface_SCHNO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachySurface_SCHNO(string CASE_NO, string reqno, ref string Err) {
            object[] results = this.Invoke("Get_BrachySurface_SCHNO", new object[] {
                        CASE_NO,
                        reqno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachySurface_SCHNOAsync(string CASE_NO, string reqno, string Err) {
            this.Get_BrachySurface_SCHNOAsync(CASE_NO, reqno, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachySurface_SCHNOAsync(string CASE_NO, string reqno, string Err, object userState) {
            if ((this.Get_BrachySurface_SCHNOOperationCompleted == null)) {
                this.Get_BrachySurface_SCHNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachySurface_SCHNOOperationCompleted);
            }
            this.InvokeAsync("Get_BrachySurface_SCHNO", new object[] {
                        CASE_NO,
                        reqno,
                        Err}, this.Get_BrachySurface_SCHNOOperationCompleted, userState);
        }
        
        private void OnGet_BrachySurface_SCHNOOperationCompleted(object arg) {
            if ((this.Get_BrachySurface_SCHNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachySurface_SCHNOCompleted(this, new Get_BrachySurface_SCHNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachySurface_OTTSRGRECN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachySurface_OTTSRGRECN(string CASE_NO, string schnum, ref string Err) {
            object[] results = this.Invoke("Get_BrachySurface_OTTSRGRECN", new object[] {
                        CASE_NO,
                        schnum,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachySurface_OTTSRGRECNAsync(string CASE_NO, string schnum, string Err) {
            this.Get_BrachySurface_OTTSRGRECNAsync(CASE_NO, schnum, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachySurface_OTTSRGRECNAsync(string CASE_NO, string schnum, string Err, object userState) {
            if ((this.Get_BrachySurface_OTTSRGRECNOperationCompleted == null)) {
                this.Get_BrachySurface_OTTSRGRECNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachySurface_OTTSRGRECNOperationCompleted);
            }
            this.InvokeAsync("Get_BrachySurface_OTTSRGRECN", new object[] {
                        CASE_NO,
                        schnum,
                        Err}, this.Get_BrachySurface_OTTSRGRECNOperationCompleted, userState);
        }
        
        private void OnGet_BrachySurface_OTTSRGRECNOperationCompleted(object arg) {
            if ((this.Get_BrachySurface_OTTSRGRECNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachySurface_OTTSRGRECNCompleted(this, new Get_BrachySurface_OTTSRGRECNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachySurface_REQN_TYPE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachySurface_REQN_TYPE(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, ref string Err) {
            object[] results = this.Invoke("Get_BrachySurface_REQN_TYPE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        reqno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachySurface_REQN_TYPEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, string Err) {
            this.Get_BrachySurface_REQN_TYPEAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, reqno, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachySurface_REQN_TYPEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, string Err, object userState) {
            if ((this.Get_BrachySurface_REQN_TYPEOperationCompleted == null)) {
                this.Get_BrachySurface_REQN_TYPEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachySurface_REQN_TYPEOperationCompleted);
            }
            this.InvokeAsync("Get_BrachySurface_REQN_TYPE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        reqno,
                        Err}, this.Get_BrachySurface_REQN_TYPEOperationCompleted, userState);
        }
        
        private void OnGet_BrachySurface_REQN_TYPEOperationCompleted(object arg) {
            if ((this.Get_BrachySurface_REQN_TYPECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachySurface_REQN_TYPECompleted(this, new Get_BrachySurface_REQN_TYPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachySurface_ROBTOTNOTE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachySurface_ROBTOTNOTE(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, ref string Err) {
            object[] results = this.Invoke("Get_BrachySurface_ROBTOTNOTE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachySurface_ROBTOTNOTEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string Err) {
            this.Get_BrachySurface_ROBTOTNOTEAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachySurface_ROBTOTNOTEAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string Err, object userState) {
            if ((this.Get_BrachySurface_ROBTOTNOTEOperationCompleted == null)) {
                this.Get_BrachySurface_ROBTOTNOTEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachySurface_ROBTOTNOTEOperationCompleted);
            }
            this.InvokeAsync("Get_BrachySurface_ROBTOTNOTE", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        Err}, this.Get_BrachySurface_ROBTOTNOTEOperationCompleted, userState);
        }
        
        private void OnGet_BrachySurface_ROBTOTNOTEOperationCompleted(object arg) {
            if ((this.Get_BrachySurface_ROBTOTNOTECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachySurface_ROBTOTNOTECompleted(this, new Get_BrachySurface_ROBTOTNOTECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachySurface_ROBTOTNOTE_Dtls", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachySurface_ROBTOTNOTE_Dtls(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, ref string Err) {
            object[] results = this.Invoke("Get_BrachySurface_ROBTOTNOTE_Dtls", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        reqno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachySurface_ROBTOTNOTE_DtlsAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, string Err) {
            this.Get_BrachySurface_ROBTOTNOTE_DtlsAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, reqno, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachySurface_ROBTOTNOTE_DtlsAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string reqno, string Err, object userState) {
            if ((this.Get_BrachySurface_ROBTOTNOTE_DtlsOperationCompleted == null)) {
                this.Get_BrachySurface_ROBTOTNOTE_DtlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachySurface_ROBTOTNOTE_DtlsOperationCompleted);
            }
            this.InvokeAsync("Get_BrachySurface_ROBTOTNOTE_Dtls", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        reqno,
                        Err}, this.Get_BrachySurface_ROBTOTNOTE_DtlsOperationCompleted, userState);
        }
        
        private void OnGet_BrachySurface_ROBTOTNOTE_DtlsOperationCompleted(object arg) {
            if ((this.Get_BrachySurface_ROBTOTNOTE_DtlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachySurface_ROBTOTNOTE_DtlsCompleted(this, new Get_BrachySurface_ROBTOTNOTE_DtlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BrachySurface_ROBTSADLS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_BrachySurface_ROBTSADLS(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, ref string Err) {
            object[] results = this.Invoke("Get_BrachySurface_ROBTSADLS", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BrachySurface_ROBTSADLSAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err) {
            this.Get_BrachySurface_ROBTSADLSAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, PLAN_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_BrachySurface_ROBTSADLSAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string PLAN_NO, string Err, object userState) {
            if ((this.Get_BrachySurface_ROBTSADLSOperationCompleted == null)) {
                this.Get_BrachySurface_ROBTSADLSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BrachySurface_ROBTSADLSOperationCompleted);
            }
            this.InvokeAsync("Get_BrachySurface_ROBTSADLS", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        PLAN_NO,
                        Err}, this.Get_BrachySurface_ROBTSADLSOperationCompleted, userState);
        }
        
        private void OnGet_BrachySurface_ROBTSADLSOperationCompleted(object arg) {
            if ((this.Get_BrachySurface_ROBTSADLSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BrachySurface_ROBTSADLSCompleted(this, new Get_BrachySurface_ROBTSADLSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Brachy_HDR_LDR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Brachy_HDR_LDR(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, ref string Err) {
            object[] results = this.Invoke("Get_Brachy_HDR_LDR", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Brachy_HDR_LDRAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string Err) {
            this.Get_Brachy_HDR_LDRAsync(CASE_NO, JC_NO, COURSE_NO, PVER_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_Brachy_HDR_LDRAsync(string CASE_NO, string JC_NO, string COURSE_NO, string PVER_NO, string Err, object userState) {
            if ((this.Get_Brachy_HDR_LDROperationCompleted == null)) {
                this.Get_Brachy_HDR_LDROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Brachy_HDR_LDROperationCompleted);
            }
            this.InvokeAsync("Get_Brachy_HDR_LDR", new object[] {
                        CASE_NO,
                        JC_NO,
                        COURSE_NO,
                        PVER_NO,
                        Err}, this.Get_Brachy_HDR_LDROperationCompleted, userState);
        }
        
        private void OnGet_Brachy_HDR_LDROperationCompleted(object arg) {
            if ((this.Get_Brachy_HDR_LDRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Brachy_HDR_LDRCompleted(this, new Get_Brachy_HDR_LDRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Bed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Bed(string CASE_NO, ref string Err) {
            object[] results = this.Invoke("Get_emr_Bed", new object[] {
                        CASE_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_BedAsync(string CASE_NO, string Err) {
            this.Get_emr_BedAsync(CASE_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_BedAsync(string CASE_NO, string Err, object userState) {
            if ((this.Get_emr_BedOperationCompleted == null)) {
                this.Get_emr_BedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_BedOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Bed", new object[] {
                        CASE_NO,
                        Err}, this.Get_emr_BedOperationCompleted, userState);
        }
        
        private void OnGet_emr_BedOperationCompleted(object arg) {
            if ((this.Get_emr_BedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_BedCompleted(this, new Get_emr_BedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PrimSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PrimSite(string CASE_NO, ref string Err) {
            object[] results = this.Invoke("Get_emr_PrimSite", new object[] {
                        CASE_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PrimSiteAsync(string CASE_NO, string Err) {
            this.Get_emr_PrimSiteAsync(CASE_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PrimSiteAsync(string CASE_NO, string Err, object userState) {
            if ((this.Get_emr_PrimSiteOperationCompleted == null)) {
                this.Get_emr_PrimSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PrimSiteOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PrimSite", new object[] {
                        CASE_NO,
                        Err}, this.Get_emr_PrimSiteOperationCompleted, userState);
        }
        
        private void OnGet_emr_PrimSiteOperationCompleted(object arg) {
            if ((this.Get_emr_PrimSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PrimSiteCompleted(this, new Get_emr_PrimSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CISLIBctdiagns", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CISLIBctdiagns(string CASE_NO, ref string Err) {
            object[] results = this.Invoke("Get_emr_CISLIBctdiagns", new object[] {
                        CASE_NO,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CISLIBctdiagnsAsync(string CASE_NO, string Err) {
            this.Get_emr_CISLIBctdiagnsAsync(CASE_NO, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CISLIBctdiagnsAsync(string CASE_NO, string Err, object userState) {
            if ((this.Get_emr_CISLIBctdiagnsOperationCompleted == null)) {
                this.Get_emr_CISLIBctdiagnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CISLIBctdiagnsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CISLIBctdiagns", new object[] {
                        CASE_NO,
                        Err}, this.Get_emr_CISLIBctdiagnsOperationCompleted, userState);
        }
        
        private void OnGet_emr_CISLIBctdiagnsOperationCompleted(object arg) {
            if ((this.Get_emr_CISLIBctdiagnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CISLIBctdiagnsCompleted(this, new Get_emr_CISLIBctdiagnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RadioNumber_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_RadioNumber_List(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_RadioNumber_List", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RadioNumber_ListAsync(string case_no, string Err) {
            this.Get_RadioNumber_ListAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_RadioNumber_ListAsync(string case_no, string Err, object userState) {
            if ((this.Get_RadioNumber_ListOperationCompleted == null)) {
                this.Get_RadioNumber_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RadioNumber_ListOperationCompleted);
            }
            this.InvokeAsync("Get_RadioNumber_List", new object[] {
                        case_no,
                        Err}, this.Get_RadioNumber_ListOperationCompleted, userState);
        }
        
        private void OnGet_RadioNumber_ListOperationCompleted(object arg) {
            if ((this.Get_RadioNumber_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RadioNumber_ListCompleted(this, new Get_RadioNumber_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_JC_No", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_JC_No(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_JC_No", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_JC_NoAsync(string case_no, string Err) {
            this.Get_JC_NoAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_JC_NoAsync(string case_no, string Err, object userState) {
            if ((this.Get_JC_NoOperationCompleted == null)) {
                this.Get_JC_NoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_JC_NoOperationCompleted);
            }
            this.InvokeAsync("Get_JC_No", new object[] {
                        case_no,
                        Err}, this.Get_JC_NoOperationCompleted, userState);
        }
        
        private void OnGet_JC_NoOperationCompleted(object arg) {
            if ((this.Get_JC_NoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_JC_NoCompleted(this, new Get_JC_NoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_CPLAN_No", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_CPLAN_No(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_CPLAN_No", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CPLAN_NoAsync(string case_no, string Err) {
            this.Get_CPLAN_NoAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_CPLAN_NoAsync(string case_no, string Err, object userState) {
            if ((this.Get_CPLAN_NoOperationCompleted == null)) {
                this.Get_CPLAN_NoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CPLAN_NoOperationCompleted);
            }
            this.InvokeAsync("Get_CPLAN_No", new object[] {
                        case_no,
                        Err}, this.Get_CPLAN_NoOperationCompleted, userState);
        }
        
        private void OnGet_CPLAN_NoOperationCompleted(object arg) {
            if ((this.Get_CPLAN_NoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CPLAN_NoCompleted(this, new Get_CPLAN_NoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_JC_Param", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_JC_Param(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_JC_Param", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_JC_ParamAsync(string case_no, string d_type, string Err) {
            this.Get_JC_ParamAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_JC_ParamAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_JC_ParamOperationCompleted == null)) {
                this.Get_JC_ParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_JC_ParamOperationCompleted);
            }
            this.InvokeAsync("Get_JC_Param", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_JC_ParamOperationCompleted, userState);
        }
        
        private void OnGet_JC_ParamOperationCompleted(object arg) {
            if ((this.Get_JC_ParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_JC_ParamCompleted(this, new Get_JC_ParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_CPLAN_Param", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_CPLAN_Param(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_CPLAN_Param", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CPLAN_ParamAsync(string case_no, string d_type, string Err) {
            this.Get_CPLAN_ParamAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_CPLAN_ParamAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_CPLAN_ParamOperationCompleted == null)) {
                this.Get_CPLAN_ParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CPLAN_ParamOperationCompleted);
            }
            this.InvokeAsync("Get_CPLAN_Param", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_CPLAN_ParamOperationCompleted, userState);
        }
        
        private void OnGet_CPLAN_ParamOperationCompleted(object arg) {
            if ((this.Get_CPLAN_ParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CPLAN_ParamCompleted(this, new Get_CPLAN_ParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getmtproinfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Getmtproinfo(string CASE_NO, string Jc_No, string CP_No, ref string Err) {
            object[] results = this.Invoke("Getmtproinfo", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetmtproinfoAsync(string CASE_NO, string Jc_No, string CP_No, string Err) {
            this.GetmtproinfoAsync(CASE_NO, Jc_No, CP_No, Err, null);
        }
        
        /// <remarks/>
        public void GetmtproinfoAsync(string CASE_NO, string Jc_No, string CP_No, string Err, object userState) {
            if ((this.GetmtproinfoOperationCompleted == null)) {
                this.GetmtproinfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetmtproinfoOperationCompleted);
            }
            this.InvokeAsync("Getmtproinfo", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        Err}, this.GetmtproinfoOperationCompleted, userState);
        }
        
        private void OnGetmtproinfoOperationCompleted(object arg) {
            if ((this.GetmtproinfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetmtproinfoCompleted(this, new GetmtproinfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_CycleMTCYCLEDTL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_CycleMTCYCLEDTL(string CASE_NO, string Jc_No, string CP_No, ref string Err) {
            object[] results = this.Invoke("Get_CycleMTCYCLEDTL", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CycleMTCYCLEDTLAsync(string CASE_NO, string Jc_No, string CP_No, string Err) {
            this.Get_CycleMTCYCLEDTLAsync(CASE_NO, Jc_No, CP_No, Err, null);
        }
        
        /// <remarks/>
        public void Get_CycleMTCYCLEDTLAsync(string CASE_NO, string Jc_No, string CP_No, string Err, object userState) {
            if ((this.Get_CycleMTCYCLEDTLOperationCompleted == null)) {
                this.Get_CycleMTCYCLEDTLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CycleMTCYCLEDTLOperationCompleted);
            }
            this.InvokeAsync("Get_CycleMTCYCLEDTL", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        Err}, this.Get_CycleMTCYCLEDTLOperationCompleted, userState);
        }
        
        private void OnGet_CycleMTCYCLEDTLOperationCompleted(object arg) {
            if ((this.Get_CycleMTCYCLEDTLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CycleMTCYCLEDTLCompleted(this, new Get_CycleMTCYCLEDTLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_medType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_medType(string CASE_NO, string Jc_No, string CP_No, ref string Err) {
            object[] results = this.Invoke("Get_medType", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_medTypeAsync(string CASE_NO, string Jc_No, string CP_No, string Err) {
            this.Get_medTypeAsync(CASE_NO, Jc_No, CP_No, Err, null);
        }
        
        /// <remarks/>
        public void Get_medTypeAsync(string CASE_NO, string Jc_No, string CP_No, string Err, object userState) {
            if ((this.Get_medTypeOperationCompleted == null)) {
                this.Get_medTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_medTypeOperationCompleted);
            }
            this.InvokeAsync("Get_medType", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        Err}, this.Get_medTypeOperationCompleted, userState);
        }
        
        private void OnGet_medTypeOperationCompleted(object arg) {
            if ((this.Get_medTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_medTypeCompleted(this, new Get_medTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_DistDrug", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_DistDrug(string CASE_NO, string Jc_No, string CP_No, string d_Type, ref string Err) {
            object[] results = this.Invoke("Get_DistDrug", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        d_Type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_DistDrugAsync(string CASE_NO, string Jc_No, string CP_No, string d_Type, string Err) {
            this.Get_DistDrugAsync(CASE_NO, Jc_No, CP_No, d_Type, Err, null);
        }
        
        /// <remarks/>
        public void Get_DistDrugAsync(string CASE_NO, string Jc_No, string CP_No, string d_Type, string Err, object userState) {
            if ((this.Get_DistDrugOperationCompleted == null)) {
                this.Get_DistDrugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_DistDrugOperationCompleted);
            }
            this.InvokeAsync("Get_DistDrug", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        d_Type,
                        Err}, this.Get_DistDrugOperationCompleted, userState);
        }
        
        private void OnGet_DistDrugOperationCompleted(object arg) {
            if ((this.Get_DistDrugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_DistDrugCompleted(this, new Get_DistDrugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_MTDistDet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_MTDistDet(string CASE_NO, string Jc_No, string CP_No, string d_Type, string drugname, ref string Err) {
            object[] results = this.Invoke("Get_MTDistDet", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        d_Type,
                        drugname,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_MTDistDetAsync(string CASE_NO, string Jc_No, string CP_No, string d_Type, string drugname, string Err) {
            this.Get_MTDistDetAsync(CASE_NO, Jc_No, CP_No, d_Type, drugname, Err, null);
        }
        
        /// <remarks/>
        public void Get_MTDistDetAsync(string CASE_NO, string Jc_No, string CP_No, string d_Type, string drugname, string Err, object userState) {
            if ((this.Get_MTDistDetOperationCompleted == null)) {
                this.Get_MTDistDetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_MTDistDetOperationCompleted);
            }
            this.InvokeAsync("Get_MTDistDet", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        d_Type,
                        drugname,
                        Err}, this.Get_MTDistDetOperationCompleted, userState);
        }
        
        private void OnGet_MTDistDetOperationCompleted(object arg) {
            if ((this.Get_MTDistDetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_MTDistDetCompleted(this, new Get_MTDistDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MTDistDet_det", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable MTDistDet_det(string CASE_NO, string Jc_No, string CP_No, string d_Type, string drugname, double totdose, ref string Err) {
            object[] results = this.Invoke("MTDistDet_det", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        d_Type,
                        drugname,
                        totdose,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void MTDistDet_detAsync(string CASE_NO, string Jc_No, string CP_No, string d_Type, string drugname, double totdose, string Err) {
            this.MTDistDet_detAsync(CASE_NO, Jc_No, CP_No, d_Type, drugname, totdose, Err, null);
        }
        
        /// <remarks/>
        public void MTDistDet_detAsync(string CASE_NO, string Jc_No, string CP_No, string d_Type, string drugname, double totdose, string Err, object userState) {
            if ((this.MTDistDet_detOperationCompleted == null)) {
                this.MTDistDet_detOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMTDistDet_detOperationCompleted);
            }
            this.InvokeAsync("MTDistDet_det", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        d_Type,
                        drugname,
                        totdose,
                        Err}, this.MTDistDet_detOperationCompleted, userState);
        }
        
        private void OnMTDistDet_detOperationCompleted(object arg) {
            if ((this.MTDistDet_detCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MTDistDet_detCompleted(this, new MTDistDet_detCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MTDistDet_daydet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable MTDistDet_daydet(string CASE_NO, string Jc_No, string CP_No, string drugname, double totdose, int I, ref string Err) {
            object[] results = this.Invoke("MTDistDet_daydet", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        drugname,
                        totdose,
                        I,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void MTDistDet_daydetAsync(string CASE_NO, string Jc_No, string CP_No, string drugname, double totdose, int I, string Err) {
            this.MTDistDet_daydetAsync(CASE_NO, Jc_No, CP_No, drugname, totdose, I, Err, null);
        }
        
        /// <remarks/>
        public void MTDistDet_daydetAsync(string CASE_NO, string Jc_No, string CP_No, string drugname, double totdose, int I, string Err, object userState) {
            if ((this.MTDistDet_daydetOperationCompleted == null)) {
                this.MTDistDet_daydetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMTDistDet_daydetOperationCompleted);
            }
            this.InvokeAsync("MTDistDet_daydet", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        drugname,
                        totdose,
                        I,
                        Err}, this.MTDistDet_daydetOperationCompleted, userState);
        }
        
        private void OnMTDistDet_daydetOperationCompleted(object arg) {
            if ((this.MTDistDet_daydetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MTDistDet_daydetCompleted(this, new MTDistDet_daydetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVIEWChem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetVIEWChem(string CASE_NO, string Jc_No, string CP_No, string drugname, int d_Type, int I, ref string Err) {
            object[] results = this.Invoke("GetVIEWChem", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        drugname,
                        d_Type,
                        I,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetVIEWChemAsync(string CASE_NO, string Jc_No, string CP_No, string drugname, int d_Type, int I, string Err) {
            this.GetVIEWChemAsync(CASE_NO, Jc_No, CP_No, drugname, d_Type, I, Err, null);
        }
        
        /// <remarks/>
        public void GetVIEWChemAsync(string CASE_NO, string Jc_No, string CP_No, string drugname, int d_Type, int I, string Err, object userState) {
            if ((this.GetVIEWChemOperationCompleted == null)) {
                this.GetVIEWChemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVIEWChemOperationCompleted);
            }
            this.InvokeAsync("GetVIEWChem", new object[] {
                        CASE_NO,
                        Jc_No,
                        CP_No,
                        drugname,
                        d_Type,
                        I,
                        Err}, this.GetVIEWChemOperationCompleted, userState);
        }
        
        private void OnGetVIEWChemOperationCompleted(object arg) {
            if ((this.GetVIEWChemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVIEWChemCompleted(this, new GetVIEWChemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ToxicityJCNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_ToxicityJCNo(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_ToxicityJCNo", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ToxicityJCNoAsync(string case_no, string Err) {
            this.Get_ToxicityJCNoAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_ToxicityJCNoAsync(string case_no, string Err, object userState) {
            if ((this.Get_ToxicityJCNoOperationCompleted == null)) {
                this.Get_ToxicityJCNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ToxicityJCNoOperationCompleted);
            }
            this.InvokeAsync("Get_ToxicityJCNo", new object[] {
                        case_no,
                        Err}, this.Get_ToxicityJCNoOperationCompleted, userState);
        }
        
        private void OnGet_ToxicityJCNoOperationCompleted(object arg) {
            if ((this.Get_ToxicityJCNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ToxicityJCNoCompleted(this, new Get_ToxicityJCNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Follow_up", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Follow_up(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_Follow_up", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Follow_upAsync(string case_no, string Err) {
            this.Get_Follow_upAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Follow_upAsync(string case_no, string Err, object userState) {
            if ((this.Get_Follow_upOperationCompleted == null)) {
                this.Get_Follow_upOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Follow_upOperationCompleted);
            }
            this.InvokeAsync("Get_Follow_up", new object[] {
                        case_no,
                        Err}, this.Get_Follow_upOperationCompleted, userState);
        }
        
        private void OnGet_Follow_upOperationCompleted(object arg) {
            if ((this.Get_Follow_upCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Follow_upCompleted(this, new Get_Follow_upCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Follow_up_died", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Follow_up_died(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_Follow_up_died", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Follow_up_diedAsync(string case_no, string Err) {
            this.Get_Follow_up_diedAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Follow_up_diedAsync(string case_no, string Err, object userState) {
            if ((this.Get_Follow_up_diedOperationCompleted == null)) {
                this.Get_Follow_up_diedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Follow_up_diedOperationCompleted);
            }
            this.InvokeAsync("Get_Follow_up_died", new object[] {
                        case_no,
                        Err}, this.Get_Follow_up_diedOperationCompleted, userState);
        }
        
        private void OnGet_Follow_up_diedOperationCompleted(object arg) {
            if ((this.Get_Follow_up_diedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Follow_up_diedCompleted(this, new Get_Follow_up_diedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Follow_up_record", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Follow_up_record(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_Follow_up_record", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Follow_up_recordAsync(string case_no, string Err) {
            this.Get_Follow_up_recordAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Follow_up_recordAsync(string case_no, string Err, object userState) {
            if ((this.Get_Follow_up_recordOperationCompleted == null)) {
                this.Get_Follow_up_recordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Follow_up_recordOperationCompleted);
            }
            this.InvokeAsync("Get_Follow_up_record", new object[] {
                        case_no,
                        Err}, this.Get_Follow_up_recordOperationCompleted, userState);
        }
        
        private void OnGet_Follow_up_recordOperationCompleted(object arg) {
            if ((this.Get_Follow_up_recordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Follow_up_recordCompleted(this, new Get_Follow_up_recordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Data_VW_WEBCISC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Data_VW_WEBCISC(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_Data_VW_WEBCISC", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Data_VW_WEBCISCAsync(string case_no, string Err) {
            this.Get_Data_VW_WEBCISCAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Data_VW_WEBCISCAsync(string case_no, string Err, object userState) {
            if ((this.Get_Data_VW_WEBCISCOperationCompleted == null)) {
                this.Get_Data_VW_WEBCISCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Data_VW_WEBCISCOperationCompleted);
            }
            this.InvokeAsync("Get_Data_VW_WEBCISC", new object[] {
                        case_no,
                        Err}, this.Get_Data_VW_WEBCISCOperationCompleted, userState);
        }
        
        private void OnGet_Data_VW_WEBCISCOperationCompleted(object arg) {
            if ((this.Get_Data_VW_WEBCISCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Data_VW_WEBCISCCompleted(this, new Get_Data_VW_WEBCISCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Data_wipatdtls", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Data_wipatdtls(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_Data_wipatdtls", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Data_wipatdtlsAsync(string case_no, string Err) {
            this.Get_Data_wipatdtlsAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Data_wipatdtlsAsync(string case_no, string Err, object userState) {
            if ((this.Get_Data_wipatdtlsOperationCompleted == null)) {
                this.Get_Data_wipatdtlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Data_wipatdtlsOperationCompleted);
            }
            this.InvokeAsync("Get_Data_wipatdtls", new object[] {
                        case_no,
                        Err}, this.Get_Data_wipatdtlsOperationCompleted, userState);
        }
        
        private void OnGet_Data_wipatdtlsOperationCompleted(object arg) {
            if ((this.Get_Data_wipatdtlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Data_wipatdtlsCompleted(this, new Get_Data_wipatdtlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Data_wipatdtlsOnINTERVNTN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Data_wipatdtlsOnINTERVNTN(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_Data_wipatdtlsOnINTERVNTN", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Data_wipatdtlsOnINTERVNTNAsync(string case_no, string Err) {
            this.Get_Data_wipatdtlsOnINTERVNTNAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Data_wipatdtlsOnINTERVNTNAsync(string case_no, string Err, object userState) {
            if ((this.Get_Data_wipatdtlsOnINTERVNTNOperationCompleted == null)) {
                this.Get_Data_wipatdtlsOnINTERVNTNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Data_wipatdtlsOnINTERVNTNOperationCompleted);
            }
            this.InvokeAsync("Get_Data_wipatdtlsOnINTERVNTN", new object[] {
                        case_no,
                        Err}, this.Get_Data_wipatdtlsOnINTERVNTNOperationCompleted, userState);
        }
        
        private void OnGet_Data_wipatdtlsOnINTERVNTNOperationCompleted(object arg) {
            if ((this.Get_Data_wipatdtlsOnINTERVNTNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Data_wipatdtlsOnINTERVNTNCompleted(this, new Get_Data_wipatdtlsOnINTERVNTNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Data_wiprscom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Data_wiprscom(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_Data_wiprscom", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Data_wiprscomAsync(string case_no, string Err) {
            this.Get_Data_wiprscomAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Data_wiprscomAsync(string case_no, string Err, object userState) {
            if ((this.Get_Data_wiprscomOperationCompleted == null)) {
                this.Get_Data_wiprscomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Data_wiprscomOperationCompleted);
            }
            this.InvokeAsync("Get_Data_wiprscom", new object[] {
                        case_no,
                        Err}, this.Get_Data_wiprscomOperationCompleted, userState);
        }
        
        private void OnGet_Data_wiprscomOperationCompleted(object arg) {
            if ((this.Get_Data_wiprscomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Data_wiprscomCompleted(this, new Get_Data_wiprscomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Data_WIPITSSUE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Data_WIPITSSUE(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_Data_WIPITSSUE", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Data_WIPITSSUEAsync(string case_no, string Err) {
            this.Get_Data_WIPITSSUEAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_Data_WIPITSSUEAsync(string case_no, string Err, object userState) {
            if ((this.Get_Data_WIPITSSUEOperationCompleted == null)) {
                this.Get_Data_WIPITSSUEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Data_WIPITSSUEOperationCompleted);
            }
            this.InvokeAsync("Get_Data_WIPITSSUE", new object[] {
                        case_no,
                        Err}, this.Get_Data_WIPITSSUEOperationCompleted, userState);
        }
        
        private void OnGet_Data_WIPITSSUEOperationCompleted(object arg) {
            if ((this.Get_Data_WIPITSSUECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Data_WIPITSSUECompleted(this, new Get_Data_WIPITSSUECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getemrVerifyOTPAndCaptcha", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getemrVerifyOTPAndCaptcha(string username, string otp, ref string err) {
            object[] results = this.Invoke("getemrVerifyOTPAndCaptcha", new object[] {
                        username,
                        otp,
                        err});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getemrVerifyOTPAndCaptchaAsync(string username, string otp, string err) {
            this.getemrVerifyOTPAndCaptchaAsync(username, otp, err, null);
        }
        
        /// <remarks/>
        public void getemrVerifyOTPAndCaptchaAsync(string username, string otp, string err, object userState) {
            if ((this.getemrVerifyOTPAndCaptchaOperationCompleted == null)) {
                this.getemrVerifyOTPAndCaptchaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetemrVerifyOTPAndCaptchaOperationCompleted);
            }
            this.InvokeAsync("getemrVerifyOTPAndCaptcha", new object[] {
                        username,
                        otp,
                        err}, this.getemrVerifyOTPAndCaptchaOperationCompleted, userState);
        }
        
        private void OngetemrVerifyOTPAndCaptchaOperationCompleted(object arg) {
            if ((this.getemrVerifyOTPAndCaptchaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getemrVerifyOTPAndCaptchaCompleted(this, new getemrVerifyOTPAndCaptchaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getemrOTPCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getemrOTPCount(string username, ref string err) {
            object[] results = this.Invoke("getemrOTPCount", new object[] {
                        username,
                        err});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getemrOTPCountAsync(string username, string err) {
            this.getemrOTPCountAsync(username, err, null);
        }
        
        /// <remarks/>
        public void getemrOTPCountAsync(string username, string err, object userState) {
            if ((this.getemrOTPCountOperationCompleted == null)) {
                this.getemrOTPCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetemrOTPCountOperationCompleted);
            }
            this.InvokeAsync("getemrOTPCount", new object[] {
                        username,
                        err}, this.getemrOTPCountOperationCompleted, userState);
        }
        
        private void OngetemrOTPCountOperationCompleted(object arg) {
            if ((this.getemrOTPCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getemrOTPCountCompleted(this, new getemrOTPCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_IncrementOtpCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_IncrementOtpCount(string username, ref string err) {
            object[] results = this.Invoke("Get_IncrementOtpCount", new object[] {
                        username,
                        err});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_IncrementOtpCountAsync(string username, string err) {
            this.Get_IncrementOtpCountAsync(username, err, null);
        }
        
        /// <remarks/>
        public void Get_IncrementOtpCountAsync(string username, string err, object userState) {
            if ((this.Get_IncrementOtpCountOperationCompleted == null)) {
                this.Get_IncrementOtpCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_IncrementOtpCountOperationCompleted);
            }
            this.InvokeAsync("Get_IncrementOtpCount", new object[] {
                        username,
                        err}, this.Get_IncrementOtpCountOperationCompleted, userState);
        }
        
        private void OnGet_IncrementOtpCountOperationCompleted(object arg) {
            if ((this.Get_IncrementOtpCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_IncrementOtpCountCompleted(this, new Get_IncrementOtpCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ResetOtpCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_ResetOtpCount(string username, ref string err) {
            object[] results = this.Invoke("Get_ResetOtpCount", new object[] {
                        username,
                        err});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ResetOtpCountAsync(string username, string err) {
            this.Get_ResetOtpCountAsync(username, err, null);
        }
        
        /// <remarks/>
        public void Get_ResetOtpCountAsync(string username, string err, object userState) {
            if ((this.Get_ResetOtpCountOperationCompleted == null)) {
                this.Get_ResetOtpCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ResetOtpCountOperationCompleted);
            }
            this.InvokeAsync("Get_ResetOtpCount", new object[] {
                        username,
                        err}, this.Get_ResetOtpCountOperationCompleted, userState);
        }
        
        private void OnGet_ResetOtpCountOperationCompleted(object arg) {
            if ((this.Get_ResetOtpCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ResetOtpCountCompleted(this, new Get_ResetOtpCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_CheckCaseNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_CheckCaseNo(string username, ref string err) {
            object[] results = this.Invoke("Get_CheckCaseNo", new object[] {
                        username,
                        err});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CheckCaseNoAsync(string username, string err) {
            this.Get_CheckCaseNoAsync(username, err, null);
        }
        
        /// <remarks/>
        public void Get_CheckCaseNoAsync(string username, string err, object userState) {
            if ((this.Get_CheckCaseNoOperationCompleted == null)) {
                this.Get_CheckCaseNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CheckCaseNoOperationCompleted);
            }
            this.InvokeAsync("Get_CheckCaseNo", new object[] {
                        username,
                        err}, this.Get_CheckCaseNoOperationCompleted, userState);
        }
        
        private void OnGet_CheckCaseNoOperationCompleted(object arg) {
            if ((this.Get_CheckCaseNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CheckCaseNoCompleted(this, new Get_CheckCaseNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientContactDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPatientContactDetails(string username, ref string err) {
            object[] results = this.Invoke("GetPatientContactDetails", new object[] {
                        username,
                        err});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientContactDetailsAsync(string username, string err) {
            this.GetPatientContactDetailsAsync(username, err, null);
        }
        
        /// <remarks/>
        public void GetPatientContactDetailsAsync(string username, string err, object userState) {
            if ((this.GetPatientContactDetailsOperationCompleted == null)) {
                this.GetPatientContactDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientContactDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPatientContactDetails", new object[] {
                        username,
                        err}, this.GetPatientContactDetailsOperationCompleted, userState);
        }
        
        private void OnGetPatientContactDetailsOperationCompleted(object arg) {
            if ((this.GetPatientContactDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientContactDetailsCompleted(this, new GetPatientContactDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckAndUpdatePasswordRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CheckAndUpdatePasswordRecord(string caseNo, string encryptedPassword, System.DateTime otpDate, ref string err) {
            object[] results = this.Invoke("CheckAndUpdatePasswordRecord", new object[] {
                        caseNo,
                        encryptedPassword,
                        otpDate,
                        err});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAndUpdatePasswordRecordAsync(string caseNo, string encryptedPassword, System.DateTime otpDate, string err) {
            this.CheckAndUpdatePasswordRecordAsync(caseNo, encryptedPassword, otpDate, err, null);
        }
        
        /// <remarks/>
        public void CheckAndUpdatePasswordRecordAsync(string caseNo, string encryptedPassword, System.DateTime otpDate, string err, object userState) {
            if ((this.CheckAndUpdatePasswordRecordOperationCompleted == null)) {
                this.CheckAndUpdatePasswordRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAndUpdatePasswordRecordOperationCompleted);
            }
            this.InvokeAsync("CheckAndUpdatePasswordRecord", new object[] {
                        caseNo,
                        encryptedPassword,
                        otpDate,
                        err}, this.CheckAndUpdatePasswordRecordOperationCompleted, userState);
        }
        
        private void OnCheckAndUpdatePasswordRecordOperationCompleted(object arg) {
            if ((this.CheckAndUpdatePasswordRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAndUpdatePasswordRecordCompleted(this, new CheckAndUpdatePasswordRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCaseCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCaseCount(string caseNo, ref string err) {
            object[] results = this.Invoke("GetCaseCount", new object[] {
                        caseNo,
                        err});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseCountAsync(string caseNo, string err) {
            this.GetCaseCountAsync(caseNo, err, null);
        }
        
        /// <remarks/>
        public void GetCaseCountAsync(string caseNo, string err, object userState) {
            if ((this.GetCaseCountOperationCompleted == null)) {
                this.GetCaseCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseCountOperationCompleted);
            }
            this.InvokeAsync("GetCaseCount", new object[] {
                        caseNo,
                        err}, this.GetCaseCountOperationCompleted, userState);
        }
        
        private void OnGetCaseCountOperationCompleted(object arg) {
            if ((this.GetCaseCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseCountCompleted(this, new GetCaseCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCaseLoginDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCaseLoginDetails(string caseNo, ref string err) {
            object[] results = this.Invoke("GetCaseLoginDetails", new object[] {
                        caseNo,
                        err});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseLoginDetailsAsync(string caseNo, string err) {
            this.GetCaseLoginDetailsAsync(caseNo, err, null);
        }
        
        /// <remarks/>
        public void GetCaseLoginDetailsAsync(string caseNo, string err, object userState) {
            if ((this.GetCaseLoginDetailsOperationCompleted == null)) {
                this.GetCaseLoginDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseLoginDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCaseLoginDetails", new object[] {
                        caseNo,
                        err}, this.GetCaseLoginDetailsOperationCompleted, userState);
        }
        
        private void OnGetCaseLoginDetailsOperationCompleted(object arg) {
            if ((this.GetCaseLoginDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseLoginDetailsCompleted(this, new GetCaseLoginDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPasswordRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertPasswordRecord(string caseNo, string encryptedPassword, ref string err) {
            object[] results = this.Invoke("InsertPasswordRecord", new object[] {
                        caseNo,
                        encryptedPassword,
                        err});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPasswordRecordAsync(string caseNo, string encryptedPassword, string err) {
            this.InsertPasswordRecordAsync(caseNo, encryptedPassword, err, null);
        }
        
        /// <remarks/>
        public void InsertPasswordRecordAsync(string caseNo, string encryptedPassword, string err, object userState) {
            if ((this.InsertPasswordRecordOperationCompleted == null)) {
                this.InsertPasswordRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPasswordRecordOperationCompleted);
            }
            this.InvokeAsync("InsertPasswordRecord", new object[] {
                        caseNo,
                        encryptedPassword,
                        err}, this.InsertPasswordRecordOperationCompleted, userState);
        }
        
        private void OnInsertPasswordRecordOperationCompleted(object arg) {
            if ((this.InsertPasswordRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPasswordRecordCompleted(this, new InsertPasswordRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLogPatientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLogPatientInfo(string username, ref string err) {
            object[] results = this.Invoke("GetLogPatientInfo", new object[] {
                        username,
                        err});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogPatientInfoAsync(string username, string err) {
            this.GetLogPatientInfoAsync(username, err, null);
        }
        
        /// <remarks/>
        public void GetLogPatientInfoAsync(string username, string err, object userState) {
            if ((this.GetLogPatientInfoOperationCompleted == null)) {
                this.GetLogPatientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogPatientInfoOperationCompleted);
            }
            this.InvokeAsync("GetLogPatientInfo", new object[] {
                        username,
                        err}, this.GetLogPatientInfoOperationCompleted, userState);
        }
        
        private void OnGetLogPatientInfoOperationCompleted(object arg) {
            if ((this.GetLogPatientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogPatientInfoCompleted(this, new GetLogPatientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLogPatientInfoByWebEMR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLogPatientInfoByWebEMR(string username, ref string err) {
            object[] results = this.Invoke("GetLogPatientInfoByWebEMR", new object[] {
                        username,
                        err});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogPatientInfoByWebEMRAsync(string username, string err) {
            this.GetLogPatientInfoByWebEMRAsync(username, err, null);
        }
        
        /// <remarks/>
        public void GetLogPatientInfoByWebEMRAsync(string username, string err, object userState) {
            if ((this.GetLogPatientInfoByWebEMROperationCompleted == null)) {
                this.GetLogPatientInfoByWebEMROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogPatientInfoByWebEMROperationCompleted);
            }
            this.InvokeAsync("GetLogPatientInfoByWebEMR", new object[] {
                        username,
                        err}, this.GetLogPatientInfoByWebEMROperationCompleted, userState);
        }
        
        private void OnGetLogPatientInfoByWebEMROperationCompleted(object arg) {
            if ((this.GetLogPatientInfoByWebEMRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogPatientInfoByWebEMRCompleted(this, new GetLogPatientInfoByWebEMRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/executeSQLDS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet executeSQLDS(string p_SQL, string p_Reserved, string db_type) {
            object[] results = this.Invoke("executeSQLDS", new object[] {
                        p_SQL,
                        p_Reserved,
                        db_type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void executeSQLDSAsync(string p_SQL, string p_Reserved, string db_type) {
            this.executeSQLDSAsync(p_SQL, p_Reserved, db_type, null);
        }
        
        /// <remarks/>
        public void executeSQLDSAsync(string p_SQL, string p_Reserved, string db_type, object userState) {
            if ((this.executeSQLDSOperationCompleted == null)) {
                this.executeSQLDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteSQLDSOperationCompleted);
            }
            this.InvokeAsync("executeSQLDS", new object[] {
                        p_SQL,
                        p_Reserved,
                        db_type}, this.executeSQLDSOperationCompleted, userState);
        }
        
        private void OnexecuteSQLDSOperationCompleted(object arg) {
            if ((this.executeSQLDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeSQLDSCompleted(this, new executeSQLDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/executeSQLDS1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet executeSQLDS1(string p_SQL, string p_Reserved, string dbName, string db_type) {
            object[] results = this.Invoke("executeSQLDS1", new object[] {
                        p_SQL,
                        p_Reserved,
                        dbName,
                        db_type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void executeSQLDS1Async(string p_SQL, string p_Reserved, string dbName, string db_type) {
            this.executeSQLDS1Async(p_SQL, p_Reserved, dbName, db_type, null);
        }
        
        /// <remarks/>
        public void executeSQLDS1Async(string p_SQL, string p_Reserved, string dbName, string db_type, object userState) {
            if ((this.executeSQLDS1OperationCompleted == null)) {
                this.executeSQLDS1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteSQLDS1OperationCompleted);
            }
            this.InvokeAsync("executeSQLDS1", new object[] {
                        p_SQL,
                        p_Reserved,
                        dbName,
                        db_type}, this.executeSQLDS1OperationCompleted, userState);
        }
        
        private void OnexecuteSQLDS1OperationCompleted(object arg) {
            if ((this.executeSQLDS1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeSQLDS1Completed(this, new executeSQLDS1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/executeSQL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string executeSQL(string p_SQL, string p_Reserved, string db_type) {
            object[] results = this.Invoke("executeSQL", new object[] {
                        p_SQL,
                        p_Reserved,
                        db_type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void executeSQLAsync(string p_SQL, string p_Reserved, string db_type) {
            this.executeSQLAsync(p_SQL, p_Reserved, db_type, null);
        }
        
        /// <remarks/>
        public void executeSQLAsync(string p_SQL, string p_Reserved, string db_type, object userState) {
            if ((this.executeSQLOperationCompleted == null)) {
                this.executeSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteSQLOperationCompleted);
            }
            this.InvokeAsync("executeSQL", new object[] {
                        p_SQL,
                        p_Reserved,
                        db_type}, this.executeSQLOperationCompleted, userState);
        }
        
        private void OnexecuteSQLOperationCompleted(object arg) {
            if ((this.executeSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeSQLCompleted(this, new executeSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_BE_Tenderness", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_BE_Tenderness(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_BE_Tenderness", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_BE_TendernessAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_BE_TendernessAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_BE_TendernessAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_BE_TendernessOperationCompleted == null)) {
                this.Get_emr_BE_TendernessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_BE_TendernessOperationCompleted);
            }
            this.InvokeAsync("Get_emr_BE_Tenderness", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_BE_TendernessOperationCompleted, userState);
        }
        
        private void OnGet_emr_BE_TendernessOperationCompleted(object arg) {
            if ((this.Get_emr_BE_TendernessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_BE_TendernessCompleted(this, new Get_emr_BE_TendernessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_BE_Deformity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_BE_Deformity(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_BE_Deformity", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_BE_DeformityAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_BE_DeformityAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_BE_DeformityAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_BE_DeformityOperationCompleted == null)) {
                this.Get_emr_BE_DeformityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_BE_DeformityOperationCompleted);
            }
            this.InvokeAsync("Get_emr_BE_Deformity", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_BE_DeformityOperationCompleted, userState);
        }
        
        private void OnGet_emr_BE_DeformityOperationCompleted(object arg) {
            if ((this.Get_emr_BE_DeformityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_BE_DeformityCompleted(this, new Get_emr_BE_DeformityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_BE_MovRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_BE_MovRange(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_BE_MovRange", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_BE_MovRangeAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_BE_MovRangeAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_BE_MovRangeAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_BE_MovRangeOperationCompleted == null)) {
                this.Get_emr_BE_MovRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_BE_MovRangeOperationCompleted);
            }
            this.InvokeAsync("Get_emr_BE_MovRange", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_BE_MovRangeOperationCompleted, userState);
        }
        
        private void OnGet_emr_BE_MovRangeOperationCompleted(object arg) {
            if ((this.Get_emr_BE_MovRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_BE_MovRangeCompleted(this, new Get_emr_BE_MovRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_BE_MotorPower", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_BE_MotorPower(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_BE_MotorPower", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_BE_MotorPowerAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_BE_MotorPowerAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_BE_MotorPowerAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_BE_MotorPowerOperationCompleted == null)) {
                this.Get_emr_BE_MotorPowerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_BE_MotorPowerOperationCompleted);
            }
            this.InvokeAsync("Get_emr_BE_MotorPower", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_BE_MotorPowerOperationCompleted, userState);
        }
        
        private void OnGet_emr_BE_MotorPowerOperationCompleted(object arg) {
            if ((this.Get_emr_BE_MotorPowerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_BE_MotorPowerCompleted(this, new Get_emr_BE_MotorPowerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_BE_Sensation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_BE_Sensation(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_BE_Sensation", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_BE_SensationAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_BE_SensationAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_BE_SensationAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_BE_SensationOperationCompleted == null)) {
                this.Get_emr_BE_SensationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_BE_SensationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_BE_Sensation", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_BE_SensationOperationCompleted, userState);
        }
        
        private void OnGet_emr_BE_SensationOperationCompleted(object arg) {
            if ((this.Get_emr_BE_SensationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_BE_SensationCompleted(this, new Get_emr_BE_SensationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_ScanReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_ScanReport(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_ScanReport", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ScanReportAsync(string case_no, string Err) {
            this.Get_emr_ScanReportAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ScanReportAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_ScanReportOperationCompleted == null)) {
                this.Get_emr_ScanReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ScanReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_ScanReport", new object[] {
                        case_no,
                        Err}, this.Get_emr_ScanReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_ScanReportOperationCompleted(object arg) {
            if ((this.Get_emr_ScanReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ScanReportCompleted(this, new Get_emr_ScanReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AllRequisitions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AllRequisitions(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_AllRequisitions", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AllRequisitionsAsync(string case_no, string d_type, string Err) {
            this.Get_emr_AllRequisitionsAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AllRequisitionsAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_AllRequisitionsOperationCompleted == null)) {
                this.Get_emr_AllRequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AllRequisitionsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AllRequisitions", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_AllRequisitionsOperationCompleted, userState);
        }
        
        private void OnGet_emr_AllRequisitionsOperationCompleted(object arg) {
            if ((this.Get_emr_AllRequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AllRequisitionsCompleted(this, new Get_emr_AllRequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DISLIB_Requisitions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DISLIB_Requisitions(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_DISLIB_Requisitions", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DISLIB_RequisitionsAsync(string req_no, string Err) {
            this.Get_emr_DISLIB_RequisitionsAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DISLIB_RequisitionsAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_DISLIB_RequisitionsOperationCompleted == null)) {
                this.Get_emr_DISLIB_RequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DISLIB_RequisitionsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DISLIB_Requisitions", new object[] {
                        req_no,
                        Err}, this.Get_emr_DISLIB_RequisitionsOperationCompleted, userState);
        }
        
        private void OnGet_emr_DISLIB_RequisitionsOperationCompleted(object arg) {
            if ((this.Get_emr_DISLIB_RequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DISLIB_RequisitionsCompleted(this, new Get_emr_DISLIB_RequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_Requisitions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_Requisitions(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_Requisitions", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_RequisitionsAsync(string case_no, string Err) {
            this.Get_emr_Count_RequisitionsAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_RequisitionsAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_RequisitionsOperationCompleted == null)) {
                this.Get_emr_Count_RequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_RequisitionsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_Requisitions", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_RequisitionsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_RequisitionsOperationCompleted(object arg) {
            if ((this.Get_emr_Count_RequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_RequisitionsCompleted(this, new Get_emr_Count_RequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_StaffRequisitions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_StaffRequisitions(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_StaffRequisitions", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_StaffRequisitionsAsync(string req_no, string d_type, string Err) {
            this.Get_emr_StaffRequisitionsAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_StaffRequisitionsAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_StaffRequisitionsOperationCompleted == null)) {
                this.Get_emr_StaffRequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_StaffRequisitionsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_StaffRequisitions", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_StaffRequisitionsOperationCompleted, userState);
        }
        
        private void OnGet_emr_StaffRequisitionsOperationCompleted(object arg) {
            if ((this.Get_emr_StaffRequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_StaffRequisitionsCompleted(this, new Get_emr_StaffRequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_EmployeeDtl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_EmployeeDtl(string case_no, string relation, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_EmployeeDtl", new object[] {
                        case_no,
                        relation,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_EmployeeDtlAsync(string case_no, string relation, string d_type, string Err) {
            this.Get_emr_EmployeeDtlAsync(case_no, relation, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_EmployeeDtlAsync(string case_no, string relation, string d_type, string Err, object userState) {
            if ((this.Get_emr_EmployeeDtlOperationCompleted == null)) {
                this.Get_emr_EmployeeDtlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_EmployeeDtlOperationCompleted);
            }
            this.InvokeAsync("Get_emr_EmployeeDtl", new object[] {
                        case_no,
                        relation,
                        d_type,
                        Err}, this.Get_emr_EmployeeDtlOperationCompleted, userState);
        }
        
        private void OnGet_emr_EmployeeDtlOperationCompleted(object arg) {
            if ((this.Get_emr_EmployeeDtlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_EmployeeDtlCompleted(this, new Get_emr_EmployeeDtlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_ServiceDesc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_ServiceDesc(string ser_code, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_ServiceDesc", new object[] {
                        ser_code,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ServiceDescAsync(string ser_code, string d_type, string Err) {
            this.Get_emr_ServiceDescAsync(ser_code, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ServiceDescAsync(string ser_code, string d_type, string Err, object userState) {
            if ((this.Get_emr_ServiceDescOperationCompleted == null)) {
                this.Get_emr_ServiceDescOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ServiceDescOperationCompleted);
            }
            this.InvokeAsync("Get_emr_ServiceDesc", new object[] {
                        ser_code,
                        d_type,
                        Err}, this.Get_emr_ServiceDescOperationCompleted, userState);
        }
        
        private void OnGet_emr_ServiceDescOperationCompleted(object arg) {
            if ((this.Get_emr_ServiceDescCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ServiceDescCompleted(this, new Get_emr_ServiceDescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Addendum_D", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Addendum_D(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_Addendum_D", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Addendum_DAsync(string req_no, string d_type, string Err) {
            this.Get_emr_Addendum_DAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Addendum_DAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_Addendum_DOperationCompleted == null)) {
                this.Get_emr_Addendum_DOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Addendum_DOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Addendum_D", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_Addendum_DOperationCompleted, userState);
        }
        
        private void OnGet_emr_Addendum_DOperationCompleted(object arg) {
            if ((this.Get_emr_Addendum_DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Addendum_DCompleted(this, new Get_emr_Addendum_DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Addendum_BF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Addendum_BF(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_Addendum_BF", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Addendum_BFAsync(string req_no, string d_type, string Err) {
            this.Get_emr_Addendum_BFAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Addendum_BFAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_Addendum_BFOperationCompleted == null)) {
                this.Get_emr_Addendum_BFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Addendum_BFOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Addendum_BF", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_Addendum_BFOperationCompleted, userState);
        }
        
        private void OnGet_emr_Addendum_BFOperationCompleted(object arg) {
            if ((this.Get_emr_Addendum_BFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Addendum_BFCompleted(this, new Get_emr_Addendum_BFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Addendum_CY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Addendum_CY(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_Addendum_CY", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Addendum_CYAsync(string req_no, string d_type, string Err) {
            this.Get_emr_Addendum_CYAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Addendum_CYAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_Addendum_CYOperationCompleted == null)) {
                this.Get_emr_Addendum_CYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Addendum_CYOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Addendum_CY", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_Addendum_CYOperationCompleted, userState);
        }
        
        private void OnGet_emr_Addendum_CYOperationCompleted(object arg) {
            if ((this.Get_emr_Addendum_CYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Addendum_CYCompleted(this, new Get_emr_Addendum_CYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Addendum_FA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Addendum_FA(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_Addendum_FA", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Addendum_FAAsync(string req_no, string d_type, string Err) {
            this.Get_emr_Addendum_FAAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Addendum_FAAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_Addendum_FAOperationCompleted == null)) {
                this.Get_emr_Addendum_FAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Addendum_FAOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Addendum_FA", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_Addendum_FAOperationCompleted, userState);
        }
        
        private void OnGet_emr_Addendum_FAOperationCompleted(object arg) {
            if ((this.Get_emr_Addendum_FACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Addendum_FACompleted(this, new Get_emr_Addendum_FACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Addendum_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Addendum_R(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_Addendum_R", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Addendum_RAsync(string req_no, string d_type, string Err) {
            this.Get_emr_Addendum_RAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Addendum_RAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_Addendum_ROperationCompleted == null)) {
                this.Get_emr_Addendum_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Addendum_ROperationCompleted);
            }
            this.InvokeAsync("Get_emr_Addendum_R", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_Addendum_ROperationCompleted, userState);
        }
        
        private void OnGet_emr_Addendum_ROperationCompleted(object arg) {
            if ((this.Get_emr_Addendum_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Addendum_RCompleted(this, new Get_emr_Addendum_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_RSCBC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_RSCBC(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_RSCBC", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_RSCBCAsync(string req_no, string d_type, string Err) {
            this.Get_emr_RSCBCAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_RSCBCAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_RSCBCOperationCompleted == null)) {
                this.Get_emr_RSCBCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_RSCBCOperationCompleted);
            }
            this.InvokeAsync("Get_emr_RSCBC", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_RSCBCOperationCompleted, userState);
        }
        
        private void OnGet_emr_RSCBCOperationCompleted(object arg) {
            if ((this.Get_emr_RSCBCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_RSCBCCompleted(this, new Get_emr_RSCBCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_RSCBC2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_RSCBC2(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_RSCBC2", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_RSCBC2Async(string req_no, string d_type, string Err) {
            this.Get_emr_RSCBC2Async(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_RSCBC2Async(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_RSCBC2OperationCompleted == null)) {
                this.Get_emr_RSCBC2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_RSCBC2OperationCompleted);
            }
            this.InvokeAsync("Get_emr_RSCBC2", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_RSCBC2OperationCompleted, userState);
        }
        
        private void OnGet_emr_RSCBC2OperationCompleted(object arg) {
            if ((this.Get_emr_RSCBC2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_RSCBC2Completed(this, new Get_emr_RSCBC2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DmulProce", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DmulProce(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DmulProce", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DmulProceAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DmulProceAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DmulProceAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DmulProceOperationCompleted == null)) {
                this.Get_emr_DmulProceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DmulProceOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DmulProce", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DmulProceOperationCompleted, userState);
        }
        
        private void OnGet_emr_DmulProceOperationCompleted(object arg) {
            if ((this.Get_emr_DmulProceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DmulProceCompleted(this, new Get_emr_DmulProceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Radiology_AllRequisitions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Radiology_AllRequisitions(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_Radiology_AllRequisitions", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Radiology_AllRequisitionsAsync(string case_no, string d_type, string Err) {
            this.Get_emr_Radiology_AllRequisitionsAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Radiology_AllRequisitionsAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_Radiology_AllRequisitionsOperationCompleted == null)) {
                this.Get_emr_Radiology_AllRequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Radiology_AllRequisitionsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Radiology_AllRequisitions", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_Radiology_AllRequisitionsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Radiology_AllRequisitionsOperationCompleted(object arg) {
            if ((this.Get_emr_Radiology_AllRequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Radiology_AllRequisitionsCompleted(this, new Get_emr_Radiology_AllRequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_Radiology_Requisitions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_Radiology_Requisitions(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_Radiology_Requisitions", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_Radiology_RequisitionsAsync(string case_no, string Err) {
            this.Get_emr_Count_Radiology_RequisitionsAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_Radiology_RequisitionsAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_Radiology_RequisitionsOperationCompleted == null)) {
                this.Get_emr_Count_Radiology_RequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_Radiology_RequisitionsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_Radiology_Requisitions", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_Radiology_RequisitionsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_Radiology_RequisitionsOperationCompleted(object arg) {
            if ((this.Get_emr_Count_Radiology_RequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_Radiology_RequisitionsCompleted(this, new Get_emr_Count_Radiology_RequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_NuclMed_AllRequisitions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_NuclMed_AllRequisitions(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_NuclMed_AllRequisitions", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_NuclMed_AllRequisitionsAsync(string case_no, string Err) {
            this.Get_emr_NuclMed_AllRequisitionsAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_NuclMed_AllRequisitionsAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_NuclMed_AllRequisitionsOperationCompleted == null)) {
                this.Get_emr_NuclMed_AllRequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_NuclMed_AllRequisitionsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_NuclMed_AllRequisitions", new object[] {
                        case_no,
                        Err}, this.Get_emr_NuclMed_AllRequisitionsOperationCompleted, userState);
        }
        
        private void OnGet_emr_NuclMed_AllRequisitionsOperationCompleted(object arg) {
            if ((this.Get_emr_NuclMed_AllRequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_NuclMed_AllRequisitionsCompleted(this, new Get_emr_NuclMed_AllRequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_NuclMed_Report", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_NuclMed_Report(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_NuclMed_Report", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_NuclMed_ReportAsync(string req_no, string d_type, string Err) {
            this.Get_emr_NuclMed_ReportAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_NuclMed_ReportAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_NuclMed_ReportOperationCompleted == null)) {
                this.Get_emr_NuclMed_ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_NuclMed_ReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_NuclMed_Report", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_NuclMed_ReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_NuclMed_ReportOperationCompleted(object arg) {
            if ((this.Get_emr_NuclMed_ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_NuclMed_ReportCompleted(this, new Get_emr_NuclMed_ReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_NuclMed_Requisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_NuclMed_Requisition(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_NuclMed_Requisition", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_NuclMed_RequisitionAsync(string req_no, string d_type, string Err) {
            this.Get_emr_NuclMed_RequisitionAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_NuclMed_RequisitionAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_NuclMed_RequisitionOperationCompleted == null)) {
                this.Get_emr_NuclMed_RequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_NuclMed_RequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_NuclMed_Requisition", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_NuclMed_RequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_NuclMed_RequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_NuclMed_RequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_NuclMed_RequisitionCompleted(this, new Get_emr_NuclMed_RequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AllLab_Requisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AllLab_Requisition(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_AllLab_Requisition", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AllLab_RequisitionAsync(string case_no, string d_type, string Err) {
            this.Get_emr_AllLab_RequisitionAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AllLab_RequisitionAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_AllLab_RequisitionOperationCompleted == null)) {
                this.Get_emr_AllLab_RequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AllLab_RequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AllLab_Requisition", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_AllLab_RequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_AllLab_RequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_AllLab_RequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AllLab_RequisitionCompleted(this, new Get_emr_AllLab_RequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_LabRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_LabRequisition(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_LabRequisition", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_LabRequisitionAsync(string case_no, string Err) {
            this.Get_emr_Count_LabRequisitionAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_LabRequisitionAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_LabRequisitionOperationCompleted == null)) {
                this.Get_emr_Count_LabRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_LabRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_LabRequisition", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_LabRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_LabRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_Count_LabRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_LabRequisitionCompleted(this, new Get_emr_Count_LabRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Surgical_AllRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Surgical_AllRequisition(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_Surgical_AllRequisition", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Surgical_AllRequisitionAsync(string case_no, string d_type, string Err) {
            this.Get_emr_Surgical_AllRequisitionAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Surgical_AllRequisitionAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_Surgical_AllRequisitionOperationCompleted == null)) {
                this.Get_emr_Surgical_AllRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Surgical_AllRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Surgical_AllRequisition", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_Surgical_AllRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_Surgical_AllRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_Surgical_AllRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Surgical_AllRequisitionCompleted(this, new Get_emr_Surgical_AllRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_SurgicalRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_SurgicalRequisition(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_SurgicalRequisition", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_SurgicalRequisitionAsync(string case_no, string Err) {
            this.Get_emr_Count_SurgicalRequisitionAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_SurgicalRequisitionAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_SurgicalRequisitionOperationCompleted == null)) {
                this.Get_emr_Count_SurgicalRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_SurgicalRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_SurgicalRequisition", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_SurgicalRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_SurgicalRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_Count_SurgicalRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_SurgicalRequisitionCompleted(this, new Get_emr_Count_SurgicalRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CytologyRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CytologyRequisition(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_CytologyRequisition", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CytologyRequisitionAsync(string case_no, string d_type, string Err) {
            this.Get_emr_CytologyRequisitionAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CytologyRequisitionAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_CytologyRequisitionOperationCompleted == null)) {
                this.Get_emr_CytologyRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CytologyRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CytologyRequisition", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_CytologyRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_CytologyRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_CytologyRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CytologyRequisitionCompleted(this, new Get_emr_CytologyRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_CytologyRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_CytologyRequisition(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_CytologyRequisition", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_CytologyRequisitionAsync(string case_no, string Err) {
            this.Get_emr_Count_CytologyRequisitionAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_CytologyRequisitionAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_CytologyRequisitionOperationCompleted == null)) {
                this.Get_emr_Count_CytologyRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_CytologyRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_CytologyRequisition", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_CytologyRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_CytologyRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_Count_CytologyRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_CytologyRequisitionCompleted(this, new Get_emr_Count_CytologyRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CytoRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CytoRequisition(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_CytoRequisition", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CytoRequisitionAsync(string case_no, string d_type, string Err) {
            this.Get_emr_CytoRequisitionAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CytoRequisitionAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_CytoRequisitionOperationCompleted == null)) {
                this.Get_emr_CytoRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CytoRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CytoRequisition", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_CytoRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_CytoRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_CytoRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CytoRequisitionCompleted(this, new Get_emr_CytoRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_CytoRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_CytoRequisition(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_CytoRequisition", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_CytoRequisitionAsync(string case_no, string Err) {
            this.Get_emr_Count_CytoRequisitionAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_CytoRequisitionAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_CytoRequisitionOperationCompleted == null)) {
                this.Get_emr_Count_CytoRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_CytoRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_CytoRequisition", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_CytoRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_CytoRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_Count_CytoRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_CytoRequisitionCompleted(this, new Get_emr_Count_CytoRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_FNACRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_FNACRequisition(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_FNACRequisition", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_FNACRequisitionAsync(string case_no, string d_type, string Err) {
            this.Get_emr_FNACRequisitionAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_FNACRequisitionAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_FNACRequisitionOperationCompleted == null)) {
                this.Get_emr_FNACRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_FNACRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_FNACRequisition", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_FNACRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_FNACRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_FNACRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_FNACRequisitionCompleted(this, new Get_emr_FNACRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_FNACRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_FNACRequisition(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_FNACRequisition", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_FNACRequisitionAsync(string case_no, string Err) {
            this.Get_emr_Count_FNACRequisitionAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_FNACRequisitionAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_FNACRequisitionOperationCompleted == null)) {
                this.Get_emr_Count_FNACRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_FNACRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_FNACRequisition", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_FNACRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_FNACRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_Count_FNACRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_FNACRequisitionCompleted(this, new Get_emr_Count_FNACRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_BIOChemRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_BIOChemRequisition(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_BIOChemRequisition", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_BIOChemRequisitionAsync(string case_no, string d_type, string Err) {
            this.Get_emr_BIOChemRequisitionAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_BIOChemRequisitionAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_BIOChemRequisitionOperationCompleted == null)) {
                this.Get_emr_BIOChemRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_BIOChemRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_BIOChemRequisition", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_BIOChemRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_BIOChemRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_BIOChemRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_BIOChemRequisitionCompleted(this, new Get_emr_BIOChemRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_BIOChemRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_BIOChemRequisition(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_BIOChemRequisition", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_BIOChemRequisitionAsync(string case_no, string Err) {
            this.Get_emr_Count_BIOChemRequisitionAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_BIOChemRequisitionAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_BIOChemRequisitionOperationCompleted == null)) {
                this.Get_emr_Count_BIOChemRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_BIOChemRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_BIOChemRequisition", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_BIOChemRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_BIOChemRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_Count_BIOChemRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_BIOChemRequisitionCompleted(this, new Get_emr_Count_BIOChemRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_TumourRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_TumourRequisition(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_TumourRequisition", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_TumourRequisitionAsync(string case_no, string d_type, string Err) {
            this.Get_emr_TumourRequisitionAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_TumourRequisitionAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_TumourRequisitionOperationCompleted == null)) {
                this.Get_emr_TumourRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_TumourRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_TumourRequisition", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_TumourRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_TumourRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_TumourRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_TumourRequisitionCompleted(this, new Get_emr_TumourRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_TumourRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_TumourRequisition(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_TumourRequisition", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_TumourRequisitionAsync(string case_no, string Err) {
            this.Get_emr_Count_TumourRequisitionAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_TumourRequisitionAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_TumourRequisitionOperationCompleted == null)) {
                this.Get_emr_Count_TumourRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_TumourRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_TumourRequisition", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_TumourRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_TumourRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_Count_TumourRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_TumourRequisitionCompleted(this, new Get_emr_Count_TumourRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_MicroBioRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_MicroBioRequisition(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_MicroBioRequisition", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_MicroBioRequisitionAsync(string case_no, string d_type, string Err) {
            this.Get_emr_MicroBioRequisitionAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_MicroBioRequisitionAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_MicroBioRequisitionOperationCompleted == null)) {
                this.Get_emr_MicroBioRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_MicroBioRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_MicroBioRequisition", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_MicroBioRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_MicroBioRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_MicroBioRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_MicroBioRequisitionCompleted(this, new Get_emr_MicroBioRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_MicroBioRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_MicroBioRequisition(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_MicroBioRequisition", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_MicroBioRequisitionAsync(string case_no, string Err) {
            this.Get_emr_Count_MicroBioRequisitionAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_MicroBioRequisitionAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_MicroBioRequisitionOperationCompleted == null)) {
                this.Get_emr_Count_MicroBioRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_MicroBioRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_MicroBioRequisition", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_MicroBioRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_MicroBioRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_Count_MicroBioRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_MicroBioRequisitionCompleted(this, new Get_emr_Count_MicroBioRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AllRequisition_Rpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AllRequisition_Rpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_AllRequisition_Rpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AllRequisition_RptAsync(string case_no, string Err) {
            this.Get_emr_AllRequisition_RptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AllRequisition_RptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_AllRequisition_RptOperationCompleted == null)) {
                this.Get_emr_AllRequisition_RptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AllRequisition_RptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AllRequisition_Rpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_AllRequisition_RptOperationCompleted, userState);
        }
        
        private void OnGet_emr_AllRequisition_RptOperationCompleted(object arg) {
            if ((this.Get_emr_AllRequisition_RptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AllRequisition_RptCompleted(this, new Get_emr_AllRequisition_RptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AllRequisition_Rpt_dType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AllRequisition_Rpt_dType(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_AllRequisition_Rpt_dType", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AllRequisition_Rpt_dTypeAsync(string case_no, string d_type, string Err) {
            this.Get_emr_AllRequisition_Rpt_dTypeAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AllRequisition_Rpt_dTypeAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_AllRequisition_Rpt_dTypeOperationCompleted == null)) {
                this.Get_emr_AllRequisition_Rpt_dTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AllRequisition_Rpt_dTypeOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AllRequisition_Rpt_dType", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_AllRequisition_Rpt_dTypeOperationCompleted, userState);
        }
        
        private void OnGet_emr_AllRequisition_Rpt_dTypeOperationCompleted(object arg) {
            if ((this.Get_emr_AllRequisition_Rpt_dTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AllRequisition_Rpt_dTypeCompleted(this, new Get_emr_AllRequisition_Rpt_dTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AllRequisition_Report_Dtl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AllRequisition_Report_Dtl(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_AllRequisition_Report_Dtl", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AllRequisition_Report_DtlAsync(string req_no, string d_type, string Err) {
            this.Get_emr_AllRequisition_Report_DtlAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AllRequisition_Report_DtlAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_AllRequisition_Report_DtlOperationCompleted == null)) {
                this.Get_emr_AllRequisition_Report_DtlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AllRequisition_Report_DtlOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AllRequisition_Report_Dtl", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_AllRequisition_Report_DtlOperationCompleted, userState);
        }
        
        private void OnGet_emr_AllRequisition_Report_DtlOperationCompleted(object arg) {
            if ((this.Get_emr_AllRequisition_Report_DtlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AllRequisition_Report_DtlCompleted(this, new Get_emr_AllRequisition_Report_DtlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AllRequisition_MolecuLAB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AllRequisition_MolecuLAB(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_AllRequisition_MolecuLAB", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AllRequisition_MolecuLABAsync(string req_no, string Err) {
            this.Get_emr_AllRequisition_MolecuLABAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AllRequisition_MolecuLABAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_AllRequisition_MolecuLABOperationCompleted == null)) {
                this.Get_emr_AllRequisition_MolecuLABOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AllRequisition_MolecuLABOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AllRequisition_MolecuLAB", new object[] {
                        req_no,
                        Err}, this.Get_emr_AllRequisition_MolecuLABOperationCompleted, userState);
        }
        
        private void OnGet_emr_AllRequisition_MolecuLABOperationCompleted(object arg) {
            if ((this.Get_emr_AllRequisition_MolecuLABCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AllRequisition_MolecuLABCompleted(this, new Get_emr_AllRequisition_MolecuLABCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DFReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DFReport(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DFReport", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DFReportAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DFReportAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DFReportAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DFReportOperationCompleted == null)) {
                this.Get_emr_DFReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DFReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DFReport", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DFReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_DFReportOperationCompleted(object arg) {
            if ((this.Get_emr_DFReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DFReportCompleted(this, new Get_emr_DFReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DRequisition(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DRequisition", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DRequisitionAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DRequisitionAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DRequisitionAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DRequisitionOperationCompleted == null)) {
                this.Get_emr_DRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DRequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DRequisition", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DRequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_DRequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_DRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DRequisitionCompleted(this, new Get_emr_DRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_RTIMELOG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_RTIMELOG(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_RTIMELOG", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_RTIMELOGAsync(string req_no, string d_type, string Err) {
            this.Get_emr_RTIMELOGAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_RTIMELOGAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_RTIMELOGOperationCompleted == null)) {
                this.Get_emr_RTIMELOGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_RTIMELOGOperationCompleted);
            }
            this.InvokeAsync("Get_emr_RTIMELOG", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_RTIMELOGOperationCompleted, userState);
        }
        
        private void OnGet_emr_RTIMELOGOperationCompleted(object arg) {
            if ((this.Get_emr_RTIMELOGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_RTIMELOGCompleted(this, new Get_emr_RTIMELOGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CYTOGREPRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CYTOGREPRT(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_CYTOGREPRT", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CYTOGREPRTAsync(string req_no, string d_type, string Err) {
            this.Get_emr_CYTOGREPRTAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CYTOGREPRTAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_CYTOGREPRTOperationCompleted == null)) {
                this.Get_emr_CYTOGREPRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CYTOGREPRTOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CYTOGREPRT", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_CYTOGREPRTOperationCompleted, userState);
        }
        
        private void OnGet_emr_CYTOGREPRTOperationCompleted(object arg) {
            if ((this.Get_emr_CYTOGREPRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CYTOGREPRTCompleted(this, new Get_emr_CYTOGREPRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DFNREPORT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DFNREPORT(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DFNREPORT", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DFNREPORTAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DFNREPORTAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DFNREPORTAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DFNREPORTOperationCompleted == null)) {
                this.Get_emr_DFNREPORTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DFNREPORTOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DFNREPORT", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DFNREPORTOperationCompleted, userState);
        }
        
        private void OnGet_emr_DFNREPORTOperationCompleted(object arg) {
            if ((this.Get_emr_DFNREPORTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DFNREPORTCompleted(this, new Get_emr_DFNREPORTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMPROCEDUR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMPROCEDUR(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMPROCEDUR", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMPROCEDURAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DMPROCEDURAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMPROCEDURAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DMPROCEDUROperationCompleted == null)) {
                this.Get_emr_DMPROCEDUROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMPROCEDUROperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMPROCEDUR", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DMPROCEDUROperationCompleted, userState);
        }
        
        private void OnGet_emr_DMPROCEDUROperationCompleted(object arg) {
            if ((this.Get_emr_DMPROCEDURCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMPROCEDURCompleted(this, new Get_emr_DMPROCEDURCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMPROCEDUR_ELTEST", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMPROCEDUR_ELTEST(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMPROCEDUR_ELTEST", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMPROCEDUR_ELTESTAsync(string req_no, string Err) {
            this.Get_emr_DMPROCEDUR_ELTESTAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMPROCEDUR_ELTESTAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_DMPROCEDUR_ELTESTOperationCompleted == null)) {
                this.Get_emr_DMPROCEDUR_ELTESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMPROCEDUR_ELTESTOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMPROCEDUR_ELTEST", new object[] {
                        req_no,
                        Err}, this.Get_emr_DMPROCEDUR_ELTESTOperationCompleted, userState);
        }
        
        private void OnGet_emr_DMPROCEDUR_ELTESTOperationCompleted(object arg) {
            if ((this.Get_emr_DMPROCEDUR_ELTESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMPROCEDUR_ELTESTCompleted(this, new Get_emr_DMPROCEDUR_ELTESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMBCCOMM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMBCCOMM(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMBCCOMM", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMBCCOMMAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DMBCCOMMAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMBCCOMMAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DMBCCOMMOperationCompleted == null)) {
                this.Get_emr_DMBCCOMMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMBCCOMMOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMBCCOMM", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DMBCCOMMOperationCompleted, userState);
        }
        
        private void OnGet_emr_DMBCCOMMOperationCompleted(object arg) {
            if ((this.Get_emr_DMBCCOMMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMBCCOMMCompleted(this, new Get_emr_DMBCCOMMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DHEMCYTO1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DHEMCYTO1(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_DHEMCYTO1", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DHEMCYTO1Async(string req_no, string Err) {
            this.Get_emr_DHEMCYTO1Async(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DHEMCYTO1Async(string req_no, string Err, object userState) {
            if ((this.Get_emr_DHEMCYTO1OperationCompleted == null)) {
                this.Get_emr_DHEMCYTO1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DHEMCYTO1OperationCompleted);
            }
            this.InvokeAsync("Get_emr_DHEMCYTO1", new object[] {
                        req_no,
                        Err}, this.Get_emr_DHEMCYTO1OperationCompleted, userState);
        }
        
        private void OnGet_emr_DHEMCYTO1OperationCompleted(object arg) {
            if ((this.Get_emr_DHEMCYTO1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DHEMCYTO1Completed(this, new Get_emr_DHEMCYTO1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DHEMCPDET", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DHEMCPDET(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_DHEMCPDET", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DHEMCPDETAsync(string req_no, string Err) {
            this.Get_emr_DHEMCPDETAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DHEMCPDETAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_DHEMCPDETOperationCompleted == null)) {
                this.Get_emr_DHEMCPDETOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DHEMCPDETOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DHEMCPDET", new object[] {
                        req_no,
                        Err}, this.Get_emr_DHEMCPDETOperationCompleted, userState);
        }
        
        private void OnGet_emr_DHEMCPDETOperationCompleted(object arg) {
            if ((this.Get_emr_DHEMCPDETCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DHEMCPDETCompleted(this, new Get_emr_DHEMCPDETCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_HINTERFACE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_HINTERFACE(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_HINTERFACE", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_HINTERFACEAsync(string req_no, string Err) {
            this.Get_emr_HINTERFACEAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_HINTERFACEAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_HINTERFACEOperationCompleted == null)) {
                this.Get_emr_HINTERFACEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_HINTERFACEOperationCompleted);
            }
            this.InvokeAsync("Get_emr_HINTERFACE", new object[] {
                        req_no,
                        Err}, this.Get_emr_HINTERFACEOperationCompleted, userState);
        }
        
        private void OnGet_emr_HINTERFACEOperationCompleted(object arg) {
            if ((this.Get_emr_HINTERFACECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_HINTERFACECompleted(this, new Get_emr_HINTERFACECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DHEMCBCDET", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DHEMCBCDET(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_DHEMCBCDET", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DHEMCBCDETAsync(string req_no, string Err) {
            this.Get_emr_DHEMCBCDETAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DHEMCBCDETAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_DHEMCBCDETOperationCompleted == null)) {
                this.Get_emr_DHEMCBCDETOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DHEMCBCDETOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DHEMCBCDET", new object[] {
                        req_no,
                        Err}, this.Get_emr_DHEMCBCDETOperationCompleted, userState);
        }
        
        private void OnGet_emr_DHEMCBCDETOperationCompleted(object arg) {
            if ((this.Get_emr_DHEMCBCDETCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DHEMCBCDETCompleted(this, new Get_emr_DHEMCBCDETCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_REPORTHLF1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_REPORTHLF1(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_REPORTHLF1", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_REPORTHLF1Async(string req_no, string Err) {
            this.Get_emr_REPORTHLF1Async(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_REPORTHLF1Async(string req_no, string Err, object userState) {
            if ((this.Get_emr_REPORTHLF1OperationCompleted == null)) {
                this.Get_emr_REPORTHLF1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_REPORTHLF1OperationCompleted);
            }
            this.InvokeAsync("Get_emr_REPORTHLF1", new object[] {
                        req_no,
                        Err}, this.Get_emr_REPORTHLF1OperationCompleted, userState);
        }
        
        private void OnGet_emr_REPORTHLF1OperationCompleted(object arg) {
            if ((this.Get_emr_REPORTHLF1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_REPORTHLF1Completed(this, new Get_emr_REPORTHLF1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_REPORTHLF1_ObserTypewise", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_REPORTHLF1_ObserTypewise(string req_no, string obser_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_REPORTHLF1_ObserTypewise", new object[] {
                        req_no,
                        obser_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_REPORTHLF1_ObserTypewiseAsync(string req_no, string obser_type, string Err) {
            this.Get_emr_REPORTHLF1_ObserTypewiseAsync(req_no, obser_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_REPORTHLF1_ObserTypewiseAsync(string req_no, string obser_type, string Err, object userState) {
            if ((this.Get_emr_REPORTHLF1_ObserTypewiseOperationCompleted == null)) {
                this.Get_emr_REPORTHLF1_ObserTypewiseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_REPORTHLF1_ObserTypewiseOperationCompleted);
            }
            this.InvokeAsync("Get_emr_REPORTHLF1_ObserTypewise", new object[] {
                        req_no,
                        obser_type,
                        Err}, this.Get_emr_REPORTHLF1_ObserTypewiseOperationCompleted, userState);
        }
        
        private void OnGet_emr_REPORTHLF1_ObserTypewiseOperationCompleted(object arg) {
            if ((this.Get_emr_REPORTHLF1_ObserTypewiseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_REPORTHLF1_ObserTypewiseCompleted(this, new Get_emr_REPORTHLF1_ObserTypewiseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_HINTERFACE_MachineNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_HINTERFACE_MachineNo(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_HINTERFACE_MachineNo", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_HINTERFACE_MachineNoAsync(string req_no, string Err) {
            this.Get_emr_HINTERFACE_MachineNoAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_HINTERFACE_MachineNoAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_HINTERFACE_MachineNoOperationCompleted == null)) {
                this.Get_emr_HINTERFACE_MachineNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_HINTERFACE_MachineNoOperationCompleted);
            }
            this.InvokeAsync("Get_emr_HINTERFACE_MachineNo", new object[] {
                        req_no,
                        Err}, this.Get_emr_HINTERFACE_MachineNoOperationCompleted, userState);
        }
        
        private void OnGet_emr_HINTERFACE_MachineNoOperationCompleted(object arg) {
            if ((this.Get_emr_HINTERFACE_MachineNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_HINTERFACE_MachineNoCompleted(this, new Get_emr_HINTERFACE_MachineNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_REPORTHLLF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_REPORTHLLF(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_REPORTHLLF", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_REPORTHLLFAsync(string req_no, string Err) {
            this.Get_emr_REPORTHLLFAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_REPORTHLLFAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_REPORTHLLFOperationCompleted == null)) {
                this.Get_emr_REPORTHLLFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_REPORTHLLFOperationCompleted);
            }
            this.InvokeAsync("Get_emr_REPORTHLLF", new object[] {
                        req_no,
                        Err}, this.Get_emr_REPORTHLLFOperationCompleted, userState);
        }
        
        private void OnGet_emr_REPORTHLLFOperationCompleted(object arg) {
            if ((this.Get_emr_REPORTHLLFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_REPORTHLLFCompleted(this, new Get_emr_REPORTHLLFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DCBCREPA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DCBCREPA(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_DCBCREPA", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DCBCREPAAsync(string req_no, string Err) {
            this.Get_emr_DCBCREPAAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DCBCREPAAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_DCBCREPAOperationCompleted == null)) {
                this.Get_emr_DCBCREPAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DCBCREPAOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DCBCREPA", new object[] {
                        req_no,
                        Err}, this.Get_emr_DCBCREPAOperationCompleted, userState);
        }
        
        private void OnGet_emr_DCBCREPAOperationCompleted(object arg) {
            if ((this.Get_emr_DCBCREPACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DCBCREPACompleted(this, new Get_emr_DCBCREPACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DBMAREPORT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DBMAREPORT(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_DBMAREPORT", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DBMAREPORTAsync(string req_no, string Err) {
            this.Get_emr_DBMAREPORTAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DBMAREPORTAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_DBMAREPORTOperationCompleted == null)) {
                this.Get_emr_DBMAREPORTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DBMAREPORTOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DBMAREPORT", new object[] {
                        req_no,
                        Err}, this.Get_emr_DBMAREPORTOperationCompleted, userState);
        }
        
        private void OnGet_emr_DBMAREPORTOperationCompleted(object arg) {
            if ((this.Get_emr_DBMAREPORTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DBMAREPORTCompleted(this, new Get_emr_DBMAREPORTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DBMASUBREP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DBMASUBREP(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_DBMASUBREP", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DBMASUBREPAsync(string req_no, string Err) {
            this.Get_emr_DBMASUBREPAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DBMASUBREPAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_DBMASUBREPOperationCompleted == null)) {
                this.Get_emr_DBMASUBREPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DBMASUBREPOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DBMASUBREP", new object[] {
                        req_no,
                        Err}, this.Get_emr_DBMASUBREPOperationCompleted, userState);
        }
        
        private void OnGet_emr_DBMASUBREPOperationCompleted(object arg) {
            if ((this.Get_emr_DBMASUBREPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DBMASUBREPCompleted(this, new Get_emr_DBMASUBREPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DHBFREPORT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DHBFREPORT(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_DHBFREPORT", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DHBFREPORTAsync(string req_no, string Err) {
            this.Get_emr_DHBFREPORTAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DHBFREPORTAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_DHBFREPORTOperationCompleted == null)) {
                this.Get_emr_DHBFREPORTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DHBFREPORTOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DHBFREPORT", new object[] {
                        req_no,
                        Err}, this.Get_emr_DHBFREPORTOperationCompleted, userState);
        }
        
        private void OnGet_emr_DHBFREPORTOperationCompleted(object arg) {
            if ((this.Get_emr_DHBFREPORTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DHBFREPORTCompleted(this, new Get_emr_DHBFREPORTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DIMBIOCHEL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DIMBIOCHEL(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DIMBIOCHEL", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DIMBIOCHELAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DIMBIOCHELAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DIMBIOCHELAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DIMBIOCHELOperationCompleted == null)) {
                this.Get_emr_DIMBIOCHELOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DIMBIOCHELOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DIMBIOCHEL", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DIMBIOCHELOperationCompleted, userState);
        }
        
        private void OnGet_emr_DIMBIOCHELOperationCompleted(object arg) {
            if ((this.Get_emr_DIMBIOCHELCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DIMBIOCHELCompleted(this, new Get_emr_DIMBIOCHELCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DIMBIOCHE1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DIMBIOCHE1(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DIMBIOCHE1", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DIMBIOCHE1Async(string req_no, string d_type, string Err) {
            this.Get_emr_DIMBIOCHE1Async(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DIMBIOCHE1Async(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DIMBIOCHE1OperationCompleted == null)) {
                this.Get_emr_DIMBIOCHE1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DIMBIOCHE1OperationCompleted);
            }
            this.InvokeAsync("Get_emr_DIMBIOCHE1", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DIMBIOCHE1OperationCompleted, userState);
        }
        
        private void OnGet_emr_DIMBIOCHE1OperationCompleted(object arg) {
            if ((this.Get_emr_DIMBIOCHE1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DIMBIOCHE1Completed(this, new Get_emr_DIMBIOCHE1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMYCOBACTE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMYCOBACTE(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMYCOBACTE", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMYCOBACTEAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DMYCOBACTEAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMYCOBACTEAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DMYCOBACTEOperationCompleted == null)) {
                this.Get_emr_DMYCOBACTEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMYCOBACTEOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMYCOBACTE", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DMYCOBACTEOperationCompleted, userState);
        }
        
        private void OnGet_emr_DMYCOBACTEOperationCompleted(object arg) {
            if ((this.Get_emr_DMYCOBACTECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMYCOBACTECompleted(this, new Get_emr_DMYCOBACTECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_MICROPROCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_MICROPROCE(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_MICROPROCE", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_MICROPROCEAsync(string req_no, string Err) {
            this.Get_emr_MICROPROCEAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_MICROPROCEAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_MICROPROCEOperationCompleted == null)) {
                this.Get_emr_MICROPROCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_MICROPROCEOperationCompleted);
            }
            this.InvokeAsync("Get_emr_MICROPROCE", new object[] {
                        req_no,
                        Err}, this.Get_emr_MICROPROCEOperationCompleted, userState);
        }
        
        private void OnGet_emr_MICROPROCEOperationCompleted(object arg) {
            if ((this.Get_emr_MICROPROCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_MICROPROCECompleted(this, new Get_emr_MICROPROCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMOPRISMER", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMOPRISMER(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMOPRISMER", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMOPRISMERAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DMOPRISMERAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMOPRISMERAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DMOPRISMEROperationCompleted == null)) {
                this.Get_emr_DMOPRISMEROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMOPRISMEROperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMOPRISMER", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DMOPRISMEROperationCompleted, userState);
        }
        
        private void OnGet_emr_DMOPRISMEROperationCompleted(object arg) {
            if ((this.Get_emr_DMOPRISMERCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMOPRISMERCompleted(this, new Get_emr_DMOPRISMERCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMSPONANTI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMSPONANTI(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMSPONANTI", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMSPONANTIAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DMSPONANTIAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMSPONANTIAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DMSPONANTIOperationCompleted == null)) {
                this.Get_emr_DMSPONANTIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMSPONANTIOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMSPONANTI", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DMSPONANTIOperationCompleted, userState);
        }
        
        private void OnGet_emr_DMSPONANTIOperationCompleted(object arg) {
            if ((this.Get_emr_DMSPONANTICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMSPONANTICompleted(this, new Get_emr_DMSPONANTICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMBAANTI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMBAANTI(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMBAANTI", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMBAANTIAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DMBAANTIAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMBAANTIAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DMBAANTIOperationCompleted == null)) {
                this.Get_emr_DMBAANTIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMBAANTIOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMBAANTI", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DMBAANTIOperationCompleted, userState);
        }
        
        private void OnGet_emr_DMBAANTIOperationCompleted(object arg) {
            if ((this.Get_emr_DMBAANTICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMBAANTICompleted(this, new Get_emr_DMBAANTICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMBAANTI_ANTIBIOTIC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMBAANTI_ANTIBIOTIC(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMBAANTI_ANTIBIOTIC", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMBAANTI_ANTIBIOTICAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DMBAANTI_ANTIBIOTICAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMBAANTI_ANTIBIOTICAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DMBAANTI_ANTIBIOTICOperationCompleted == null)) {
                this.Get_emr_DMBAANTI_ANTIBIOTICOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMBAANTI_ANTIBIOTICOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMBAANTI_ANTIBIOTIC", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DMBAANTI_ANTIBIOTICOperationCompleted, userState);
        }
        
        private void OnGet_emr_DMBAANTI_ANTIBIOTICOperationCompleted(object arg) {
            if ((this.Get_emr_DMBAANTI_ANTIBIOTICCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMBAANTI_ANTIBIOTICCompleted(this, new Get_emr_DMBAANTI_ANTIBIOTICCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMBSEMCMO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMBSEMCMO(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMBSEMCMO", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMBSEMCMOAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DMBSEMCMOAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMBSEMCMOAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DMBSEMCMOOperationCompleted == null)) {
                this.Get_emr_DMBSEMCMOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMBSEMCMOOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMBSEMCMO", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DMBSEMCMOOperationCompleted, userState);
        }
        
        private void OnGet_emr_DMBSEMCMOOperationCompleted(object arg) {
            if ((this.Get_emr_DMBSEMCMOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMBSEMCMOCompleted(this, new Get_emr_DMBSEMCMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_MICRO_TEST", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_MICRO_TEST(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_MICRO_TEST", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_MICRO_TESTAsync(string req_no, string Err) {
            this.Get_emr_MICRO_TESTAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_MICRO_TESTAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_MICRO_TESTOperationCompleted == null)) {
                this.Get_emr_MICRO_TESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_MICRO_TESTOperationCompleted);
            }
            this.InvokeAsync("Get_emr_MICRO_TEST", new object[] {
                        req_no,
                        Err}, this.Get_emr_MICRO_TESTOperationCompleted, userState);
        }
        
        private void OnGet_emr_MICRO_TESTOperationCompleted(object arg) {
            if ((this.Get_emr_MICRO_TESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_MICRO_TESTCompleted(this, new Get_emr_MICRO_TESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_dmycobacte", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_dmycobacte(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_dmycobacte", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_dmycobacteAsync(string req_no, string Err) {
            this.Get_emr_dmycobacteAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_dmycobacteAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_dmycobacteOperationCompleted == null)) {
                this.Get_emr_dmycobacteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_dmycobacteOperationCompleted);
            }
            this.InvokeAsync("Get_emr_dmycobacte", new object[] {
                        req_no,
                        Err}, this.Get_emr_dmycobacteOperationCompleted, userState);
        }
        
        private void OnGet_emr_dmycobacteOperationCompleted(object arg) {
            if ((this.Get_emr_dmycobacteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_dmycobacteCompleted(this, new Get_emr_dmycobacteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMBSEMCMO_Res", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMBSEMCMO_Res(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMBSEMCMO_Res", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMBSEMCMO_ResAsync(string req_no, string Err) {
            this.Get_emr_DMBSEMCMO_ResAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMBSEMCMO_ResAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_DMBSEMCMO_ResOperationCompleted == null)) {
                this.Get_emr_DMBSEMCMO_ResOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMBSEMCMO_ResOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMBSEMCMO_Res", new object[] {
                        req_no,
                        Err}, this.Get_emr_DMBSEMCMO_ResOperationCompleted, userState);
        }
        
        private void OnGet_emr_DMBSEMCMO_ResOperationCompleted(object arg) {
            if ((this.Get_emr_DMBSEMCMO_ResCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMBSEMCMO_ResCompleted(this, new Get_emr_DMBSEMCMO_ResCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMURE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMURE(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMURE", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMUREAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DMUREAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMUREAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DMUREOperationCompleted == null)) {
                this.Get_emr_DMUREOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMUREOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMURE", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DMUREOperationCompleted, userState);
        }
        
        private void OnGet_emr_DMUREOperationCompleted(object arg) {
            if ((this.Get_emr_DMURECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMURECompleted(this, new Get_emr_DMURECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DMSRE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DMSRE(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DMSRE", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DMSREAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DMSREAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DMSREAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DMSREOperationCompleted == null)) {
                this.Get_emr_DMSREOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DMSREOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DMSRE", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DMSREOperationCompleted, userState);
        }
        
        private void OnGet_emr_DMSREOperationCompleted(object arg) {
            if ((this.Get_emr_DMSRECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DMSRECompleted(this, new Get_emr_DMSRECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_HaematoOncology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_HaematoOncology(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_HaematoOncology", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_HaematoOncologyAsync(string case_no, string d_type, string Err) {
            this.Get_emr_HaematoOncologyAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_HaematoOncologyAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_HaematoOncologyOperationCompleted == null)) {
                this.Get_emr_HaematoOncologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_HaematoOncologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_HaematoOncology", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_HaematoOncologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_HaematoOncologyOperationCompleted(object arg) {
            if ((this.Get_emr_HaematoOncologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_HaematoOncologyCompleted(this, new Get_emr_HaematoOncologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_HaematoOncology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_HaematoOncology(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_HaematoOncology", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_HaematoOncologyAsync(string case_no, string Err) {
            this.Get_emr_Count_HaematoOncologyAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_HaematoOncologyAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_HaematoOncologyOperationCompleted == null)) {
                this.Get_emr_Count_HaematoOncologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_HaematoOncologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_HaematoOncology", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_HaematoOncologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_HaematoOncologyOperationCompleted(object arg) {
            if ((this.Get_emr_Count_HaematoOncologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_HaematoOncologyCompleted(this, new Get_emr_Count_HaematoOncologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_HaematoPathology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_HaematoPathology(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_HaematoPathology", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_HaematoPathologyAsync(string case_no, string d_type, string Err) {
            this.Get_emr_HaematoPathologyAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_HaematoPathologyAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_HaematoPathologyOperationCompleted == null)) {
                this.Get_emr_HaematoPathologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_HaematoPathologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_HaematoPathology", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_HaematoPathologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_HaematoPathologyOperationCompleted(object arg) {
            if ((this.Get_emr_HaematoPathologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_HaematoPathologyCompleted(this, new Get_emr_HaematoPathologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_HaematoPathology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_HaematoPathology(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_HaematoPathology", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_HaematoPathologyAsync(string case_no, string Err) {
            this.Get_emr_Count_HaematoPathologyAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_HaematoPathologyAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_HaematoPathologyOperationCompleted == null)) {
                this.Get_emr_Count_HaematoPathologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_HaematoPathologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_HaematoPathology", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_HaematoPathologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_HaematoPathologyOperationCompleted(object arg) {
            if ((this.Get_emr_Count_HaematoPathologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_HaematoPathologyCompleted(this, new Get_emr_Count_HaematoPathologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_MedicalOncology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_MedicalOncology(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_MedicalOncology", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_MedicalOncologyAsync(string case_no, string d_type, string Err) {
            this.Get_emr_MedicalOncologyAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_MedicalOncologyAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_MedicalOncologyOperationCompleted == null)) {
                this.Get_emr_MedicalOncologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_MedicalOncologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_MedicalOncology", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_MedicalOncologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_MedicalOncologyOperationCompleted(object arg) {
            if ((this.Get_emr_MedicalOncologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_MedicalOncologyCompleted(this, new Get_emr_MedicalOncologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_MedicalOncology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_MedicalOncology(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_MedicalOncology", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_MedicalOncologyAsync(string case_no, string Err) {
            this.Get_emr_Count_MedicalOncologyAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_MedicalOncologyAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_MedicalOncologyOperationCompleted == null)) {
                this.Get_emr_Count_MedicalOncologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_MedicalOncologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_MedicalOncology", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_MedicalOncologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_MedicalOncologyOperationCompleted(object arg) {
            if ((this.Get_emr_Count_MedicalOncologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_MedicalOncologyCompleted(this, new Get_emr_Count_MedicalOncologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Cardiology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Cardiology(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_Cardiology", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CardiologyAsync(string case_no, string d_type, string Err) {
            this.Get_emr_CardiologyAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CardiologyAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_CardiologyOperationCompleted == null)) {
                this.Get_emr_CardiologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CardiologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Cardiology", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_CardiologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_CardiologyOperationCompleted(object arg) {
            if ((this.Get_emr_CardiologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CardiologyCompleted(this, new Get_emr_CardiologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_Cardiology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_Cardiology(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_Cardiology", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_CardiologyAsync(string case_no, string Err) {
            this.Get_emr_Count_CardiologyAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_CardiologyAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_CardiologyOperationCompleted == null)) {
                this.Get_emr_Count_CardiologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_CardiologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_Cardiology", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_CardiologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_CardiologyOperationCompleted(object arg) {
            if ((this.Get_emr_Count_CardiologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_CardiologyCompleted(this, new Get_emr_Count_CardiologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Endoscopy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Endoscopy(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_Endoscopy", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_EndoscopyAsync(string case_no, string d_type, string Err) {
            this.Get_emr_EndoscopyAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_EndoscopyAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_EndoscopyOperationCompleted == null)) {
                this.Get_emr_EndoscopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_EndoscopyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Endoscopy", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_EndoscopyOperationCompleted, userState);
        }
        
        private void OnGet_emr_EndoscopyOperationCompleted(object arg) {
            if ((this.Get_emr_EndoscopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_EndoscopyCompleted(this, new Get_emr_EndoscopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Count_Endoscopy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Count_Endoscopy(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Count_Endoscopy", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Count_EndoscopyAsync(string case_no, string Err) {
            this.Get_emr_Count_EndoscopyAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Count_EndoscopyAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Count_EndoscopyOperationCompleted == null)) {
                this.Get_emr_Count_EndoscopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Count_EndoscopyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Count_Endoscopy", new object[] {
                        case_no,
                        Err}, this.Get_emr_Count_EndoscopyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Count_EndoscopyOperationCompleted(object arg) {
            if ((this.Get_emr_Count_EndoscopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Count_EndoscopyCompleted(this, new Get_emr_Count_EndoscopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_RadiologyReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_RadiologyReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_RadiologyReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_RadiologyReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_RadiologyReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_RadiologyReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_RadiologyReportOperationCompleted == null)) {
                this.Get_emr_RadiologyReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_RadiologyReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_RadiologyReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_RadiologyReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_RadiologyReportOperationCompleted(object arg) {
            if ((this.Get_emr_RadiologyReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_RadiologyReportCompleted(this, new Get_emr_RadiologyReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_RadiologyRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_RadiologyRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_RadiologyRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_RadiologyRptAsync(string case_no, string Err) {
            this.Get_emr_RadiologyRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_RadiologyRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_RadiologyRptOperationCompleted == null)) {
                this.Get_emr_RadiologyRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_RadiologyRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_RadiologyRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_RadiologyRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_RadiologyRptOperationCompleted(object arg) {
            if ((this.Get_emr_RadiologyRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_RadiologyRptCompleted(this, new Get_emr_RadiologyRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_NuclearReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_NuclearReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_NuclearReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_NuclearReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_NuclearReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_NuclearReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_NuclearReportOperationCompleted == null)) {
                this.Get_emr_NuclearReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_NuclearReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_NuclearReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_NuclearReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_NuclearReportOperationCompleted(object arg) {
            if ((this.Get_emr_NuclearReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_NuclearReportCompleted(this, new Get_emr_NuclearReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_NuclearRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_NuclearRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_NuclearRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_NuclearRptAsync(string case_no, string Err) {
            this.Get_emr_NuclearRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_NuclearRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_NuclearRptOperationCompleted == null)) {
                this.Get_emr_NuclearRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_NuclearRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_NuclearRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_NuclearRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_NuclearRptOperationCompleted(object arg) {
            if ((this.Get_emr_NuclearRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_NuclearRptCompleted(this, new Get_emr_NuclearRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_sPathologyReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_sPathologyReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_sPathologyReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_sPathologyReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_sPathologyReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_sPathologyReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_sPathologyReportOperationCompleted == null)) {
                this.Get_emr_sPathologyReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_sPathologyReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_sPathologyReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_sPathologyReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_sPathologyReportOperationCompleted(object arg) {
            if ((this.Get_emr_sPathologyReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_sPathologyReportCompleted(this, new Get_emr_sPathologyReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_sPathologyRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_sPathologyRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_sPathologyRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_sPathologyRptAsync(string case_no, string Err) {
            this.Get_emr_sPathologyRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_sPathologyRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_sPathologyRptOperationCompleted == null)) {
                this.Get_emr_sPathologyRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_sPathologyRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_sPathologyRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_sPathologyRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_sPathologyRptOperationCompleted(object arg) {
            if ((this.Get_emr_sPathologyRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_sPathologyRptCompleted(this, new Get_emr_sPathologyRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CytologyReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CytologyReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_CytologyReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CytologyReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_CytologyReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CytologyReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_CytologyReportOperationCompleted == null)) {
                this.Get_emr_CytologyReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CytologyReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CytologyReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_CytologyReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_CytologyReportOperationCompleted(object arg) {
            if ((this.Get_emr_CytologyReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CytologyReportCompleted(this, new Get_emr_CytologyReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CytologyRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CytologyRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_CytologyRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CytologyRptAsync(string case_no, string Err) {
            this.Get_emr_CytologyRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CytologyRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_CytologyRptOperationCompleted == null)) {
                this.Get_emr_CytologyRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CytologyRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CytologyRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_CytologyRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_CytologyRptOperationCompleted(object arg) {
            if ((this.Get_emr_CytologyRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CytologyRptCompleted(this, new Get_emr_CytologyRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CytogeneticsReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CytogeneticsReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_CytogeneticsReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CytogeneticsReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_CytogeneticsReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CytogeneticsReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_CytogeneticsReportOperationCompleted == null)) {
                this.Get_emr_CytogeneticsReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CytogeneticsReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CytogeneticsReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_CytogeneticsReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_CytogeneticsReportOperationCompleted(object arg) {
            if ((this.Get_emr_CytogeneticsReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CytogeneticsReportCompleted(this, new Get_emr_CytogeneticsReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CytogeneticsRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CytogeneticsRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_CytogeneticsRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CytogeneticsRptAsync(string case_no, string Err) {
            this.Get_emr_CytogeneticsRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CytogeneticsRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_CytogeneticsRptOperationCompleted == null)) {
                this.Get_emr_CytogeneticsRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CytogeneticsRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CytogeneticsRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_CytogeneticsRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_CytogeneticsRptOperationCompleted(object arg) {
            if ((this.Get_emr_CytogeneticsRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CytogeneticsRptCompleted(this, new Get_emr_CytogeneticsRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DISIMP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DISIMP(string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_DISIMP", new object[] {
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DISIMPAsync(string req_no, string Err) {
            this.Get_emr_DISIMPAsync(req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DISIMPAsync(string req_no, string Err, object userState) {
            if ((this.Get_emr_DISIMPOperationCompleted == null)) {
                this.Get_emr_DISIMPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DISIMPOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DISIMP", new object[] {
                        req_no,
                        Err}, this.Get_emr_DISIMPOperationCompleted, userState);
        }
        
        private void OnGet_emr_DISIMPOperationCompleted(object arg) {
            if ((this.Get_emr_DISIMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DISIMPCompleted(this, new Get_emr_DISIMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DEDREPORT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DEDREPORT(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DEDREPORT", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DEDREPORTAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DEDREPORTAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DEDREPORTAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DEDREPORTOperationCompleted == null)) {
                this.Get_emr_DEDREPORTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DEDREPORTOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DEDREPORT", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DEDREPORTOperationCompleted, userState);
        }
        
        private void OnGet_emr_DEDREPORTOperationCompleted(object arg) {
            if ((this.Get_emr_DEDREPORTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DEDREPORTCompleted(this, new Get_emr_DEDREPORTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DECREPORT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DECREPORT(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DECREPORT", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DECREPORTAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DECREPORTAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DECREPORTAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DECREPORTOperationCompleted == null)) {
                this.Get_emr_DECREPORTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DECREPORTOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DECREPORT", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DECREPORTOperationCompleted, userState);
        }
        
        private void OnGet_emr_DECREPORTOperationCompleted(object arg) {
            if ((this.Get_emr_DECREPORTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DECREPORTCompleted(this, new Get_emr_DECREPORTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DSTREPORT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DSTREPORT(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DSTREPORT", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DSTREPORTAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DSTREPORTAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DSTREPORTAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DSTREPORTOperationCompleted == null)) {
                this.Get_emr_DSTREPORTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DSTREPORTOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DSTREPORT", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DSTREPORTOperationCompleted, userState);
        }
        
        private void OnGet_emr_DSTREPORTOperationCompleted(object arg) {
            if ((this.Get_emr_DSTREPORTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DSTREPORTCompleted(this, new Get_emr_DSTREPORTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_ECCHOREP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_ECCHOREP(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_ECCHOREP", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ECCHOREPAsync(string req_no, string d_type, string Err) {
            this.Get_emr_ECCHOREPAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ECCHOREPAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_ECCHOREPOperationCompleted == null)) {
                this.Get_emr_ECCHOREPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ECCHOREPOperationCompleted);
            }
            this.InvokeAsync("Get_emr_ECCHOREP", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_ECCHOREPOperationCompleted, userState);
        }
        
        private void OnGet_emr_ECCHOREPOperationCompleted(object arg) {
            if ((this.Get_emr_ECCHOREPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ECCHOREPCompleted(this, new Get_emr_ECCHOREPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_DPFREPORT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_DPFREPORT(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_DPFREPORT", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_DPFREPORTAsync(string req_no, string d_type, string Err) {
            this.Get_emr_DPFREPORTAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_DPFREPORTAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_DPFREPORTOperationCompleted == null)) {
                this.Get_emr_DPFREPORTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_DPFREPORTOperationCompleted);
            }
            this.InvokeAsync("Get_emr_DPFREPORT", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_DPFREPORTOperationCompleted, userState);
        }
        
        private void OnGet_emr_DPFREPORTOperationCompleted(object arg) {
            if ((this.Get_emr_DPFREPORTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_DPFREPORTCompleted(this, new Get_emr_DPFREPORTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_MOLECULAB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_MOLECULAB(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_MOLECULAB", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_MOLECULABAsync(string req_no, string d_type, string Err) {
            this.Get_emr_MOLECULABAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_MOLECULABAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_MOLECULABOperationCompleted == null)) {
                this.Get_emr_MOLECULABOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_MOLECULABOperationCompleted);
            }
            this.InvokeAsync("Get_emr_MOLECULAB", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_MOLECULABOperationCompleted, userState);
        }
        
        private void OnGet_emr_MOLECULABOperationCompleted(object arg) {
            if ((this.Get_emr_MOLECULABCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_MOLECULABCompleted(this, new Get_emr_MOLECULABCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_FNACReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_FNACReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_FNACReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_FNACReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_FNACReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_FNACReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_FNACReportOperationCompleted == null)) {
                this.Get_emr_FNACReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_FNACReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_FNACReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_FNACReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_FNACReportOperationCompleted(object arg) {
            if ((this.Get_emr_FNACReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_FNACReportCompleted(this, new Get_emr_FNACReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_FNACRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_FNACRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_FNACRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_FNACRptAsync(string case_no, string Err) {
            this.Get_emr_FNACRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_FNACRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_FNACRptOperationCompleted == null)) {
                this.Get_emr_FNACRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_FNACRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_FNACRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_FNACRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_FNACRptOperationCompleted(object arg) {
            if ((this.Get_emr_FNACRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_FNACRptCompleted(this, new Get_emr_FNACRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_BioChemReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_BioChemReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_BioChemReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_BioChemReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_BioChemReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_BioChemReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_BioChemReportOperationCompleted == null)) {
                this.Get_emr_BioChemReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_BioChemReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_BioChemReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_BioChemReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_BioChemReportOperationCompleted(object arg) {
            if ((this.Get_emr_BioChemReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_BioChemReportCompleted(this, new Get_emr_BioChemReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_BioChemRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_BioChemRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_BioChemRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_BioChemRptAsync(string case_no, string Err) {
            this.Get_emr_BioChemRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_BioChemRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_BioChemRptOperationCompleted == null)) {
                this.Get_emr_BioChemRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_BioChemRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_BioChemRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_BioChemRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_BioChemRptOperationCompleted(object arg) {
            if ((this.Get_emr_BioChemRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_BioChemRptCompleted(this, new Get_emr_BioChemRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_TumorReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_TumorReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_TumorReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_TumorReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_TumorReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_TumorReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_TumorReportOperationCompleted == null)) {
                this.Get_emr_TumorReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_TumorReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_TumorReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_TumorReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_TumorReportOperationCompleted(object arg) {
            if ((this.Get_emr_TumorReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_TumorReportCompleted(this, new Get_emr_TumorReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_TumorRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_TumorRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_TumorRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_TumorRptAsync(string case_no, string Err) {
            this.Get_emr_TumorRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_TumorRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_TumorRptOperationCompleted == null)) {
                this.Get_emr_TumorRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_TumorRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_TumorRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_TumorRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_TumorRptOperationCompleted(object arg) {
            if ((this.Get_emr_TumorRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_TumorRptCompleted(this, new Get_emr_TumorRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_MicroBiologyReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_MicroBiologyReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_MicroBiologyReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_MicroBiologyReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_MicroBiologyReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_MicroBiologyReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_MicroBiologyReportOperationCompleted == null)) {
                this.Get_emr_MicroBiologyReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_MicroBiologyReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_MicroBiologyReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_MicroBiologyReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_MicroBiologyReportOperationCompleted(object arg) {
            if ((this.Get_emr_MicroBiologyReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_MicroBiologyReportCompleted(this, new Get_emr_MicroBiologyReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_MicroBiologyRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_MicroBiologyRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_MicroBiologyRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_MicroBiologyRptAsync(string case_no, string Err) {
            this.Get_emr_MicroBiologyRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_MicroBiologyRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_MicroBiologyRptOperationCompleted == null)) {
                this.Get_emr_MicroBiologyRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_MicroBiologyRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_MicroBiologyRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_MicroBiologyRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_MicroBiologyRptOperationCompleted(object arg) {
            if ((this.Get_emr_MicroBiologyRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_MicroBiologyRptCompleted(this, new Get_emr_MicroBiologyRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CardiologyReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CardiologyReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_CardiologyReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CardiologyReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_CardiologyReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CardiologyReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_CardiologyReportOperationCompleted == null)) {
                this.Get_emr_CardiologyReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CardiologyReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CardiologyReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_CardiologyReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_CardiologyReportOperationCompleted(object arg) {
            if ((this.Get_emr_CardiologyReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CardiologyReportCompleted(this, new Get_emr_CardiologyReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CardiologyRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CardiologyRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_CardiologyRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CardiologyRptAsync(string case_no, string Err) {
            this.Get_emr_CardiologyRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CardiologyRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_CardiologyRptOperationCompleted == null)) {
                this.Get_emr_CardiologyRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CardiologyRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CardiologyRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_CardiologyRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_CardiologyRptOperationCompleted(object arg) {
            if ((this.Get_emr_CardiologyRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CardiologyRptCompleted(this, new Get_emr_CardiologyRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_EndoscopyReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_EndoscopyReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_EndoscopyReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_EndoscopyReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_EndoscopyReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_EndoscopyReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_EndoscopyReportOperationCompleted == null)) {
                this.Get_emr_EndoscopyReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_EndoscopyReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_EndoscopyReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_EndoscopyReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_EndoscopyReportOperationCompleted(object arg) {
            if ((this.Get_emr_EndoscopyReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_EndoscopyReportCompleted(this, new Get_emr_EndoscopyReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_EndoscopyRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_EndoscopyRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_EndoscopyRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_EndoscopyRptAsync(string case_no, string Err) {
            this.Get_emr_EndoscopyRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_EndoscopyRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_EndoscopyRptOperationCompleted == null)) {
                this.Get_emr_EndoscopyRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_EndoscopyRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_EndoscopyRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_EndoscopyRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_EndoscopyRptOperationCompleted(object arg) {
            if ((this.Get_emr_EndoscopyRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_EndoscopyRptCompleted(this, new Get_emr_EndoscopyRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_MedOncologyReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_MedOncologyReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_MedOncologyReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_MedOncologyReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_MedOncologyReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_MedOncologyReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_MedOncologyReportOperationCompleted == null)) {
                this.Get_emr_MedOncologyReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_MedOncologyReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_MedOncologyReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_MedOncologyReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_MedOncologyReportOperationCompleted(object arg) {
            if ((this.Get_emr_MedOncologyReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_MedOncologyReportCompleted(this, new Get_emr_MedOncologyReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_MicrobiologyReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_MicrobiologyReport(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_MicrobiologyReport", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_MicrobiologyReportAsync(string case_no, string d_type, string Err) {
            this.Get_emr_MicrobiologyReportAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_MicrobiologyReportAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_MicrobiologyReportOperationCompleted == null)) {
                this.Get_emr_MicrobiologyReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_MicrobiologyReportOperationCompleted);
            }
            this.InvokeAsync("Get_emr_MicrobiologyReport", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_MicrobiologyReportOperationCompleted, userState);
        }
        
        private void OnGet_emr_MicrobiologyReportOperationCompleted(object arg) {
            if ((this.Get_emr_MicrobiologyReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_MicrobiologyReportCompleted(this, new Get_emr_MicrobiologyReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AllLabReqRpt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AllLabReqRpt(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_AllLabReqRpt", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AllLabReqRptAsync(string case_no, string Err) {
            this.Get_emr_AllLabReqRptAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AllLabReqRptAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_AllLabReqRptOperationCompleted == null)) {
                this.Get_emr_AllLabReqRptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AllLabReqRptOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AllLabReqRpt", new object[] {
                        case_no,
                        Err}, this.Get_emr_AllLabReqRptOperationCompleted, userState);
        }
        
        private void OnGet_emr_AllLabReqRptOperationCompleted(object arg) {
            if ((this.Get_emr_AllLabReqRptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AllLabReqRptCompleted(this, new Get_emr_AllLabReqRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AllLabReqRpt_Dtl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AllLabReqRpt_Dtl(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_AllLabReqRpt_Dtl", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AllLabReqRpt_DtlAsync(string case_no, string d_type, string Err) {
            this.Get_emr_AllLabReqRpt_DtlAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AllLabReqRpt_DtlAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_AllLabReqRpt_DtlOperationCompleted == null)) {
                this.Get_emr_AllLabReqRpt_DtlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AllLabReqRpt_DtlOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AllLabReqRpt_Dtl", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_AllLabReqRpt_DtlOperationCompleted, userState);
        }
        
        private void OnGet_emr_AllLabReqRpt_DtlOperationCompleted(object arg) {
            if ((this.Get_emr_AllLabReqRpt_DtlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AllLabReqRpt_DtlCompleted(this, new Get_emr_AllLabReqRpt_DtlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JointClinicNoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JointClinicNoList(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_JointClinicNoList", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JointClinicNoListAsync(string case_no, string Err) {
            this.Get_emr_JointClinicNoListAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JointClinicNoListAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_JointClinicNoListOperationCompleted == null)) {
                this.Get_emr_JointClinicNoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JointClinicNoListOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JointClinicNoList", new object[] {
                        case_no,
                        Err}, this.Get_emr_JointClinicNoListOperationCompleted, userState);
        }
        
        private void OnGet_emr_JointClinicNoListOperationCompleted(object arg) {
            if ((this.Get_emr_JointClinicNoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JointClinicNoListCompleted(this, new Get_emr_JointClinicNoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JointClinic_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JointClinic_Details(string jc_no, string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_JointClinic_Details", new object[] {
                        jc_no,
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JointClinic_DetailsAsync(string jc_no, string case_no, string Err) {
            this.Get_emr_JointClinic_DetailsAsync(jc_no, case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JointClinic_DetailsAsync(string jc_no, string case_no, string Err, object userState) {
            if ((this.Get_emr_JointClinic_DetailsOperationCompleted == null)) {
                this.Get_emr_JointClinic_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JointClinic_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JointClinic_Details", new object[] {
                        jc_no,
                        case_no,
                        Err}, this.Get_emr_JointClinic_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_JointClinic_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_JointClinic_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JointClinic_DetailsCompleted(this, new Get_emr_JointClinic_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JCRequisitions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JCRequisitions(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_JCRequisitions", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JCRequisitionsAsync(string case_no, string Err) {
            this.Get_emr_JCRequisitionsAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JCRequisitionsAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_JCRequisitionsOperationCompleted == null)) {
                this.Get_emr_JCRequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JCRequisitionsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JCRequisitions", new object[] {
                        case_no,
                        Err}, this.Get_emr_JCRequisitionsOperationCompleted, userState);
        }
        
        private void OnGet_emr_JCRequisitionsOperationCompleted(object arg) {
            if ((this.Get_emr_JCRequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JCRequisitionsCompleted(this, new Get_emr_JCRequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JCInvestigations_Review", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JCInvestigations_Review(string jc_no, string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_JCInvestigations_Review", new object[] {
                        jc_no,
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JCInvestigations_ReviewAsync(string jc_no, string case_no, string Err) {
            this.Get_emr_JCInvestigations_ReviewAsync(jc_no, case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JCInvestigations_ReviewAsync(string jc_no, string case_no, string Err, object userState) {
            if ((this.Get_emr_JCInvestigations_ReviewOperationCompleted == null)) {
                this.Get_emr_JCInvestigations_ReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JCInvestigations_ReviewOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JCInvestigations_Review", new object[] {
                        jc_no,
                        case_no,
                        Err}, this.Get_emr_JCInvestigations_ReviewOperationCompleted, userState);
        }
        
        private void OnGet_emr_JCInvestigations_ReviewOperationCompleted(object arg) {
            if ((this.Get_emr_JCInvestigations_ReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JCInvestigations_ReviewCompleted(this, new Get_emr_JCInvestigations_ReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JCInvestReview_Reqwise", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JCInvestReview_Reqwise(int jc_no, string case_no, string req_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_JCInvestReview_Reqwise", new object[] {
                        jc_no,
                        case_no,
                        req_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JCInvestReview_ReqwiseAsync(int jc_no, string case_no, string req_no, string Err) {
            this.Get_emr_JCInvestReview_ReqwiseAsync(jc_no, case_no, req_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JCInvestReview_ReqwiseAsync(int jc_no, string case_no, string req_no, string Err, object userState) {
            if ((this.Get_emr_JCInvestReview_ReqwiseOperationCompleted == null)) {
                this.Get_emr_JCInvestReview_ReqwiseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JCInvestReview_ReqwiseOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JCInvestReview_Reqwise", new object[] {
                        jc_no,
                        case_no,
                        req_no,
                        Err}, this.Get_emr_JCInvestReview_ReqwiseOperationCompleted, userState);
        }
        
        private void OnGet_emr_JCInvestReview_ReqwiseOperationCompleted(object arg) {
            if ((this.Get_emr_JCInvestReview_ReqwiseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JCInvestReview_ReqwiseCompleted(this, new Get_emr_JCInvestReview_ReqwiseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_JCInvest_OutsideTMH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_JCInvest_OutsideTMH(int jc_no, string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_JCInvest_OutsideTMH", new object[] {
                        jc_no,
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_JCInvest_OutsideTMHAsync(int jc_no, string case_no, string Err) {
            this.Get_emr_JCInvest_OutsideTMHAsync(jc_no, case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_JCInvest_OutsideTMHAsync(int jc_no, string case_no, string Err, object userState) {
            if ((this.Get_emr_JCInvest_OutsideTMHOperationCompleted == null)) {
                this.Get_emr_JCInvest_OutsideTMHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_JCInvest_OutsideTMHOperationCompleted);
            }
            this.InvokeAsync("Get_emr_JCInvest_OutsideTMH", new object[] {
                        jc_no,
                        case_no,
                        Err}, this.Get_emr_JCInvest_OutsideTMHOperationCompleted, userState);
        }
        
        private void OnGet_emr_JCInvest_OutsideTMHOperationCompleted(object arg) {
            if ((this.Get_emr_JCInvest_OutsideTMHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_JCInvest_OutsideTMHCompleted(this, new Get_emr_JCInvest_OutsideTMHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Emr_Marital_Status", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Emr_Marital_Status(ref string Err) {
            object[] results = this.Invoke("Get_Emr_Marital_Status", new object[] {
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Emr_Marital_StatusAsync(string Err) {
            this.Get_Emr_Marital_StatusAsync(Err, null);
        }
        
        /// <remarks/>
        public void Get_Emr_Marital_StatusAsync(string Err, object userState) {
            if ((this.Get_Emr_Marital_StatusOperationCompleted == null)) {
                this.Get_Emr_Marital_StatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Emr_Marital_StatusOperationCompleted);
            }
            this.InvokeAsync("Get_Emr_Marital_Status", new object[] {
                        Err}, this.Get_Emr_Marital_StatusOperationCompleted, userState);
        }
        
        private void OnGet_Emr_Marital_StatusOperationCompleted(object arg) {
            if ((this.Get_Emr_Marital_StatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Emr_Marital_StatusCompleted(this, new Get_Emr_Marital_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Emr_Education", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Emr_Education(ref string Err) {
            object[] results = this.Invoke("Get_Emr_Education", new object[] {
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Emr_EducationAsync(string Err) {
            this.Get_Emr_EducationAsync(Err, null);
        }
        
        /// <remarks/>
        public void Get_Emr_EducationAsync(string Err, object userState) {
            if ((this.Get_Emr_EducationOperationCompleted == null)) {
                this.Get_Emr_EducationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Emr_EducationOperationCompleted);
            }
            this.InvokeAsync("Get_Emr_Education", new object[] {
                        Err}, this.Get_Emr_EducationOperationCompleted, userState);
        }
        
        private void OnGet_Emr_EducationOperationCompleted(object arg) {
            if ((this.Get_Emr_EducationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Emr_EducationCompleted(this, new Get_Emr_EducationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Emr_Occupation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Emr_Occupation(ref string Err) {
            object[] results = this.Invoke("Get_Emr_Occupation", new object[] {
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Emr_OccupationAsync(string Err) {
            this.Get_Emr_OccupationAsync(Err, null);
        }
        
        /// <remarks/>
        public void Get_Emr_OccupationAsync(string Err, object userState) {
            if ((this.Get_Emr_OccupationOperationCompleted == null)) {
                this.Get_Emr_OccupationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Emr_OccupationOperationCompleted);
            }
            this.InvokeAsync("Get_Emr_Occupation", new object[] {
                        Err}, this.Get_Emr_OccupationOperationCompleted, userState);
        }
        
        private void OnGet_Emr_OccupationOperationCompleted(object arg) {
            if ((this.Get_Emr_OccupationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Emr_OccupationCompleted(this, new Get_Emr_OccupationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Emr_Nationality", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Emr_Nationality(ref string Err) {
            object[] results = this.Invoke("Get_Emr_Nationality", new object[] {
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Emr_NationalityAsync(string Err) {
            this.Get_Emr_NationalityAsync(Err, null);
        }
        
        /// <remarks/>
        public void Get_Emr_NationalityAsync(string Err, object userState) {
            if ((this.Get_Emr_NationalityOperationCompleted == null)) {
                this.Get_Emr_NationalityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Emr_NationalityOperationCompleted);
            }
            this.InvokeAsync("Get_Emr_Nationality", new object[] {
                        Err}, this.Get_Emr_NationalityOperationCompleted, userState);
        }
        
        private void OnGet_Emr_NationalityOperationCompleted(object arg) {
            if ((this.Get_Emr_NationalityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Emr_NationalityCompleted(this, new Get_Emr_NationalityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Emr_Religion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Emr_Religion(ref string Err) {
            object[] results = this.Invoke("Get_Emr_Religion", new object[] {
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Emr_ReligionAsync(string Err) {
            this.Get_Emr_ReligionAsync(Err, null);
        }
        
        /// <remarks/>
        public void Get_Emr_ReligionAsync(string Err, object userState) {
            if ((this.Get_Emr_ReligionOperationCompleted == null)) {
                this.Get_Emr_ReligionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Emr_ReligionOperationCompleted);
            }
            this.InvokeAsync("Get_Emr_Religion", new object[] {
                        Err}, this.Get_Emr_ReligionOperationCompleted, userState);
        }
        
        private void OnGet_Emr_ReligionOperationCompleted(object arg) {
            if ((this.Get_Emr_ReligionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Emr_ReligionCompleted(this, new Get_Emr_ReligionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Emr_Mother_Tongue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Emr_Mother_Tongue(ref string Err) {
            object[] results = this.Invoke("Get_Emr_Mother_Tongue", new object[] {
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Emr_Mother_TongueAsync(string Err) {
            this.Get_Emr_Mother_TongueAsync(Err, null);
        }
        
        /// <remarks/>
        public void Get_Emr_Mother_TongueAsync(string Err, object userState) {
            if ((this.Get_Emr_Mother_TongueOperationCompleted == null)) {
                this.Get_Emr_Mother_TongueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Emr_Mother_TongueOperationCompleted);
            }
            this.InvokeAsync("Get_Emr_Mother_Tongue", new object[] {
                        Err}, this.Get_Emr_Mother_TongueOperationCompleted, userState);
        }
        
        private void OnGet_Emr_Mother_TongueOperationCompleted(object arg) {
            if ((this.Get_Emr_Mother_TongueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Emr_Mother_TongueCompleted(this, new Get_Emr_Mother_TongueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Emr_PatientLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Emr_PatientLogin(string UserID, ref string Err) {
            object[] results = this.Invoke("Get_Emr_PatientLogin", new object[] {
                        UserID,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Emr_PatientLoginAsync(string UserID, string Err) {
            this.Get_Emr_PatientLoginAsync(UserID, Err, null);
        }
        
        /// <remarks/>
        public void Get_Emr_PatientLoginAsync(string UserID, string Err, object userState) {
            if ((this.Get_Emr_PatientLoginOperationCompleted == null)) {
                this.Get_Emr_PatientLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Emr_PatientLoginOperationCompleted);
            }
            this.InvokeAsync("Get_Emr_PatientLogin", new object[] {
                        UserID,
                        Err}, this.Get_Emr_PatientLoginOperationCompleted, userState);
        }
        
        private void OnGet_Emr_PatientLoginOperationCompleted(object arg) {
            if ((this.Get_Emr_PatientLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Emr_PatientLoginCompleted(this, new Get_Emr_PatientLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Emr_PatientLogin2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Emr_PatientLogin2(string UserID, ref string Err) {
            object[] results = this.Invoke("Get_Emr_PatientLogin2", new object[] {
                        UserID,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Emr_PatientLogin2Async(string UserID, string Err) {
            this.Get_Emr_PatientLogin2Async(UserID, Err, null);
        }
        
        /// <remarks/>
        public void Get_Emr_PatientLogin2Async(string UserID, string Err, object userState) {
            if ((this.Get_Emr_PatientLogin2OperationCompleted == null)) {
                this.Get_Emr_PatientLogin2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Emr_PatientLogin2OperationCompleted);
            }
            this.InvokeAsync("Get_Emr_PatientLogin2", new object[] {
                        UserID,
                        Err}, this.Get_Emr_PatientLogin2OperationCompleted, userState);
        }
        
        private void OnGet_Emr_PatientLogin2OperationCompleted(object arg) {
            if ((this.Get_Emr_PatientLogin2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Emr_PatientLogin2Completed(this, new Get_Emr_PatientLogin2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Emr_PatientLogin3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Emr_PatientLogin3(string UserID, string strpwd, ref string Err) {
            object[] results = this.Invoke("Get_Emr_PatientLogin3", new object[] {
                        UserID,
                        strpwd,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Emr_PatientLogin3Async(string UserID, string strpwd, string Err) {
            this.Get_Emr_PatientLogin3Async(UserID, strpwd, Err, null);
        }
        
        /// <remarks/>
        public void Get_Emr_PatientLogin3Async(string UserID, string strpwd, string Err, object userState) {
            if ((this.Get_Emr_PatientLogin3OperationCompleted == null)) {
                this.Get_Emr_PatientLogin3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Emr_PatientLogin3OperationCompleted);
            }
            this.InvokeAsync("Get_Emr_PatientLogin3", new object[] {
                        UserID,
                        strpwd,
                        Err}, this.Get_Emr_PatientLogin3OperationCompleted, userState);
        }
        
        private void OnGet_Emr_PatientLogin3OperationCompleted(object arg) {
            if ((this.Get_Emr_PatientLogin3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Emr_PatientLogin3Completed(this, new Get_Emr_PatientLogin3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_LastPatientVisit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_LastPatientVisit(string UserID, ref string Err) {
            object[] results = this.Invoke("Get_LastPatientVisit", new object[] {
                        UserID,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_LastPatientVisitAsync(string UserID, string Err) {
            this.Get_LastPatientVisitAsync(UserID, Err, null);
        }
        
        /// <remarks/>
        public void Get_LastPatientVisitAsync(string UserID, string Err, object userState) {
            if ((this.Get_LastPatientVisitOperationCompleted == null)) {
                this.Get_LastPatientVisitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_LastPatientVisitOperationCompleted);
            }
            this.InvokeAsync("Get_LastPatientVisit", new object[] {
                        UserID,
                        Err}, this.Get_LastPatientVisitOperationCompleted, userState);
        }
        
        private void OnGet_LastPatientVisitOperationCompleted(object arg) {
            if ((this.Get_LastPatientVisitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_LastPatientVisitCompleted(this, new Get_LastPatientVisitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_PatientVisit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Update_PatientVisit(string UserID, ref string Err) {
            object[] results = this.Invoke("Update_PatientVisit", new object[] {
                        UserID,
                        Err});
            Err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Update_PatientVisitAsync(string UserID, string Err) {
            this.Update_PatientVisitAsync(UserID, Err, null);
        }
        
        /// <remarks/>
        public void Update_PatientVisitAsync(string UserID, string Err, object userState) {
            if ((this.Update_PatientVisitOperationCompleted == null)) {
                this.Update_PatientVisitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_PatientVisitOperationCompleted);
            }
            this.InvokeAsync("Update_PatientVisit", new object[] {
                        UserID,
                        Err}, this.Update_PatientVisitOperationCompleted, userState);
        }
        
        private void OnUpdate_PatientVisitOperationCompleted(object arg) {
            if ((this.Update_PatientVisitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_PatientVisitCompleted(this, new Update_PatientVisitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Emr_PatientDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Emr_PatientDetails(string UserID, ref string Err) {
            object[] results = this.Invoke("Get_Emr_PatientDetails", new object[] {
                        UserID,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Emr_PatientDetailsAsync(string UserID, string Err) {
            this.Get_Emr_PatientDetailsAsync(UserID, Err, null);
        }
        
        /// <remarks/>
        public void Get_Emr_PatientDetailsAsync(string UserID, string Err, object userState) {
            if ((this.Get_Emr_PatientDetailsOperationCompleted == null)) {
                this.Get_Emr_PatientDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Emr_PatientDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_Emr_PatientDetails", new object[] {
                        UserID,
                        Err}, this.Get_Emr_PatientDetailsOperationCompleted, userState);
        }
        
        private void OnGet_Emr_PatientDetailsOperationCompleted(object arg) {
            if ((this.Get_Emr_PatientDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Emr_PatientDetailsCompleted(this, new Get_Emr_PatientDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_DMGReg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_DMGReg(string UserID, ref string Err) {
            object[] results = this.Invoke("Get_DMGReg", new object[] {
                        UserID,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_DMGRegAsync(string UserID, string Err) {
            this.Get_DMGRegAsync(UserID, Err, null);
        }
        
        /// <remarks/>
        public void Get_DMGRegAsync(string UserID, string Err, object userState) {
            if ((this.Get_DMGRegOperationCompleted == null)) {
                this.Get_DMGRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_DMGRegOperationCompleted);
            }
            this.InvokeAsync("Get_DMGReg", new object[] {
                        UserID,
                        Err}, this.Get_DMGRegOperationCompleted, userState);
        }
        
        private void OnGet_DMGRegOperationCompleted(object arg) {
            if ((this.Get_DMGRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_DMGRegCompleted(this, new Get_DMGRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Check_UserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Check_UserName(string UserID, ref string Err) {
            object[] results = this.Invoke("Check_UserName", new object[] {
                        UserID,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Check_UserNameAsync(string UserID, string Err) {
            this.Check_UserNameAsync(UserID, Err, null);
        }
        
        /// <remarks/>
        public void Check_UserNameAsync(string UserID, string Err, object userState) {
            if ((this.Check_UserNameOperationCompleted == null)) {
                this.Check_UserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_UserNameOperationCompleted);
            }
            this.InvokeAsync("Check_UserName", new object[] {
                        UserID,
                        Err}, this.Check_UserNameOperationCompleted, userState);
        }
        
        private void OnCheck_UserNameOperationCompleted(object arg) {
            if ((this.Check_UserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_UserNameCompleted(this, new Check_UserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/emr_Update_Password", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int emr_Update_Password(string UserID, string Password, ref string Err) {
            object[] results = this.Invoke("emr_Update_Password", new object[] {
                        UserID,
                        Password,
                        Err});
            Err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void emr_Update_PasswordAsync(string UserID, string Password, string Err) {
            this.emr_Update_PasswordAsync(UserID, Password, Err, null);
        }
        
        /// <remarks/>
        public void emr_Update_PasswordAsync(string UserID, string Password, string Err, object userState) {
            if ((this.emr_Update_PasswordOperationCompleted == null)) {
                this.emr_Update_PasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.Onemr_Update_PasswordOperationCompleted);
            }
            this.InvokeAsync("emr_Update_Password", new object[] {
                        UserID,
                        Password,
                        Err}, this.emr_Update_PasswordOperationCompleted, userState);
        }
        
        private void Onemr_Update_PasswordOperationCompleted(object arg) {
            if ((this.emr_Update_PasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.emr_Update_PasswordCompleted(this, new emr_Update_PasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_emrLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Insert_emrLogin(string UserID, string Password, ref string Err) {
            object[] results = this.Invoke("Insert_emrLogin", new object[] {
                        UserID,
                        Password,
                        Err});
            Err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_emrLoginAsync(string UserID, string Password, string Err) {
            this.Insert_emrLoginAsync(UserID, Password, Err, null);
        }
        
        /// <remarks/>
        public void Insert_emrLoginAsync(string UserID, string Password, string Err, object userState) {
            if ((this.Insert_emrLoginOperationCompleted == null)) {
                this.Insert_emrLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_emrLoginOperationCompleted);
            }
            this.InvokeAsync("Insert_emrLogin", new object[] {
                        UserID,
                        Password,
                        Err}, this.Insert_emrLoginOperationCompleted, userState);
        }
        
        private void OnInsert_emrLoginOperationCompleted(object arg) {
            if ((this.Insert_emrLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_emrLoginCompleted(this, new Insert_emrLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PatientAddressDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PatientAddressDetails(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_PatientAddressDetails", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PatientAddressDetailsAsync(string case_no, string Err) {
            this.Get_emr_PatientAddressDetailsAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PatientAddressDetailsAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_PatientAddressDetailsOperationCompleted == null)) {
                this.Get_emr_PatientAddressDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PatientAddressDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PatientAddressDetails", new object[] {
                        case_no,
                        Err}, this.Get_emr_PatientAddressDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_PatientAddressDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_PatientAddressDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PatientAddressDetailsCompleted(this, new Get_emr_PatientAddressDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PatientType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PatientType(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_PatientType", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PatientTypeAsync(string case_no, string Err) {
            this.Get_emr_PatientTypeAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PatientTypeAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_PatientTypeOperationCompleted == null)) {
                this.Get_emr_PatientTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PatientTypeOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PatientType", new object[] {
                        case_no,
                        Err}, this.Get_emr_PatientTypeOperationCompleted, userState);
        }
        
        private void OnGet_emr_PatientTypeOperationCompleted(object arg) {
            if ((this.Get_emr_PatientTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PatientTypeCompleted(this, new Get_emr_PatientTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PatientPersonalDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PatientPersonalDetails(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_PatientPersonalDetails", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PatientPersonalDetailsAsync(string case_no, string Err) {
            this.Get_emr_PatientPersonalDetailsAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PatientPersonalDetailsAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_PatientPersonalDetailsOperationCompleted == null)) {
                this.Get_emr_PatientPersonalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PatientPersonalDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PatientPersonalDetails", new object[] {
                        case_no,
                        Err}, this.Get_emr_PatientPersonalDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_PatientPersonalDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_PatientPersonalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PatientPersonalDetailsCompleted(this, new Get_emr_PatientPersonalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PatientDMGDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PatientDMGDetails(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_PatientDMGDetails", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PatientDMGDetailsAsync(string case_no, string Err) {
            this.Get_emr_PatientDMGDetailsAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PatientDMGDetailsAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_PatientDMGDetailsOperationCompleted == null)) {
                this.Get_emr_PatientDMGDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PatientDMGDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PatientDMGDetails", new object[] {
                        case_no,
                        Err}, this.Get_emr_PatientDMGDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_PatientDMGDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_PatientDMGDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PatientDMGDetailsCompleted(this, new Get_emr_PatientDMGDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_WardName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_WardName(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_WardName", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_WardNameAsync(string case_no, string d_type, string Err) {
            this.Get_emr_WardNameAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_WardNameAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_WardNameOperationCompleted == null)) {
                this.Get_emr_WardNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_WardNameOperationCompleted);
            }
            this.InvokeAsync("Get_emr_WardName", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_WardNameOperationCompleted, userState);
        }
        
        private void OnGet_emr_WardNameOperationCompleted(object arg) {
            if ((this.Get_emr_WardNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_WardNameCompleted(this, new Get_emr_WardNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_WardCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_WardCode(string wardname, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_WardCode", new object[] {
                        wardname,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_WardCodeAsync(string wardname, string d_type, string Err) {
            this.Get_emr_WardCodeAsync(wardname, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_WardCodeAsync(string wardname, string d_type, string Err, object userState) {
            if ((this.Get_emr_WardCodeOperationCompleted == null)) {
                this.Get_emr_WardCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_WardCodeOperationCompleted);
            }
            this.InvokeAsync("Get_emr_WardCode", new object[] {
                        wardname,
                        d_type,
                        Err}, this.Get_emr_WardCodeOperationCompleted, userState);
        }
        
        private void OnGet_emr_WardCodeOperationCompleted(object arg) {
            if ((this.Get_emr_WardCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_WardCodeCompleted(this, new Get_emr_WardCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AdminDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AdminDate(string case_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_AdminDate", new object[] {
                        case_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AdminDateAsync(string case_no, string d_type, string Err) {
            this.Get_emr_AdminDateAsync(case_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AdminDateAsync(string case_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_AdminDateOperationCompleted == null)) {
                this.Get_emr_AdminDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AdminDateOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AdminDate", new object[] {
                        case_no,
                        d_type,
                        Err}, this.Get_emr_AdminDateOperationCompleted, userState);
        }
        
        private void OnGet_emr_AdminDateOperationCompleted(object arg) {
            if ((this.Get_emr_AdminDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AdminDateCompleted(this, new Get_emr_AdminDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_BIOHazard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_BIOHazard(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_BIOHazard", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_BIOHazardAsync(string case_no, string Err) {
            this.Get_emr_BIOHazardAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_BIOHazardAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_BIOHazardOperationCompleted == null)) {
                this.Get_emr_BIOHazardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_BIOHazardOperationCompleted);
            }
            this.InvokeAsync("Get_emr_BIOHazard", new object[] {
                        case_no,
                        Err}, this.Get_emr_BIOHazardOperationCompleted, userState);
        }
        
        private void OnGet_emr_BIOHazardOperationCompleted(object arg) {
            if ((this.Get_emr_BIOHazardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_BIOHazardCompleted(this, new Get_emr_BIOHazardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PreviousRegNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PreviousRegNo(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_PreviousRegNo", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PreviousRegNoAsync(string case_no, string Err) {
            this.Get_emr_PreviousRegNoAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PreviousRegNoAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_PreviousRegNoOperationCompleted == null)) {
                this.Get_emr_PreviousRegNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PreviousRegNoOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PreviousRegNo", new object[] {
                        case_no,
                        Err}, this.Get_emr_PreviousRegNoOperationCompleted, userState);
        }
        
        private void OnGet_emr_PreviousRegNoOperationCompleted(object arg) {
            if ((this.Get_emr_PreviousRegNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PreviousRegNoCompleted(this, new Get_emr_PreviousRegNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_EmpBasInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_EmpBasInfo(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_EmpBasInfo", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_EmpBasInfoAsync(string case_no, string Err) {
            this.Get_emr_EmpBasInfoAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_EmpBasInfoAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_EmpBasInfoOperationCompleted == null)) {
                this.Get_emr_EmpBasInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_EmpBasInfoOperationCompleted);
            }
            this.InvokeAsync("Get_emr_EmpBasInfo", new object[] {
                        case_no,
                        Err}, this.Get_emr_EmpBasInfoOperationCompleted, userState);
        }
        
        private void OnGet_emr_EmpBasInfoOperationCompleted(object arg) {
            if ((this.Get_emr_EmpBasInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_EmpBasInfoCompleted(this, new Get_emr_EmpBasInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_EmpLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_EmpLogin(string userId, ref string Err) {
            object[] results = this.Invoke("Get_emr_EmpLogin", new object[] {
                        userId,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_EmpLoginAsync(string userId, string Err) {
            this.Get_emr_EmpLoginAsync(userId, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_EmpLoginAsync(string userId, string Err, object userState) {
            if ((this.Get_emr_EmpLoginOperationCompleted == null)) {
                this.Get_emr_EmpLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_EmpLoginOperationCompleted);
            }
            this.InvokeAsync("Get_emr_EmpLogin", new object[] {
                        userId,
                        Err}, this.Get_emr_EmpLoginOperationCompleted, userState);
        }
        
        private void OnGet_emr_EmpLoginOperationCompleted(object arg) {
            if ((this.Get_emr_EmpLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_EmpLoginCompleted(this, new Get_emr_EmpLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_GENCONSENT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_GENCONSENT(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_GENCONSENT", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_GENCONSENTAsync(string case_no, string Err) {
            this.Get_emr_GENCONSENTAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_GENCONSENTAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_GENCONSENTOperationCompleted == null)) {
                this.Get_emr_GENCONSENTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_GENCONSENTOperationCompleted);
            }
            this.InvokeAsync("Get_emr_GENCONSENT", new object[] {
                        case_no,
                        Err}, this.Get_emr_GENCONSENTOperationCompleted, userState);
        }
        
        private void OnGet_emr_GENCONSENTOperationCompleted(object arg) {
            if ((this.Get_emr_GENCONSENTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_GENCONSENTCompleted(this, new Get_emr_GENCONSENTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CONSTYPE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CONSTYPE(int ConsentId, ref string Err) {
            object[] results = this.Invoke("Get_emr_CONSTYPE", new object[] {
                        ConsentId,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CONSTYPEAsync(int ConsentId, string Err) {
            this.Get_emr_CONSTYPEAsync(ConsentId, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CONSTYPEAsync(int ConsentId, string Err, object userState) {
            if ((this.Get_emr_CONSTYPEOperationCompleted == null)) {
                this.Get_emr_CONSTYPEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CONSTYPEOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CONSTYPE", new object[] {
                        ConsentId,
                        Err}, this.Get_emr_CONSTYPEOperationCompleted, userState);
        }
        
        private void OnGet_emr_CONSTYPEOperationCompleted(object arg) {
            if ((this.Get_emr_CONSTYPECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CONSTYPECompleted(this, new Get_emr_CONSTYPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_ConsentDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_ConsentDetails(int tranid, ref string Err) {
            object[] results = this.Invoke("Get_emr_ConsentDetails", new object[] {
                        tranid,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ConsentDetailsAsync(int tranid, string Err) {
            this.Get_emr_ConsentDetailsAsync(tranid, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ConsentDetailsAsync(int tranid, string Err, object userState) {
            if ((this.Get_emr_ConsentDetailsOperationCompleted == null)) {
                this.Get_emr_ConsentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ConsentDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_ConsentDetails", new object[] {
                        tranid,
                        Err}, this.Get_emr_ConsentDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_ConsentDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_ConsentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ConsentDetailsCompleted(this, new Get_emr_ConsentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AdmissionList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AdmissionList(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_AdmissionList", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AdmissionListAsync(string case_no, string Err) {
            this.Get_emr_AdmissionListAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AdmissionListAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_AdmissionListOperationCompleted == null)) {
                this.Get_emr_AdmissionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AdmissionListOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AdmissionList", new object[] {
                        case_no,
                        Err}, this.Get_emr_AdmissionListOperationCompleted, userState);
        }
        
        private void OnGet_emr_AdmissionListOperationCompleted(object arg) {
            if ((this.Get_emr_AdmissionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AdmissionListCompleted(this, new Get_emr_AdmissionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_DischargeSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_DischargeSummary(string case_no, string adm_date, string adm_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_DischargeSummary", new object[] {
                        case_no,
                        adm_date,
                        adm_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_DischargeSummaryAsync(string case_no, string adm_date, string adm_time, string Err) {
            this.Get_emr_Patient_DischargeSummaryAsync(case_no, adm_date, adm_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_DischargeSummaryAsync(string case_no, string adm_date, string adm_time, string Err, object userState) {
            if ((this.Get_emr_Patient_DischargeSummaryOperationCompleted == null)) {
                this.Get_emr_Patient_DischargeSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_DischargeSummaryOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_DischargeSummary", new object[] {
                        case_no,
                        adm_date,
                        adm_time,
                        Err}, this.Get_emr_Patient_DischargeSummaryOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_DischargeSummaryOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_DischargeSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_DischargeSummaryCompleted(this, new Get_emr_Patient_DischargeSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_DiagnosisDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_DiagnosisDetails(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_DiagnosisDetails", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_DiagnosisDetailsAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_DiagnosisDetailsAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_DiagnosisDetailsAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_DiagnosisDetailsOperationCompleted == null)) {
                this.Get_emr_Patient_DiagnosisDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_DiagnosisDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_DiagnosisDetails", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_DiagnosisDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_DiagnosisDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_DiagnosisDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_DiagnosisDetailsCompleted(this, new Get_emr_Patient_DiagnosisDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_Significant_Investigations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_Significant_Investigations(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_Significant_Investigations", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Significant_InvestigationsAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_Significant_InvestigationsAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Significant_InvestigationsAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_Significant_InvestigationsOperationCompleted == null)) {
                this.Get_emr_Patient_Significant_InvestigationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_Significant_InvestigationsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_Significant_Investigations", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_Significant_InvestigationsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_Significant_InvestigationsOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_Significant_InvestigationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_Significant_InvestigationsCompleted(this, new Get_emr_Patient_Significant_InvestigationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_RISLIB_Requisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_RISLIB_Requisition(string req_no, string d_type, ref string Err) {
            object[] results = this.Invoke("Get_emr_RISLIB_Requisition", new object[] {
                        req_no,
                        d_type,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_RISLIB_RequisitionAsync(string req_no, string d_type, string Err) {
            this.Get_emr_RISLIB_RequisitionAsync(req_no, d_type, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_RISLIB_RequisitionAsync(string req_no, string d_type, string Err, object userState) {
            if ((this.Get_emr_RISLIB_RequisitionOperationCompleted == null)) {
                this.Get_emr_RISLIB_RequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_RISLIB_RequisitionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_RISLIB_Requisition", new object[] {
                        req_no,
                        d_type,
                        Err}, this.Get_emr_RISLIB_RequisitionOperationCompleted, userState);
        }
        
        private void OnGet_emr_RISLIB_RequisitionOperationCompleted(object arg) {
            if ((this.Get_emr_RISLIB_RequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_RISLIB_RequisitionCompleted(this, new Get_emr_RISLIB_RequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_Surgery_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_Surgery_Details(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_Surgery_Details", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Surgery_DetailsAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_Surgery_DetailsAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Surgery_DetailsAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_Surgery_DetailsOperationCompleted == null)) {
                this.Get_emr_Patient_Surgery_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_Surgery_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_Surgery_Details", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_Surgery_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_Surgery_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_Surgery_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_Surgery_DetailsCompleted(this, new Get_emr_Patient_Surgery_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_OT_THREG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_OT_THREG(string surg_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_OT_THREG", new object[] {
                        surg_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_OT_THREGAsync(string surg_no, string Err) {
            this.Get_emr_OT_THREGAsync(surg_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_OT_THREGAsync(string surg_no, string Err, object userState) {
            if ((this.Get_emr_OT_THREGOperationCompleted == null)) {
                this.Get_emr_OT_THREGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_OT_THREGOperationCompleted);
            }
            this.InvokeAsync("Get_emr_OT_THREG", new object[] {
                        surg_no,
                        Err}, this.Get_emr_OT_THREGOperationCompleted, userState);
        }
        
        private void OnGet_emr_OT_THREGOperationCompleted(object arg) {
            if ((this.Get_emr_OT_THREGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_OT_THREGCompleted(this, new Get_emr_OT_THREGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_OT_THREGCN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_OT_THREGCN(string surg_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_OT_THREGCN", new object[] {
                        surg_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_OT_THREGCNAsync(string surg_no, string Err) {
            this.Get_emr_OT_THREGCNAsync(surg_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_OT_THREGCNAsync(string surg_no, string Err, object userState) {
            if ((this.Get_emr_OT_THREGCNOperationCompleted == null)) {
                this.Get_emr_OT_THREGCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_OT_THREGCNOperationCompleted);
            }
            this.InvokeAsync("Get_emr_OT_THREGCN", new object[] {
                        surg_no,
                        Err}, this.Get_emr_OT_THREGCNOperationCompleted, userState);
        }
        
        private void OnGet_emr_OT_THREGCNOperationCompleted(object arg) {
            if ((this.Get_emr_OT_THREGCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_OT_THREGCNCompleted(this, new Get_emr_OT_THREGCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_OT_TSRGRECN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_OT_TSRGRECN(string surg_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_OT_TSRGRECN", new object[] {
                        surg_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_OT_TSRGRECNAsync(string surg_no, string Err) {
            this.Get_emr_OT_TSRGRECNAsync(surg_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_OT_TSRGRECNAsync(string surg_no, string Err, object userState) {
            if ((this.Get_emr_OT_TSRGRECNOperationCompleted == null)) {
                this.Get_emr_OT_TSRGRECNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_OT_TSRGRECNOperationCompleted);
            }
            this.InvokeAsync("Get_emr_OT_TSRGRECN", new object[] {
                        surg_no,
                        Err}, this.Get_emr_OT_TSRGRECNOperationCompleted, userState);
        }
        
        private void OnGet_emr_OT_TSRGRECNOperationCompleted(object arg) {
            if ((this.Get_emr_OT_TSRGRECNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_OT_TSRGRECNCompleted(this, new Get_emr_OT_TSRGRECNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_External_BeamTherapy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_External_BeamTherapy(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_External_BeamTherapy", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_External_BeamTherapyAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_External_BeamTherapyAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_External_BeamTherapyAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_External_BeamTherapyOperationCompleted == null)) {
                this.Get_emr_Patient_External_BeamTherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_External_BeamTherapyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_External_BeamTherapy", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_External_BeamTherapyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_External_BeamTherapyOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_External_BeamTherapyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_External_BeamTherapyCompleted(this, new Get_emr_Patient_External_BeamTherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_Brachy_Therapy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_Brachy_Therapy(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_Brachy_Therapy", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Brachy_TherapyAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_Brachy_TherapyAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Brachy_TherapyAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_Brachy_TherapyOperationCompleted == null)) {
                this.Get_emr_Patient_Brachy_TherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_Brachy_TherapyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_Brachy_Therapy", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_Brachy_TherapyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_Brachy_TherapyOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_Brachy_TherapyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_Brachy_TherapyCompleted(this, new Get_emr_Patient_Brachy_TherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_Chemotherapy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_Chemotherapy(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_Chemotherapy", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_ChemotherapyAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_ChemotherapyAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_ChemotherapyAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_ChemotherapyOperationCompleted == null)) {
                this.Get_emr_Patient_ChemotherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_ChemotherapyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_Chemotherapy", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_ChemotherapyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_ChemotherapyOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_ChemotherapyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_ChemotherapyCompleted(this, new Get_emr_Patient_ChemotherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_Therapeutic_Endoscopy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_Therapeutic_Endoscopy(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_Therapeutic_Endoscopy", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Therapeutic_EndoscopyAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_Therapeutic_EndoscopyAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Therapeutic_EndoscopyAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_Therapeutic_EndoscopyOperationCompleted == null)) {
                this.Get_emr_Patient_Therapeutic_EndoscopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_Therapeutic_EndoscopyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_Therapeutic_Endoscopy", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_Therapeutic_EndoscopyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_Therapeutic_EndoscopyOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_Therapeutic_EndoscopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_Therapeutic_EndoscopyCompleted(this, new Get_emr_Patient_Therapeutic_EndoscopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_Other_Medications", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_Other_Medications(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_Other_Medications", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Other_MedicationsAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_Other_MedicationsAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Other_MedicationsAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_Other_MedicationsOperationCompleted == null)) {
                this.Get_emr_Patient_Other_MedicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_Other_MedicationsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_Other_Medications", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_Other_MedicationsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_Other_MedicationsOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_Other_MedicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_Other_MedicationsCompleted(this, new Get_emr_Patient_Other_MedicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_Other_Procedures", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_Other_Procedures(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_Other_Procedures", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Other_ProceduresAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_Other_ProceduresAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Other_ProceduresAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_Other_ProceduresOperationCompleted == null)) {
                this.Get_emr_Patient_Other_ProceduresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_Other_ProceduresOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_Other_Procedures", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_Other_ProceduresOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_Other_ProceduresOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_Other_ProceduresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_Other_ProceduresCompleted(this, new Get_emr_Patient_Other_ProceduresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_IV_Fluids", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_IV_Fluids(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_IV_Fluids", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_IV_FluidsAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_IV_FluidsAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_IV_FluidsAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_IV_FluidsOperationCompleted == null)) {
                this.Get_emr_Patient_IV_FluidsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_IV_FluidsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_IV_Fluids", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_IV_FluidsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_IV_FluidsOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_IV_FluidsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_IV_FluidsCompleted(this, new Get_emr_Patient_IV_FluidsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_Blood_Transfusion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_Blood_Transfusion(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_Blood_Transfusion", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Blood_TransfusionAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_Blood_TransfusionAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Blood_TransfusionAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_Blood_TransfusionOperationCompleted == null)) {
                this.Get_emr_Patient_Blood_TransfusionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_Blood_TransfusionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_Blood_Transfusion", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_Blood_TransfusionOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_Blood_TransfusionOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_Blood_TransfusionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_Blood_TransfusionCompleted(this, new Get_emr_Patient_Blood_TransfusionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_Medical_Advice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_Medical_Advice(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_Medical_Advice", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Medical_AdviceAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_Medical_AdviceAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Medical_AdviceAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_Medical_AdviceOperationCompleted == null)) {
                this.Get_emr_Patient_Medical_AdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_Medical_AdviceOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_Medical_Advice", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_Medical_AdviceOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_Medical_AdviceOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_Medical_AdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_Medical_AdviceCompleted(this, new Get_emr_Patient_Medical_AdviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_Other_Advice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_Other_Advice(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_Other_Advice", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Other_AdviceAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_Other_AdviceAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Other_AdviceAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_Other_AdviceOperationCompleted == null)) {
                this.Get_emr_Patient_Other_AdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_Other_AdviceOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_Other_Advice", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_Other_AdviceOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_Other_AdviceOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_Other_AdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_Other_AdviceCompleted(this, new Get_emr_Patient_Other_AdviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Patient_Significant_New_Investigations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Patient_Significant_New_Investigations(string case_no, string dis_date, string dis_time, ref string Err) {
            object[] results = this.Invoke("Get_emr_Patient_Significant_New_Investigations", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Significant_New_InvestigationsAsync(string case_no, string dis_date, string dis_time, string Err) {
            this.Get_emr_Patient_Significant_New_InvestigationsAsync(case_no, dis_date, dis_time, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Patient_Significant_New_InvestigationsAsync(string case_no, string dis_date, string dis_time, string Err, object userState) {
            if ((this.Get_emr_Patient_Significant_New_InvestigationsOperationCompleted == null)) {
                this.Get_emr_Patient_Significant_New_InvestigationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Patient_Significant_New_InvestigationsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Patient_Significant_New_Investigations", new object[] {
                        case_no,
                        dis_date,
                        dis_time,
                        Err}, this.Get_emr_Patient_Significant_New_InvestigationsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Patient_Significant_New_InvestigationsOperationCompleted(object arg) {
            if ((this.Get_emr_Patient_Significant_New_InvestigationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Patient_Significant_New_InvestigationsCompleted(this, new Get_emr_Patient_Significant_New_InvestigationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Clinical_Evaluation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Clinical_Evaluation(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Clinical_Evaluation", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Clinical_EvaluationAsync(string case_no, string Err) {
            this.Get_emr_Clinical_EvaluationAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Clinical_EvaluationAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Clinical_EvaluationOperationCompleted == null)) {
                this.Get_emr_Clinical_EvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Clinical_EvaluationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Clinical_Evaluation", new object[] {
                        case_no,
                        Err}, this.Get_emr_Clinical_EvaluationOperationCompleted, userState);
        }
        
        private void OnGet_emr_Clinical_EvaluationOperationCompleted(object arg) {
            if ((this.Get_emr_Clinical_EvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Clinical_EvaluationCompleted(this, new Get_emr_Clinical_EvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Clinical_Evaluation_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Clinical_Evaluation_Details(string case_no, string cedate, ref string Err) {
            object[] results = this.Invoke("Get_emr_Clinical_Evaluation_Details", new object[] {
                        case_no,
                        cedate,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Clinical_Evaluation_DetailsAsync(string case_no, string cedate, string Err) {
            this.Get_emr_Clinical_Evaluation_DetailsAsync(case_no, cedate, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Clinical_Evaluation_DetailsAsync(string case_no, string cedate, string Err, object userState) {
            if ((this.Get_emr_Clinical_Evaluation_DetailsOperationCompleted == null)) {
                this.Get_emr_Clinical_Evaluation_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Clinical_Evaluation_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Clinical_Evaluation_Details", new object[] {
                        case_no,
                        cedate,
                        Err}, this.Get_emr_Clinical_Evaluation_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Clinical_Evaluation_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Clinical_Evaluation_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Clinical_Evaluation_DetailsCompleted(this, new Get_emr_Clinical_Evaluation_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_History_ExamNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_History_ExamNo(string case_no, string cedate, string cetime, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_History_ExamNo", new object[] {
                        case_no,
                        cedate,
                        cetime,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_History_ExamNoAsync(string case_no, string cedate, string cetime, string hst_examno, string Err) {
            this.Get_emr_History_ExamNoAsync(case_no, cedate, cetime, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_History_ExamNoAsync(string case_no, string cedate, string cetime, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_History_ExamNoOperationCompleted == null)) {
                this.Get_emr_History_ExamNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_History_ExamNoOperationCompleted);
            }
            this.InvokeAsync("Get_emr_History_ExamNo", new object[] {
                        case_no,
                        cedate,
                        cetime,
                        hst_examno,
                        Err}, this.Get_emr_History_ExamNoOperationCompleted, userState);
        }
        
        private void OnGet_emr_History_ExamNoOperationCompleted(object arg) {
            if ((this.Get_emr_History_ExamNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_History_ExamNoCompleted(this, new Get_emr_History_ExamNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_History_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_History_Details(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_History_Details", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_History_DetailsAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_History_DetailsAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_History_DetailsAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_History_DetailsOperationCompleted == null)) {
                this.Get_emr_History_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_History_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_History_Details", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_History_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_History_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_History_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_History_DetailsCompleted(this, new Get_emr_History_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Complaints", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Complaints(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Complaints", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ComplaintsAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_ComplaintsAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ComplaintsAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_ComplaintsOperationCompleted == null)) {
                this.Get_emr_ComplaintsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ComplaintsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Complaints", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_ComplaintsOperationCompleted, userState);
        }
        
        private void OnGet_emr_ComplaintsOperationCompleted(object arg) {
            if ((this.Get_emr_ComplaintsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ComplaintsCompleted(this, new Get_emr_ComplaintsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_History_Examination", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_History_Examination(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_History_Examination", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_History_ExaminationAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_History_ExaminationAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_History_ExaminationAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_History_ExaminationOperationCompleted == null)) {
                this.Get_emr_History_ExaminationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_History_ExaminationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_History_Examination", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_History_ExaminationOperationCompleted, userState);
        }
        
        private void OnGet_emr_History_ExaminationOperationCompleted(object arg) {
            if ((this.Get_emr_History_ExaminationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_History_ExaminationCompleted(this, new Get_emr_History_ExaminationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_AssessmentType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_AssessmentType(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_AssessmentType", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_AssessmentTypeAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_AssessmentTypeAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_AssessmentTypeAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_AssessmentTypeOperationCompleted == null)) {
                this.Get_emr_AssessmentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_AssessmentTypeOperationCompleted);
            }
            this.InvokeAsync("Get_emr_AssessmentType", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_AssessmentTypeOperationCompleted, userState);
        }
        
        private void OnGet_emr_AssessmentTypeOperationCompleted(object arg) {
            if ((this.Get_emr_AssessmentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_AssessmentTypeCompleted(this, new Get_emr_AssessmentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Assessment_History_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Assessment_History_List(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Assessment_History_List", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Assessment_History_ListAsync(string case_no, string Err) {
            this.Get_emr_Assessment_History_ListAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Assessment_History_ListAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Assessment_History_ListOperationCompleted == null)) {
                this.Get_emr_Assessment_History_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Assessment_History_ListOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Assessment_History_List", new object[] {
                        case_no,
                        Err}, this.Get_emr_Assessment_History_ListOperationCompleted, userState);
        }
        
        private void OnGet_emr_Assessment_History_ListOperationCompleted(object arg) {
            if ((this.Get_emr_Assessment_History_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Assessment_History_ListCompleted(this, new Get_emr_Assessment_History_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Assessment_History_Dtl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Assessment_History_Dtl(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Assessment_History_Dtl", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Assessment_History_DtlAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Assessment_History_DtlAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Assessment_History_DtlAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Assessment_History_DtlOperationCompleted == null)) {
                this.Get_emr_Assessment_History_DtlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Assessment_History_DtlOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Assessment_History_Dtl", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Assessment_History_DtlOperationCompleted, userState);
        }
        
        private void OnGet_emr_Assessment_History_DtlOperationCompleted(object arg) {
            if ((this.Get_emr_Assessment_History_DtlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Assessment_History_DtlCompleted(this, new Get_emr_Assessment_History_DtlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Assessment_History_Complaints", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Assessment_History_Complaints(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Assessment_History_Complaints", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Assessment_History_ComplaintsAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Assessment_History_ComplaintsAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Assessment_History_ComplaintsAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Assessment_History_ComplaintsOperationCompleted == null)) {
                this.Get_emr_Assessment_History_ComplaintsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Assessment_History_ComplaintsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Assessment_History_Complaints", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Assessment_History_ComplaintsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Assessment_History_ComplaintsOperationCompleted(object arg) {
            if ((this.Get_emr_Assessment_History_ComplaintsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Assessment_History_ComplaintsCompleted(this, new Get_emr_Assessment_History_ComplaintsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Symptom_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Symptom_Details(string symptom, string case_no, string hst_examno, string Sympt_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Symptom_Details", new object[] {
                        symptom,
                        case_no,
                        hst_examno,
                        Sympt_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Symptom_DetailsAsync(string symptom, string case_no, string hst_examno, string Sympt_no, string Err) {
            this.Get_emr_Symptom_DetailsAsync(symptom, case_no, hst_examno, Sympt_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Symptom_DetailsAsync(string symptom, string case_no, string hst_examno, string Sympt_no, string Err, object userState) {
            if ((this.Get_emr_Symptom_DetailsOperationCompleted == null)) {
                this.Get_emr_Symptom_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Symptom_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Symptom_Details", new object[] {
                        symptom,
                        case_no,
                        hst_examno,
                        Sympt_no,
                        Err}, this.Get_emr_Symptom_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Symptom_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Symptom_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Symptom_DetailsCompleted(this, new Get_emr_Symptom_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Diagnosis_Status", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Diagnosis_Status(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Diagnosis_Status", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Diagnosis_StatusAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Diagnosis_StatusAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Diagnosis_StatusAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Diagnosis_StatusOperationCompleted == null)) {
                this.Get_emr_Diagnosis_StatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Diagnosis_StatusOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Diagnosis_Status", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Diagnosis_StatusOperationCompleted, userState);
        }
        
        private void OnGet_emr_Diagnosis_StatusOperationCompleted(object arg) {
            if ((this.Get_emr_Diagnosis_StatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Diagnosis_StatusCompleted(this, new Get_emr_Diagnosis_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Diagnosis_Method", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Diagnosis_Method(string dm_type, string index, ref string Err) {
            object[] results = this.Invoke("Get_emr_Diagnosis_Method", new object[] {
                        dm_type,
                        index,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Diagnosis_MethodAsync(string dm_type, string index, string Err) {
            this.Get_emr_Diagnosis_MethodAsync(dm_type, index, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Diagnosis_MethodAsync(string dm_type, string index, string Err, object userState) {
            if ((this.Get_emr_Diagnosis_MethodOperationCompleted == null)) {
                this.Get_emr_Diagnosis_MethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Diagnosis_MethodOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Diagnosis_Method", new object[] {
                        dm_type,
                        index,
                        Err}, this.Get_emr_Diagnosis_MethodOperationCompleted, userState);
        }
        
        private void OnGet_emr_Diagnosis_MethodOperationCompleted(object arg) {
            if ((this.Get_emr_Diagnosis_MethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Diagnosis_MethodCompleted(this, new Get_emr_Diagnosis_MethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Diagnosis_Investigation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Diagnosis_Investigation(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Diagnosis_Investigation", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Diagnosis_InvestigationAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Diagnosis_InvestigationAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Diagnosis_InvestigationAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Diagnosis_InvestigationOperationCompleted == null)) {
                this.Get_emr_Diagnosis_InvestigationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Diagnosis_InvestigationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Diagnosis_Investigation", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Diagnosis_InvestigationOperationCompleted, userState);
        }
        
        private void OnGet_emr_Diagnosis_InvestigationOperationCompleted(object arg) {
            if ((this.Get_emr_Diagnosis_InvestigationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Diagnosis_InvestigationCompleted(this, new Get_emr_Diagnosis_InvestigationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Intervention_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Intervention_Details(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Intervention_Details", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Intervention_DetailsAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Intervention_DetailsAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Intervention_DetailsAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Intervention_DetailsOperationCompleted == null)) {
                this.Get_emr_Intervention_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Intervention_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Intervention_Details", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Intervention_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Intervention_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Intervention_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Intervention_DetailsCompleted(this, new Get_emr_Intervention_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Surgery_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Surgery_Details(string case_no, string hst_examno, string interv_no, string interv_prev, ref string Err) {
            object[] results = this.Invoke("Get_emr_Surgery_Details", new object[] {
                        case_no,
                        hst_examno,
                        interv_no,
                        interv_prev,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Surgery_DetailsAsync(string case_no, string hst_examno, string interv_no, string interv_prev, string Err) {
            this.Get_emr_Surgery_DetailsAsync(case_no, hst_examno, interv_no, interv_prev, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Surgery_DetailsAsync(string case_no, string hst_examno, string interv_no, string interv_prev, string Err, object userState) {
            if ((this.Get_emr_Surgery_DetailsOperationCompleted == null)) {
                this.Get_emr_Surgery_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Surgery_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Surgery_Details", new object[] {
                        case_no,
                        hst_examno,
                        interv_no,
                        interv_prev,
                        Err}, this.Get_emr_Surgery_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Surgery_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Surgery_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Surgery_DetailsCompleted(this, new Get_emr_Surgery_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_ExternalRT_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_ExternalRT_Details(string case_no, string hst_examno, string interv_no, string interv_prev, ref string Err) {
            object[] results = this.Invoke("Get_emr_ExternalRT_Details", new object[] {
                        case_no,
                        hst_examno,
                        interv_no,
                        interv_prev,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ExternalRT_DetailsAsync(string case_no, string hst_examno, string interv_no, string interv_prev, string Err) {
            this.Get_emr_ExternalRT_DetailsAsync(case_no, hst_examno, interv_no, interv_prev, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ExternalRT_DetailsAsync(string case_no, string hst_examno, string interv_no, string interv_prev, string Err, object userState) {
            if ((this.Get_emr_ExternalRT_DetailsOperationCompleted == null)) {
                this.Get_emr_ExternalRT_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ExternalRT_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_ExternalRT_Details", new object[] {
                        case_no,
                        hst_examno,
                        interv_no,
                        interv_prev,
                        Err}, this.Get_emr_ExternalRT_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_ExternalRT_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_ExternalRT_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ExternalRT_DetailsCompleted(this, new Get_emr_ExternalRT_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Brachytherapy_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Brachytherapy_Details(string case_no, string hst_examno, string interv_no, string interv_prev, ref string Err) {
            object[] results = this.Invoke("Get_emr_Brachytherapy_Details", new object[] {
                        case_no,
                        hst_examno,
                        interv_no,
                        interv_prev,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Brachytherapy_DetailsAsync(string case_no, string hst_examno, string interv_no, string interv_prev, string Err) {
            this.Get_emr_Brachytherapy_DetailsAsync(case_no, hst_examno, interv_no, interv_prev, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Brachytherapy_DetailsAsync(string case_no, string hst_examno, string interv_no, string interv_prev, string Err, object userState) {
            if ((this.Get_emr_Brachytherapy_DetailsOperationCompleted == null)) {
                this.Get_emr_Brachytherapy_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Brachytherapy_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Brachytherapy_Details", new object[] {
                        case_no,
                        hst_examno,
                        interv_no,
                        interv_prev,
                        Err}, this.Get_emr_Brachytherapy_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Brachytherapy_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Brachytherapy_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Brachytherapy_DetailsCompleted(this, new Get_emr_Brachytherapy_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Chemotherapy_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Chemotherapy_Details(string case_no, string hst_examno, string interv_no, string interv_prev, ref string Err) {
            object[] results = this.Invoke("Get_emr_Chemotherapy_Details", new object[] {
                        case_no,
                        hst_examno,
                        interv_no,
                        interv_prev,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Chemotherapy_DetailsAsync(string case_no, string hst_examno, string interv_no, string interv_prev, string Err) {
            this.Get_emr_Chemotherapy_DetailsAsync(case_no, hst_examno, interv_no, interv_prev, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Chemotherapy_DetailsAsync(string case_no, string hst_examno, string interv_no, string interv_prev, string Err, object userState) {
            if ((this.Get_emr_Chemotherapy_DetailsOperationCompleted == null)) {
                this.Get_emr_Chemotherapy_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Chemotherapy_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Chemotherapy_Details", new object[] {
                        case_no,
                        hst_examno,
                        interv_no,
                        interv_prev,
                        Err}, this.Get_emr_Chemotherapy_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Chemotherapy_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Chemotherapy_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Chemotherapy_DetailsCompleted(this, new Get_emr_Chemotherapy_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Medical_History", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Medical_History(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Medical_History", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Medical_HistoryAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Medical_HistoryAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Medical_HistoryAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Medical_HistoryOperationCompleted == null)) {
                this.Get_emr_Medical_HistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Medical_HistoryOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Medical_History", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Medical_HistoryOperationCompleted, userState);
        }
        
        private void OnGet_emr_Medical_HistoryOperationCompleted(object arg) {
            if ((this.Get_emr_Medical_HistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Medical_HistoryCompleted(this, new Get_emr_Medical_HistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Allergies_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Allergies_Details(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Allergies_Details", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Allergies_DetailsAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Allergies_DetailsAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Allergies_DetailsAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Allergies_DetailsOperationCompleted == null)) {
                this.Get_emr_Allergies_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Allergies_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Allergies_Details", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Allergies_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Allergies_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Allergies_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Allergies_DetailsCompleted(this, new Get_emr_Allergies_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Manstrual_history", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Manstrual_history(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Manstrual_history", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Manstrual_historyAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Manstrual_historyAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Manstrual_historyAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Manstrual_historyOperationCompleted == null)) {
                this.Get_emr_Manstrual_historyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Manstrual_historyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Manstrual_history", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Manstrual_historyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Manstrual_historyOperationCompleted(object arg) {
            if ((this.Get_emr_Manstrual_historyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Manstrual_historyCompleted(this, new Get_emr_Manstrual_historyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Obstesteric_history", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Obstesteric_history(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Obstesteric_history", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Obstesteric_historyAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Obstesteric_historyAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Obstesteric_historyAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Obstesteric_historyOperationCompleted == null)) {
                this.Get_emr_Obstesteric_historyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Obstesteric_historyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Obstesteric_history", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Obstesteric_historyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Obstesteric_historyOperationCompleted(object arg) {
            if ((this.Get_emr_Obstesteric_historyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Obstesteric_historyCompleted(this, new Get_emr_Obstesteric_historyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Contraceptive_history", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Contraceptive_history(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Contraceptive_history", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Contraceptive_historyAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Contraceptive_historyAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Contraceptive_historyAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Contraceptive_historyOperationCompleted == null)) {
                this.Get_emr_Contraceptive_historyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Contraceptive_historyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Contraceptive_history", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Contraceptive_historyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Contraceptive_historyOperationCompleted(object arg) {
            if ((this.Get_emr_Contraceptive_historyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Contraceptive_historyCompleted(this, new Get_emr_Contraceptive_historyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Harmone_history", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Harmone_history(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Harmone_history", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Harmone_historyAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Harmone_historyAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Harmone_historyAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Harmone_historyOperationCompleted == null)) {
                this.Get_emr_Harmone_historyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Harmone_historyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Harmone_history", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Harmone_historyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Harmone_historyOperationCompleted(object arg) {
            if ((this.Get_emr_Harmone_historyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Harmone_historyCompleted(this, new Get_emr_Harmone_historyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Env_Occup_history", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Env_Occup_history(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Env_Occup_history", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Env_Occup_historyAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Env_Occup_historyAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Env_Occup_historyAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Env_Occup_historyOperationCompleted == null)) {
                this.Get_emr_Env_Occup_historyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Env_Occup_historyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Env_Occup_history", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Env_Occup_historyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Env_Occup_historyOperationCompleted(object arg) {
            if ((this.Get_emr_Env_Occup_historyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Env_Occup_historyCompleted(this, new Get_emr_Env_Occup_historyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Family_history", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Family_history(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_Family_history", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Family_historyAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_Family_historyAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Family_historyAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_Family_historyOperationCompleted == null)) {
                this.Get_emr_Family_historyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Family_historyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Family_history", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_Family_historyOperationCompleted, userState);
        }
        
        private void OnGet_emr_Family_historyOperationCompleted(object arg) {
            if ((this.Get_emr_Family_historyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Family_historyCompleted(this, new Get_emr_Family_historyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_LifeStyle_history", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_LifeStyle_history(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_LifeStyle_history", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_LifeStyle_historyAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_LifeStyle_historyAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_LifeStyle_historyAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_LifeStyle_historyOperationCompleted == null)) {
                this.Get_emr_LifeStyle_historyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_LifeStyle_historyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_LifeStyle_history", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_LifeStyle_historyOperationCompleted, userState);
        }
        
        private void OnGet_emr_LifeStyle_historyOperationCompleted(object arg) {
            if ((this.Get_emr_LifeStyle_historyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_LifeStyle_historyCompleted(this, new Get_emr_LifeStyle_historyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PrevCancer_history", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PrevCancer_history(string case_no, string hst_examno, ref string Err) {
            object[] results = this.Invoke("Get_emr_PrevCancer_history", new object[] {
                        case_no,
                        hst_examno,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PrevCancer_historyAsync(string case_no, string hst_examno, string Err) {
            this.Get_emr_PrevCancer_historyAsync(case_no, hst_examno, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PrevCancer_historyAsync(string case_no, string hst_examno, string Err, object userState) {
            if ((this.Get_emr_PrevCancer_historyOperationCompleted == null)) {
                this.Get_emr_PrevCancer_historyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PrevCancer_historyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PrevCancer_history", new object[] {
                        case_no,
                        hst_examno,
                        Err}, this.Get_emr_PrevCancer_historyOperationCompleted, userState);
        }
        
        private void OnGet_emr_PrevCancer_historyOperationCompleted(object arg) {
            if ((this.Get_emr_PrevCancer_historyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PrevCancer_historyCompleted(this, new Get_emr_PrevCancer_historyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_ServiceUnit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_ServiceUnit(string serviceID, ref string Err) {
            object[] results = this.Invoke("Get_emr_ServiceUnit", new object[] {
                        serviceID,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ServiceUnitAsync(string serviceID, string Err) {
            this.Get_emr_ServiceUnitAsync(serviceID, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ServiceUnitAsync(string serviceID, string Err, object userState) {
            if ((this.Get_emr_ServiceUnitOperationCompleted == null)) {
                this.Get_emr_ServiceUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ServiceUnitOperationCompleted);
            }
            this.InvokeAsync("Get_emr_ServiceUnit", new object[] {
                        serviceID,
                        Err}, this.Get_emr_ServiceUnitOperationCompleted, userState);
        }
        
        private void OnGet_emr_ServiceUnitOperationCompleted(object arg) {
            if ((this.Get_emr_ServiceUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ServiceUnitCompleted(this, new Get_emr_ServiceUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_SeenByDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_SeenByDoc(string empCode, ref string Err) {
            object[] results = this.Invoke("Get_emr_SeenByDoc", new object[] {
                        empCode,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_SeenByDocAsync(string empCode, string Err) {
            this.Get_emr_SeenByDocAsync(empCode, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_SeenByDocAsync(string empCode, string Err, object userState) {
            if ((this.Get_emr_SeenByDocOperationCompleted == null)) {
                this.Get_emr_SeenByDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_SeenByDocOperationCompleted);
            }
            this.InvokeAsync("Get_emr_SeenByDoc", new object[] {
                        empCode,
                        Err}, this.Get_emr_SeenByDocOperationCompleted, userState);
        }
        
        private void OnGet_emr_SeenByDocOperationCompleted(object arg) {
            if ((this.Get_emr_SeenByDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_SeenByDocCompleted(this, new Get_emr_SeenByDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_General_Examination_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_General_Examination_Details(string case_no, string hstexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_General_Examination_Details", new object[] {
                        case_no,
                        hstexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_General_Examination_DetailsAsync(string case_no, string hstexam_no, string Err) {
            this.Get_emr_General_Examination_DetailsAsync(case_no, hstexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_General_Examination_DetailsAsync(string case_no, string hstexam_no, string Err, object userState) {
            if ((this.Get_emr_General_Examination_DetailsOperationCompleted == null)) {
                this.Get_emr_General_Examination_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_General_Examination_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_General_Examination_Details", new object[] {
                        case_no,
                        hstexam_no,
                        Err}, this.Get_emr_General_Examination_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_General_Examination_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_General_Examination_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_General_Examination_DetailsCompleted(this, new Get_emr_General_Examination_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Examination_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Examination_List(string case_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Examination_List", new object[] {
                        case_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Examination_ListAsync(string case_no, string Err) {
            this.Get_emr_Examination_ListAsync(case_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Examination_ListAsync(string case_no, string Err, object userState) {
            if ((this.Get_emr_Examination_ListOperationCompleted == null)) {
                this.Get_emr_Examination_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Examination_ListOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Examination_List", new object[] {
                        case_no,
                        Err}, this.Get_emr_Examination_ListOperationCompleted, userState);
        }
        
        private void OnGet_emr_Examination_ListOperationCompleted(object arg) {
            if ((this.Get_emr_Examination_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Examination_ListCompleted(this, new Get_emr_Examination_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Pre_Malignant_Conditions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Pre_Malignant_Conditions(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Pre_Malignant_Conditions", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Pre_Malignant_ConditionsAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Pre_Malignant_ConditionsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Pre_Malignant_ConditionsAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Pre_Malignant_ConditionsOperationCompleted == null)) {
                this.Get_emr_Pre_Malignant_ConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Pre_Malignant_ConditionsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Pre_Malignant_Conditions", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Pre_Malignant_ConditionsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Pre_Malignant_ConditionsOperationCompleted(object arg) {
            if ((this.Get_emr_Pre_Malignant_ConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Pre_Malignant_ConditionsCompleted(this, new Get_emr_Pre_Malignant_ConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Consciousness", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Consciousness(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Consciousness", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ConsciousnessAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_ConsciousnessAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ConsciousnessAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_ConsciousnessOperationCompleted == null)) {
                this.Get_emr_ConsciousnessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ConsciousnessOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Consciousness", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_ConsciousnessOperationCompleted, userState);
        }
        
        private void OnGet_emr_ConsciousnessOperationCompleted(object arg) {
            if ((this.Get_emr_ConsciousnessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ConsciousnessCompleted(this, new Get_emr_ConsciousnessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Other_Higher_Functions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Other_Higher_Functions(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Other_Higher_Functions", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Other_Higher_FunctionsAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Other_Higher_FunctionsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Other_Higher_FunctionsAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Other_Higher_FunctionsOperationCompleted == null)) {
                this.Get_emr_Other_Higher_FunctionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Other_Higher_FunctionsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Other_Higher_Functions", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Other_Higher_FunctionsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Other_Higher_FunctionsOperationCompleted(object arg) {
            if ((this.Get_emr_Other_Higher_FunctionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Other_Higher_FunctionsCompleted(this, new Get_emr_Other_Higher_FunctionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Cranial_Nerves", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Cranial_Nerves(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Cranial_Nerves", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Cranial_NervesAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Cranial_NervesAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Cranial_NervesAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Cranial_NervesOperationCompleted == null)) {
                this.Get_emr_Cranial_NervesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Cranial_NervesOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Cranial_Nerves", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Cranial_NervesOperationCompleted, userState);
        }
        
        private void OnGet_emr_Cranial_NervesOperationCompleted(object arg) {
            if ((this.Get_emr_Cranial_NervesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Cranial_NervesCompleted(this, new Get_emr_Cranial_NervesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Gait", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Gait(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Gait", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_GaitAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_GaitAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_GaitAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_GaitOperationCompleted == null)) {
                this.Get_emr_GaitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_GaitOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Gait", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_GaitOperationCompleted, userState);
        }
        
        private void OnGet_emr_GaitOperationCompleted(object arg) {
            if ((this.Get_emr_GaitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_GaitCompleted(this, new Get_emr_GaitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Sensory_System", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Sensory_System(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Sensory_System", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Sensory_SystemAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Sensory_SystemAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Sensory_SystemAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Sensory_SystemOperationCompleted == null)) {
                this.Get_emr_Sensory_SystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Sensory_SystemOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Sensory_System", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Sensory_SystemOperationCompleted, userState);
        }
        
        private void OnGet_emr_Sensory_SystemOperationCompleted(object arg) {
            if ((this.Get_emr_Sensory_SystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Sensory_SystemCompleted(this, new Get_emr_Sensory_SystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Motor_System", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Motor_System(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Motor_System", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Motor_SystemAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Motor_SystemAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Motor_SystemAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Motor_SystemOperationCompleted == null)) {
                this.Get_emr_Motor_SystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Motor_SystemOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Motor_System", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Motor_SystemOperationCompleted, userState);
        }
        
        private void OnGet_emr_Motor_SystemOperationCompleted(object arg) {
            if ((this.Get_emr_Motor_SystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Motor_SystemCompleted(this, new Get_emr_Motor_SystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Muscle_Group_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Muscle_Group_Details(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Muscle_Group_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Muscle_Group_DetailsAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Muscle_Group_DetailsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Muscle_Group_DetailsAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Muscle_Group_DetailsOperationCompleted == null)) {
                this.Get_emr_Muscle_Group_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Muscle_Group_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Muscle_Group_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Muscle_Group_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Muscle_Group_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Muscle_Group_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Muscle_Group_DetailsCompleted(this, new Get_emr_Muscle_Group_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Reflexes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Reflexes(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Reflexes", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_ReflexesAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_ReflexesAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_ReflexesAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_ReflexesOperationCompleted == null)) {
                this.Get_emr_ReflexesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_ReflexesOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Reflexes", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_ReflexesOperationCompleted, userState);
        }
        
        private void OnGet_emr_ReflexesOperationCompleted(object arg) {
            if ((this.Get_emr_ReflexesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_ReflexesCompleted(this, new Get_emr_ReflexesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Cerebellar_Signs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Cerebellar_Signs(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Cerebellar_Signs", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Cerebellar_SignsAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Cerebellar_SignsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Cerebellar_SignsAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Cerebellar_SignsOperationCompleted == null)) {
                this.Get_emr_Cerebellar_SignsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Cerebellar_SignsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Cerebellar_Signs", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Cerebellar_SignsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Cerebellar_SignsOperationCompleted(object arg) {
            if ((this.Get_emr_Cerebellar_SignsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Cerebellar_SignsCompleted(this, new Get_emr_Cerebellar_SignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Endocrinopathies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Endocrinopathies(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Endocrinopathies", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_EndocrinopathiesAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_EndocrinopathiesAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_EndocrinopathiesAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_EndocrinopathiesOperationCompleted == null)) {
                this.Get_emr_EndocrinopathiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_EndocrinopathiesOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Endocrinopathies", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_EndocrinopathiesOperationCompleted, userState);
        }
        
        private void OnGet_emr_EndocrinopathiesOperationCompleted(object arg) {
            if ((this.Get_emr_EndocrinopathiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_EndocrinopathiesCompleted(this, new Get_emr_EndocrinopathiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Neurocutaneous_OtherSyndromes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Neurocutaneous_OtherSyndromes(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Neurocutaneous_OtherSyndromes", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Neurocutaneous_OtherSyndromesAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Neurocutaneous_OtherSyndromesAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Neurocutaneous_OtherSyndromesAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Neurocutaneous_OtherSyndromesOperationCompleted == null)) {
                this.Get_emr_Neurocutaneous_OtherSyndromesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Neurocutaneous_OtherSyndromesOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Neurocutaneous_OtherSyndromes", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Neurocutaneous_OtherSyndromesOperationCompleted, userState);
        }
        
        private void OnGet_emr_Neurocutaneous_OtherSyndromesOperationCompleted(object arg) {
            if ((this.Get_emr_Neurocutaneous_OtherSyndromesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Neurocutaneous_OtherSyndromesCompleted(this, new Get_emr_Neurocutaneous_OtherSyndromesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CSF_Diversion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CSF_Diversion(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_CSF_Diversion", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CSF_DiversionAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_CSF_DiversionAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CSF_DiversionAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_CSF_DiversionOperationCompleted == null)) {
                this.Get_emr_CSF_DiversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CSF_DiversionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CSF_Diversion", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_CSF_DiversionOperationCompleted, userState);
        }
        
        private void OnGet_emr_CSF_DiversionOperationCompleted(object arg) {
            if ((this.Get_emr_CSF_DiversionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CSF_DiversionCompleted(this, new Get_emr_CSF_DiversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Meningeal_Irritation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Meningeal_Irritation(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Meningeal_Irritation", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Meningeal_IrritationAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Meningeal_IrritationAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Meningeal_IrritationAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Meningeal_IrritationOperationCompleted == null)) {
                this.Get_emr_Meningeal_IrritationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Meningeal_IrritationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Meningeal_Irritation", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Meningeal_IrritationOperationCompleted, userState);
        }
        
        private void OnGet_emr_Meningeal_IrritationOperationCompleted(object arg) {
            if ((this.Get_emr_Meningeal_IrritationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Meningeal_IrritationCompleted(this, new Get_emr_Meningeal_IrritationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Neurological_Performance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Neurological_Performance(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Neurological_Performance", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Neurological_PerformanceAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Neurological_PerformanceAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Neurological_PerformanceAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Neurological_PerformanceOperationCompleted == null)) {
                this.Get_emr_Neurological_PerformanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Neurological_PerformanceOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Neurological_Performance", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Neurological_PerformanceOperationCompleted, userState);
        }
        
        private void OnGet_emr_Neurological_PerformanceOperationCompleted(object arg) {
            if ((this.Get_emr_Neurological_PerformanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Neurological_PerformanceCompleted(this, new Get_emr_Neurological_PerformanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_EyeDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_EyeDetails(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_EyeDetails", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_EyeDetailsAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_EyeDetailsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_EyeDetailsAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_EyeDetailsOperationCompleted == null)) {
                this.Get_emr_EyeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_EyeDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_EyeDetails", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_EyeDetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_EyeDetailsOperationCompleted(object arg) {
            if ((this.Get_emr_EyeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_EyeDetailsCompleted(this, new Get_emr_EyeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_External_Examination", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_External_Examination(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_External_Examination", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_External_ExaminationAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_External_ExaminationAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_External_ExaminationAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_External_ExaminationOperationCompleted == null)) {
                this.Get_emr_External_ExaminationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_External_ExaminationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_External_Examination", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_External_ExaminationOperationCompleted, userState);
        }
        
        private void OnGet_emr_External_ExaminationOperationCompleted(object arg) {
            if ((this.Get_emr_External_ExaminationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_External_ExaminationCompleted(this, new Get_emr_External_ExaminationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Internal_Examination", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Internal_Examination(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Internal_Examination", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Internal_ExaminationAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Internal_ExaminationAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Internal_ExaminationAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Internal_ExaminationOperationCompleted == null)) {
                this.Get_emr_Internal_ExaminationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Internal_ExaminationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Internal_Examination", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Internal_ExaminationOperationCompleted, userState);
        }
        
        private void OnGet_emr_Internal_ExaminationOperationCompleted(object arg) {
            if ((this.Get_emr_Internal_ExaminationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Internal_ExaminationCompleted(this, new Get_emr_Internal_ExaminationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Head_Neck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Head_Neck(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Head_Neck", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Head_NeckAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Head_NeckAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Head_NeckAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Head_NeckOperationCompleted == null)) {
                this.Get_emr_Head_NeckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Head_NeckOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Head_Neck", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Head_NeckOperationCompleted, userState);
        }
        
        private void OnGet_emr_Head_NeckOperationCompleted(object arg) {
            if ((this.Get_emr_Head_NeckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Head_NeckCompleted(this, new Get_emr_Head_NeckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Mouth_Oral_Cavity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Mouth_Oral_Cavity(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Mouth_Oral_Cavity", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Mouth_Oral_CavityAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Mouth_Oral_CavityAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Mouth_Oral_CavityAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Mouth_Oral_CavityOperationCompleted == null)) {
                this.Get_emr_Mouth_Oral_CavityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Mouth_Oral_CavityOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Mouth_Oral_Cavity", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Mouth_Oral_CavityOperationCompleted, userState);
        }
        
        private void OnGet_emr_Mouth_Oral_CavityOperationCompleted(object arg) {
            if ((this.Get_emr_Mouth_Oral_CavityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Mouth_Oral_CavityCompleted(this, new Get_emr_Mouth_Oral_CavityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Jaw_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Jaw_Details(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Jaw_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Jaw_DetailsAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Jaw_DetailsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Jaw_DetailsAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Jaw_DetailsOperationCompleted == null)) {
                this.Get_emr_Jaw_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Jaw_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Jaw_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Jaw_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Jaw_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Jaw_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Jaw_DetailsCompleted(this, new Get_emr_Jaw_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Neck_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Neck_Details(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Neck_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Neck_DetailsAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Neck_DetailsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Neck_DetailsAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Neck_DetailsOperationCompleted == null)) {
                this.Get_emr_Neck_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Neck_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Neck_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Neck_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Neck_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Neck_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Neck_DetailsCompleted(this, new Get_emr_Neck_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Tumour_Specific", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Tumour_Specific(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Tumour_Specific", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Tumour_SpecificAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Tumour_SpecificAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Tumour_SpecificAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Tumour_SpecificOperationCompleted == null)) {
                this.Get_emr_Tumour_SpecificOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Tumour_SpecificOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Tumour_Specific", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Tumour_SpecificOperationCompleted, userState);
        }
        
        private void OnGet_emr_Tumour_SpecificOperationCompleted(object arg) {
            if ((this.Get_emr_Tumour_SpecificCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Tumour_SpecificCompleted(this, new Get_emr_Tumour_SpecificCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_TNMStage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_TNMStage(string case_no, string histexam_no, string site, ref string Err) {
            object[] results = this.Invoke("Get_emr_TNMStage", new object[] {
                        case_no,
                        histexam_no,
                        site,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_TNMStageAsync(string case_no, string histexam_no, string site, string Err) {
            this.Get_emr_TNMStageAsync(case_no, histexam_no, site, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_TNMStageAsync(string case_no, string histexam_no, string site, string Err, object userState) {
            if ((this.Get_emr_TNMStageOperationCompleted == null)) {
                this.Get_emr_TNMStageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_TNMStageOperationCompleted);
            }
            this.InvokeAsync("Get_emr_TNMStage", new object[] {
                        case_no,
                        histexam_no,
                        site,
                        Err}, this.Get_emr_TNMStageOperationCompleted, userState);
        }
        
        private void OnGet_emr_TNMStageOperationCompleted(object arg) {
            if ((this.Get_emr_TNMStageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_TNMStageCompleted(this, new Get_emr_TNMStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Systemic_Examination", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Systemic_Examination(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Systemic_Examination", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Systemic_ExaminationAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Systemic_ExaminationAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Systemic_ExaminationAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Systemic_ExaminationOperationCompleted == null)) {
                this.Get_emr_Systemic_ExaminationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Systemic_ExaminationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Systemic_Examination", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Systemic_ExaminationOperationCompleted, userState);
        }
        
        private void OnGet_emr_Systemic_ExaminationOperationCompleted(object arg) {
            if ((this.Get_emr_Systemic_ExaminationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Systemic_ExaminationCompleted(this, new Get_emr_Systemic_ExaminationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Tumour_Specific_Examination", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Tumour_Specific_Examination(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Tumour_Specific_Examination", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Tumour_Specific_ExaminationAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Tumour_Specific_ExaminationAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Tumour_Specific_ExaminationAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Tumour_Specific_ExaminationOperationCompleted == null)) {
                this.Get_emr_Tumour_Specific_ExaminationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Tumour_Specific_ExaminationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Tumour_Specific_Examination", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Tumour_Specific_ExaminationOperationCompleted, userState);
        }
        
        private void OnGet_emr_Tumour_Specific_ExaminationOperationCompleted(object arg) {
            if ((this.Get_emr_Tumour_Specific_ExaminationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Tumour_Specific_ExaminationCompleted(this, new Get_emr_Tumour_Specific_ExaminationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Tumour_Details_Left", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Tumour_Details_Left(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Tumour_Details_Left", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Tumour_Details_LeftAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Tumour_Details_LeftAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Tumour_Details_LeftAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Tumour_Details_LeftOperationCompleted == null)) {
                this.Get_emr_Tumour_Details_LeftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Tumour_Details_LeftOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Tumour_Details_Left", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Tumour_Details_LeftOperationCompleted, userState);
        }
        
        private void OnGet_emr_Tumour_Details_LeftOperationCompleted(object arg) {
            if ((this.Get_emr_Tumour_Details_LeftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Tumour_Details_LeftCompleted(this, new Get_emr_Tumour_Details_LeftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Tumour_Details_Right", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Tumour_Details_Right(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Tumour_Details_Right", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Tumour_Details_RightAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Tumour_Details_RightAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Tumour_Details_RightAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Tumour_Details_RightOperationCompleted == null)) {
                this.Get_emr_Tumour_Details_RightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Tumour_Details_RightOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Tumour_Details_Right", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Tumour_Details_RightOperationCompleted, userState);
        }
        
        private void OnGet_emr_Tumour_Details_RightOperationCompleted(object arg) {
            if ((this.Get_emr_Tumour_Details_RightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Tumour_Details_RightCompleted(this, new Get_emr_Tumour_Details_RightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_CVSRS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_CVSRS(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_CVSRS", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_CVSRSAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_CVSRSAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_CVSRSAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_CVSRSOperationCompleted == null)) {
                this.Get_emr_CVSRSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_CVSRSOperationCompleted);
            }
            this.InvokeAsync("Get_emr_CVSRS", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_CVSRSOperationCompleted, userState);
        }
        
        private void OnGet_emr_CVSRSOperationCompleted(object arg) {
            if ((this.Get_emr_CVSRSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_CVSRSCompleted(this, new Get_emr_CVSRSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Inspection_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Inspection_Details(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Inspection_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Inspection_DetailsAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Inspection_DetailsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Inspection_DetailsAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Inspection_DetailsOperationCompleted == null)) {
                this.Get_emr_Inspection_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Inspection_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Inspection_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Inspection_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Inspection_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Inspection_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Inspection_DetailsCompleted(this, new Get_emr_Inspection_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Asculation_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Asculation_Details(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Asculation_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Asculation_DetailsAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Asculation_DetailsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Asculation_DetailsAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Asculation_DetailsOperationCompleted == null)) {
                this.Get_emr_Asculation_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Asculation_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Asculation_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Asculation_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_Asculation_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_Asculation_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Asculation_DetailsCompleted(this, new Get_emr_Asculation_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_TS_Thoracic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_TS_Thoracic(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_TS_Thoracic", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_TS_ThoracicAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_TS_ThoracicAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_TS_ThoracicAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_TS_ThoracicOperationCompleted == null)) {
                this.Get_emr_TS_ThoracicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_TS_ThoracicOperationCompleted);
            }
            this.InvokeAsync("Get_emr_TS_Thoracic", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_TS_ThoracicOperationCompleted, userState);
        }
        
        private void OnGet_emr_TS_ThoracicOperationCompleted(object arg) {
            if ((this.Get_emr_TS_ThoracicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_TS_ThoracicCompleted(this, new Get_emr_TS_ThoracicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PerAbdomen_Inspection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PerAbdomen_Inspection(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_PerAbdomen_Inspection", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PerAbdomen_InspectionAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_PerAbdomen_InspectionAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PerAbdomen_InspectionAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_PerAbdomen_InspectionOperationCompleted == null)) {
                this.Get_emr_PerAbdomen_InspectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PerAbdomen_InspectionOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PerAbdomen_Inspection", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_PerAbdomen_InspectionOperationCompleted, userState);
        }
        
        private void OnGet_emr_PerAbdomen_InspectionOperationCompleted(object arg) {
            if ((this.Get_emr_PerAbdomen_InspectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PerAbdomen_InspectionCompleted(this, new Get_emr_PerAbdomen_InspectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PerAbdomen_Palpation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PerAbdomen_Palpation(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_PerAbdomen_Palpation", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PerAbdomen_PalpationAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_PerAbdomen_PalpationAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PerAbdomen_PalpationAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_PerAbdomen_PalpationOperationCompleted == null)) {
                this.Get_emr_PerAbdomen_PalpationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PerAbdomen_PalpationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PerAbdomen_Palpation", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_PerAbdomen_PalpationOperationCompleted, userState);
        }
        
        private void OnGet_emr_PerAbdomen_PalpationOperationCompleted(object arg) {
            if ((this.Get_emr_PerAbdomen_PalpationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PerAbdomen_PalpationCompleted(this, new Get_emr_PerAbdomen_PalpationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PerAbdomen_Percussion_Asculation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PerAbdomen_Percussion_Asculation(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_PerAbdomen_Percussion_Asculation", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PerAbdomen_Percussion_AsculationAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_PerAbdomen_Percussion_AsculationAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PerAbdomen_Percussion_AsculationAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_PerAbdomen_Percussion_AsculationOperationCompleted == null)) {
                this.Get_emr_PerAbdomen_Percussion_AsculationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PerAbdomen_Percussion_AsculationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PerAbdomen_Percussion_Asculation", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_PerAbdomen_Percussion_AsculationOperationCompleted, userState);
        }
        
        private void OnGet_emr_PerAbdomen_Percussion_AsculationOperationCompleted(object arg) {
            if ((this.Get_emr_PerAbdomen_Percussion_AsculationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PerAbdomen_Percussion_AsculationCompleted(this, new Get_emr_PerAbdomen_Percussion_AsculationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PerAbdomen_Ascitis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PerAbdomen_Ascitis(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_PerAbdomen_Ascitis", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PerAbdomen_AscitisAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_PerAbdomen_AscitisAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PerAbdomen_AscitisAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_PerAbdomen_AscitisOperationCompleted == null)) {
                this.Get_emr_PerAbdomen_AscitisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PerAbdomen_AscitisOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PerAbdomen_Ascitis", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_PerAbdomen_AscitisOperationCompleted, userState);
        }
        
        private void OnGet_emr_PerAbdomen_AscitisOperationCompleted(object arg) {
            if ((this.Get_emr_PerAbdomen_AscitisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PerAbdomen_AscitisCompleted(this, new Get_emr_PerAbdomen_AscitisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PerAbdomen_TSGastro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PerAbdomen_TSGastro(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_PerAbdomen_TSGastro", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PerAbdomen_TSGastroAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_PerAbdomen_TSGastroAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PerAbdomen_TSGastroAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_PerAbdomen_TSGastroOperationCompleted == null)) {
                this.Get_emr_PerAbdomen_TSGastroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PerAbdomen_TSGastroOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PerAbdomen_TSGastro", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_PerAbdomen_TSGastroOperationCompleted, userState);
        }
        
        private void OnGet_emr_PerAbdomen_TSGastroOperationCompleted(object arg) {
            if ((this.Get_emr_PerAbdomen_TSGastroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PerAbdomen_TSGastroCompleted(this, new Get_emr_PerAbdomen_TSGastroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_PerRectal_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_PerRectal_Details(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_PerRectal_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_PerRectal_DetailsAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_PerRectal_DetailsAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_PerRectal_DetailsAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_PerRectal_DetailsOperationCompleted == null)) {
                this.Get_emr_PerRectal_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_PerRectal_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_emr_PerRectal_Details", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_PerRectal_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_emr_PerRectal_DetailsOperationCompleted(object arg) {
            if ((this.Get_emr_PerRectal_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_PerRectal_DetailsCompleted(this, new Get_emr_PerRectal_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Male_Genitalia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Male_Genitalia(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Male_Genitalia", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Male_GenitaliaAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Male_GenitaliaAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Male_GenitaliaAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Male_GenitaliaOperationCompleted == null)) {
                this.Get_emr_Male_GenitaliaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Male_GenitaliaOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Male_Genitalia", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Male_GenitaliaOperationCompleted, userState);
        }
        
        private void OnGet_emr_Male_GenitaliaOperationCompleted(object arg) {
            if ((this.Get_emr_Male_GenitaliaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Male_GenitaliaCompleted(this, new Get_emr_Male_GenitaliaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_Female_Genitalia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_Female_Genitalia(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_Female_Genitalia", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_Female_GenitaliaAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_Female_GenitaliaAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_Female_GenitaliaAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_Female_GenitaliaOperationCompleted == null)) {
                this.Get_emr_Female_GenitaliaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_Female_GenitaliaOperationCompleted);
            }
            this.InvokeAsync("Get_emr_Female_Genitalia", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_Female_GenitaliaOperationCompleted, userState);
        }
        
        private void OnGet_emr_Female_GenitaliaOperationCompleted(object arg) {
            if ((this.Get_emr_Female_GenitaliaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_Female_GenitaliaCompleted(this, new Get_emr_Female_GenitaliaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_TumorSpecific_Gynaecology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_TumorSpecific_Gynaecology(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_TumorSpecific_Gynaecology", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_TumorSpecific_GynaecologyAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_TumorSpecific_GynaecologyAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_TumorSpecific_GynaecologyAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_TumorSpecific_GynaecologyOperationCompleted == null)) {
                this.Get_emr_TumorSpecific_GynaecologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_TumorSpecific_GynaecologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_TumorSpecific_Gynaecology", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_TumorSpecific_GynaecologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_TumorSpecific_GynaecologyOperationCompleted(object arg) {
            if ((this.Get_emr_TumorSpecific_GynaecologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_TumorSpecific_GynaecologyCompleted(this, new Get_emr_TumorSpecific_GynaecologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_TumorSpecific_Urology", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_TumorSpecific_Urology(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_TumorSpecific_Urology", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_TumorSpecific_UrologyAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_TumorSpecific_UrologyAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_TumorSpecific_UrologyAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_TumorSpecific_UrologyOperationCompleted == null)) {
                this.Get_emr_TumorSpecific_UrologyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_TumorSpecific_UrologyOperationCompleted);
            }
            this.InvokeAsync("Get_emr_TumorSpecific_Urology", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_TumorSpecific_UrologyOperationCompleted, userState);
        }
        
        private void OnGet_emr_TumorSpecific_UrologyOperationCompleted(object arg) {
            if ((this.Get_emr_TumorSpecific_UrologyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_TumorSpecific_UrologyCompleted(this, new Get_emr_TumorSpecific_UrologyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_SystemicExamination", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_SystemicExamination(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_SystemicExamination", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_SystemicExaminationAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_SystemicExaminationAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_SystemicExaminationAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_SystemicExaminationOperationCompleted == null)) {
                this.Get_emr_SystemicExaminationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_SystemicExaminationOperationCompleted);
            }
            this.InvokeAsync("Get_emr_SystemicExamination", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_SystemicExaminationOperationCompleted, userState);
        }
        
        private void OnGet_emr_SystemicExaminationOperationCompleted(object arg) {
            if ((this.Get_emr_SystemicExaminationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_SystemicExaminationCompleted(this, new Get_emr_SystemicExaminationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_emr_BE_Swelling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_emr_BE_Swelling(string case_no, string histexam_no, ref string Err) {
            object[] results = this.Invoke("Get_emr_BE_Swelling", new object[] {
                        case_no,
                        histexam_no,
                        Err});
            Err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_emr_BE_SwellingAsync(string case_no, string histexam_no, string Err) {
            this.Get_emr_BE_SwellingAsync(case_no, histexam_no, Err, null);
        }
        
        /// <remarks/>
        public void Get_emr_BE_SwellingAsync(string case_no, string histexam_no, string Err, object userState) {
            if ((this.Get_emr_BE_SwellingOperationCompleted == null)) {
                this.Get_emr_BE_SwellingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_emr_BE_SwellingOperationCompleted);
            }
            this.InvokeAsync("Get_emr_BE_Swelling", new object[] {
                        case_no,
                        histexam_no,
                        Err}, this.Get_emr_BE_SwellingOperationCompleted, userState);
        }
        
        private void OnGet_emr_BE_SwellingOperationCompleted(object arg) {
            if ((this.Get_emr_BE_SwellingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_emr_BE_SwellingCompleted(this, new Get_emr_BE_SwellingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DischargeSummaryResult {
        
        private bool isFoundField;
        
        private string messageField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string admSeqNoField;
        
        private System.DateTime admsDateField;
        
        private System.DateTime dischDateField;
        
        private string recStatField;
        
        private string courseoftrField;
        
        private bool isWithin48HoursField;
        
        /// <remarks/>
        public bool IsFound {
            get {
                return this.isFoundField;
            }
            set {
                this.isFoundField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string AdmSeqNo {
            get {
                return this.admSeqNoField;
            }
            set {
                this.admSeqNoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AdmsDate {
            get {
                return this.admsDateField;
            }
            set {
                this.admsDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DischDate {
            get {
                return this.dischDateField;
            }
            set {
                this.dischDateField = value;
            }
        }
        
        /// <remarks/>
        public string RecStat {
            get {
                return this.recStatField;
            }
            set {
                this.recStatField = value;
            }
        }
        
        /// <remarks/>
        public string Courseoftr {
            get {
                return this.courseoftrField;
            }
            set {
                this.courseoftrField = value;
            }
        }
        
        /// <remarks/>
        public bool IsWithin48Hours {
            get {
                return this.isWithin48HoursField;
            }
            set {
                this.isWithin48HoursField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SelectListGroup {
        
        private bool disabledField;
        
        private string nameField;
        
        /// <remarks/>
        public bool Disabled {
            get {
                return this.disabledField;
            }
            set {
                this.disabledField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SelectListItem {
        
        private bool disabledField;
        
        private SelectListGroup groupField;
        
        private bool selectedField;
        
        private string textField;
        
        private string valueField;
        
        /// <remarks/>
        public bool Disabled {
            get {
                return this.disabledField;
            }
            set {
                this.disabledField = value;
            }
        }
        
        /// <remarks/>
        public SelectListGroup Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public bool Selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDistinctMediTypesCompletedEventHandler(object sender, GetDistinctMediTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistinctMediTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistinctMediTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDistinctTotalDoseCompletedEventHandler(object sender, GetDistinctTotalDoseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistinctTotalDoseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistinctTotalDoseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDaywiseDrugDetailsCompletedEventHandler(object sender, GetDaywiseDrugDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDaywiseDrugDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDaywiseDrugDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDistinctCycleDaysCompletedEventHandler(object sender, GetDistinctCycleDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistinctCycleDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistinctCycleDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDayPlanWithDateCompletedEventHandler(object sender, GetDayPlanWithDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDayPlanWithDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDayPlanWithDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProtocolInfoCompletedEventHandler(object sender, GetProtocolInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProtocolInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProtocolInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRadiationDoseDetailsCompletedEventHandler(object sender, GetRadiationDoseDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadiationDoseDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadiationDoseDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRadiationPlanEngineeringCompletedEventHandler(object sender, GetRadiationPlanEngineeringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadiationPlanEngineeringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadiationPlanEngineeringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRadiationBeamWedgeCompletedEventHandler(object sender, GetRadiationBeamWedgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadiationBeamWedgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadiationBeamWedgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRadiationDosimetryDetailsCompletedEventHandler(object sender, GetRadiationDosimetryDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadiationDosimetryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadiationDosimetryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRadiationPlanDetails2CompletedEventHandler(object sender, GetRadiationPlanDetails2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadiationPlanDetails2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadiationPlanDetails2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBeamWedgeDetails2CompletedEventHandler(object sender, GetBeamWedgeDetails2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBeamWedgeDetails2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBeamWedgeDetails2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPhysicsCalculationMasterCompletedEventHandler(object sender, GetPhysicsCalculationMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhysicsCalculationMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhysicsCalculationMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPhysicsCalculationDetailCompletedEventHandler(object sender, GetPhysicsCalculationDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhysicsCalculationDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhysicsCalculationDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPhysicsCalculationMain2CompletedEventHandler(object sender, GetPhysicsCalculationMain2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhysicsCalculationMain2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhysicsCalculationMain2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPhysicsCalculationDetail2CompletedEventHandler(object sender, GetPhysicsCalculationDetail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhysicsCalculationDetail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhysicsCalculationDetail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRadiationTreatmentMaster1CompletedEventHandler(object sender, GetRadiationTreatmentMaster1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadiationTreatmentMaster1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadiationTreatmentMaster1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetEMRTreatmentDetailsCompletedEventHandler(object sender, GetEMRTreatmentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMRTreatmentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMRTreatmentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRotPlanCompletedEventHandler(object sender, GetRotPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRotPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRotPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRomdmgdocCompletedEventHandler(object sender, GetRomdmgdocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRomdmgdocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRomdmgdocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRomdmguntCompletedEventHandler(object sender, GetRomdmguntCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRomdmguntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRomdmguntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTreatmentMasterDataCompletedEventHandler(object sender, GetTreatmentMasterDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreatmentMasterDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreatmentMasterDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSurgeryRecordCompletedEventHandler(object sender, GetSurgeryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSurgeryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSurgeryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSurgeryHeaderRecordCompletedEventHandler(object sender, GetSurgeryHeaderRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSurgeryHeaderRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSurgeryHeaderRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRadiationTreatmentDetailCompletedEventHandler(object sender, GetRadiationTreatmentDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadiationTreatmentDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadiationTreatmentDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRadiationTreatmentDetail1CompletedEventHandler(object sender, GetRadiationTreatmentDetail1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadiationTreatmentDetail1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadiationTreatmentDetail1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllCPlanNumbersCompletedEventHandler(object sender, GetAllCPlanNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCPlanNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCPlanNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTASSESSMCompletedEventHandler(object sender, GetROTASSESSMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTASSESSMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTASSESSMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTAS_REACCompletedEventHandler(object sender, GetROTAS_REACCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTAS_REACCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTAS_REACCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTCLAUDITCompletedEventHandler(object sender, GetROTCLAUDITCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTCLAUDITCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTCLAUDITCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTDiagnsCompletedEventHandler(object sender, GetCTDiagnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTDiagnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTDiagnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCompletedBrachyNosCompletedEventHandler(object sender, GetCompletedBrachyNosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompletedBrachyNosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompletedBrachyNosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTTREAT_DSummaryCompletedEventHandler(object sender, GetROTTREAT_DSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTTREAT_DSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTTREAT_DSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTTREAT_MCompletedEventHandler(object sender, GetROTTREAT_MCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTTREAT_MCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTTREAT_MCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTPLANCompletedEventHandler(object sender, GetROTPLANCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTPLANCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTPLANCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTBEAMCompletedEventHandler(object sender, GetROTBEAMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTBEAMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTBEAMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROMDMGDOCCompletedEventHandler(object sender, GetROMDMGDOCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROMDMGDOCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROMDMGDOCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROMDMGUNTCompletedEventHandler(object sender, GetROMDMGUNTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROMDMGUNTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROMDMGUNTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTPLANENGCompletedEventHandler(object sender, GetROTPLANENGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTPLANENGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTPLANENGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTTREAT_PhICompletedEventHandler(object sender, GetROTTREAT_PhICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTTREAT_PhICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTTREAT_PhICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTTREAT_PhIICompletedEventHandler(object sender, GetROTTREAT_PhIICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTTREAT_PhIICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTTREAT_PhIICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTTREAT_PhIIICompletedEventHandler(object sender, GetROTTREAT_PhIIICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTTREAT_PhIIICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTTREAT_PhIIICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTAS_REAC1CompletedEventHandler(object sender, GetROTAS_REAC1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTAS_REAC1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTAS_REAC1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMTDistDetCompletedEventHandler(object sender, GetMTDistDetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMTDistDetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMTDistDetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMedTypesCompletedEventHandler(object sender, GetMedTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAssessmentDataCompletedEventHandler(object sender, GetAssessmentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssessmentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssessmentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteTTTRTExceptIndex4CompletedEventHandler(object sender, DeleteTTTRTExceptIndex4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTTTRTExceptIndex4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTTTRTExceptIndex4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertIntoTTTRTCompletedEventHandler(object sender, InsertIntoTTTRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertIntoTTTRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertIntoTTTRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertAssessmentIntoTTTRTCompletedEventHandler(object sender, InsertAssessmentIntoTTTRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAssessmentIntoTTTRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAssessmentIntoTTTRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertClinicalAuditIntoTTTRTCompletedEventHandler(object sender, InsertClinicalAuditIntoTTTRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertClinicalAuditIntoTTTRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertClinicalAuditIntoTTTRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTTREAT_DCompletedEventHandler(object sender, GetROTTREAT_DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTTREAT_DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTTREAT_DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTASSESSM1CompletedEventHandler(object sender, GetROTASSESSM1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTASSESSM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTASSESSM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetROTCLAUDIT1CompletedEventHandler(object sender, GetROTCLAUDIT1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetROTCLAUDIT1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetROTCLAUDIT1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCPlansCompletedEventHandler(object sender, GetCPlansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCPlansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCPlansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetJCNumbersCompletedEventHandler(object sender, GetJCNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJCNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJCNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCPlanListByJCNoCompletedEventHandler(object sender, GetCPlanListByJCNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCPlanListByJCNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCPlanListByJCNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTreatmentDateFromMTRCHEDRGCompletedEventHandler(object sender, GetTreatmentDateFromMTRCHEDRGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreatmentDateFromMTRCHEDRGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreatmentDateFromMTRCHEDRGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDistinctDrugNamesByMediTypeCompletedEventHandler(object sender, GetDistinctDrugNamesByMediTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistinctDrugNamesByMediTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistinctDrugNamesByMediTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCPlanByCaseAndJCNoCompletedEventHandler(object sender, GetCPlanByCaseAndJCNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCPlanByCaseAndJCNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCPlanByCaseAndJCNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetJCNoByCaseNoCompletedEventHandler(object sender, GetJCNoByCaseNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJCNoByCaseNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJCNoByCaseNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMTProInfoCompletedEventHandler(object sender, GetMTProInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMTProInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMTProInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAdverseEventCompletedEventHandler(object sender, GetAdverseEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdverseEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdverseEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSideEffectsCompletedEventHandler(object sender, GetSideEffectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSideEffectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSideEffectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetResponseEvaluationCompletedEventHandler(object sender, GetResponseEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResponseEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResponseEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetChemoDrugDetailsCompletedEventHandler(object sender, GetChemoDrugDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChemoDrugDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChemoDrugDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProtocolInfo1CompletedEventHandler(object sender, GetProtocolInfo1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProtocolInfo1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProtocolInfo1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDistinctDrugNamesCompletedEventHandler(object sender, GetDistinctDrugNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistinctDrugNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistinctDrugNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void IsLoginValidCompletedEventHandler(object sender, IsLoginValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLoginValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLoginValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CommitDischargeSummaryCompletedEventHandler(object sender, CommitDischargeSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitDischargeSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitDischargeSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SearchDischargeSummaryCompletedEventHandler(object sender, SearchDischargeSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchDischargeSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchDischargeSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DischargeSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DischargeSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPatientInfoCompletedEventHandler(object sender, GetPatientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetHistExamDtTm2CompletedEventHandler(object sender, GetHistExamDtTm2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistExamDtTm2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistExamDtTm2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRadiologyRequisitionCompletedEventHandler(object sender, GetRadiologyRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadiologyRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadiologyRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDSiteDetailsCompletedEventHandler(object sender, GetDSiteDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDSiteDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDSiteDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDiagMethodCompletedEventHandler(object sender, GetDiagMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiagMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiagMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMA101CompletedEventHandler(object sender, GetMA101CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMA101CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMA101CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRepWritersCompletedEventHandler(object sender, GetRepWritersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRepWritersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRepWritersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRepWritersFCompletedEventHandler(object sender, GetRepWritersFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRepWritersFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRepWritersFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMycobacteriaDataCompletedEventHandler(object sender, GetMycobacteriaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMycobacteriaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMycobacteriaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserDetailsCompletedEventHandler(object sender, GetUserDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetStagingGroupCompletedEventHandler(object sender, GetStagingGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStagingGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStagingGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTNMStageCompletedEventHandler(object sender, GetTNMStageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTNMStageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTNMStageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTestReportCompletedEventHandler(object sender, GetTestReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProcedureName1CompletedEventHandler(object sender, GetProcedureName1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcedureName1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcedureName1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMycrobacteriologyReportCompletedEventHandler(object sender, GetMycrobacteriologyReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMycrobacteriologyReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMycrobacteriologyReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMycrobaDataCompletedEventHandler(object sender, GetMycrobaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMycrobaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMycrobaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAntibioticDataCompletedEventHandler(object sender, GetAntibioticDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAntibioticDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAntibioticDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSpecimenDataCompletedEventHandler(object sender, GetSpecimenDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecimenDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpecimenDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetNonNullAntibioticDataCompletedEventHandler(object sender, GetNonNullAntibioticDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonNullAntibioticDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonNullAntibioticDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetReportWritersCompletedEventHandler(object sender, GetReportWritersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportWritersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportWritersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetReportWritersByUsernameCompletedEventHandler(object sender, GetReportWritersByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportWritersByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportWritersByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProcedureDetailsCompletedEventHandler(object sender, GetProcedureDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcedureDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcedureDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDmbcCommCompletedEventHandler(object sender, GetDmbcCommCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDmbcCommCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDmbcCommCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDRequisitnCompletedEventHandler(object sender, GetDRequisitnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDRequisitnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDRequisitnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDCYReportCompletedEventHandler(object sender, GetDCYReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDCYReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDCYReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDFReportCompletedEventHandler(object sender, GetDFReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDFReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDFReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDHEMCYTO1ReportCompletedEventHandler(object sender, GetDHEMCYTO1ReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDHEMCYTO1ReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDHEMCYTO1ReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCMServices1CompletedEventHandler(object sender, GetCMServices1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCMServices1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCMServices1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIFMCOEXCompletedEventHandler(object sender, GetWIFMCOEXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIFMCOEXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIFMCOEXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIPRSNLHSCompletedEventHandler(object sender, GetWIPRSNLHSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIPRSNLHSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIPRSNLHSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDHEMCPDETCompletedEventHandler(object sender, GetDHEMCPDETCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDHEMCPDETCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDHEMCPDETCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetHINTERFACECompletedEventHandler(object sender, GetHINTERFACECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHINTERFACECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHINTERFACECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetReportHLF1CompletedEventHandler(object sender, GetReportHLF1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportHLF1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportHLF1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetReportHLF1_RBCCompletedEventHandler(object sender, GetReportHLF1_RBCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportHLF1_RBCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportHLF1_RBCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetReportHLF1_WBCCompletedEventHandler(object sender, GetReportHLF1_WBCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportHLF1_WBCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportHLF1_WBCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetReportHLF1_PlattCompletedEventHandler(object sender, GetReportHLF1_PlattCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportHLF1_PlattCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportHLF1_PlattCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWPSTNCPDTCompletedEventHandler(object sender, GetWPSTNCPDTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWPSTNCPDTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWPSTNCPDTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDHEMCBCDETCompletedEventHandler(object sender, GetDHEMCBCDETCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDHEMCBCDETCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDHEMCBCDETCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetReportHLLFCompletedEventHandler(object sender, GetReportHLLFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportHLLFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportHLLFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMachineNoCompletedEventHandler(object sender, GetMachineNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPValueCompletedEventHandler(object sender, GetPValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDCBCREP1CompletedEventHandler(object sender, GetDCBCREP1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDCBCREP1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDCBCREP1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDCBCREPACompletedEventHandler(object sender, GetDCBCREPACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDCBCREPACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDCBCREPACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTA101CompletedEventHandler(object sender, GetTA101CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTA101CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTA101CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDCBCSMREP1CompletedEventHandler(object sender, GetDCBCSMREP1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDCBCSMREP1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDCBCSMREP1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDBMAMyeloidCompletedEventHandler(object sender, GetDBMAMyeloidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBMAMyeloidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBMAMyeloidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDBMABCellCompletedEventHandler(object sender, GetDBMABCellCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBMABCellCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBMABCellCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDBMATKCellCompletedEventHandler(object sender, GetDBMATKCellCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBMATKCellCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBMATKCellCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDBMAOthersCompletedEventHandler(object sender, GetDBMAOthersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBMAOthersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBMAOthersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDRequisitn1CompletedEventHandler(object sender, GetDRequisitn1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDRequisitn1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDRequisitn1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDBMASubRepCompletedEventHandler(object sender, GetDBMASubRepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBMASubRepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBMASubRepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTestReport1CompletedEventHandler(object sender, GetTestReport1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestReport1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestReport1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWILExlbrstCompletedEventHandler(object sender, GetWILExlbrstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWILExlbrstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWILExlbrstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWILExrbrstCompletedEventHandler(object sender, GetWILExrbrstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWILExrbrstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWILExrbrstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWISysclnCompletedEventHandler(object sender, GetWISysclnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWISysclnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWISysclnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWPSTNCLFTCompletedEventHandler(object sender, GetWPSTNCLFTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWPSTNCLFTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWPSTNCLFTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWPSTNCCLFDCompletedEventHandler(object sender, GetWPSTNCCLFDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWPSTNCCLFDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWPSTNCCLFDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWADJPATDTSCompletedEventHandler(object sender, GetWADJPATDTSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWADJPATDTSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWADJPATDTSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWADJCHMOCompletedEventHandler(object sender, GetWADJCHMOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWADJCHMOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWADJCHMOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWADJRADCompletedEventHandler(object sender, GetWADJRADCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWADJRADCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWADJRADCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWADJHEMOCompletedEventHandler(object sender, GetWADJHEMOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWADJHEMOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWADJHEMOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWADJTARGTCompletedEventHandler(object sender, GetWADJTARGTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWADJTARGTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWADJTARGTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWADJBISPCompletedEventHandler(object sender, GetWADJBISPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWADJBISPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWADJBISPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWJCPatDtlsCompletedEventHandler(object sender, GetWJCPatDtlsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWJCPatDtlsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWJCPatDtlsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetClinNoteCompletedEventHandler(object sender, GetClinNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClinNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWPSTSRGLFTCompletedEventHandler(object sender, GetWPSTSRGLFTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWPSTSRGLFTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWPSTSRGLFTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWPSTSRGRGTCompletedEventHandler(object sender, GetWPSTSRGRGTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWPSTSRGRGTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWPSTSRGRGTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWPSTSRGPDTCompletedEventHandler(object sender, GetWPSTSRGPDTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWPSTSRGPDTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWPSTSRGPDTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIPATDTLSCompletedEventHandler(object sender, GetWIPATDTLSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIPATDTLSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIPATDTLSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWISURGYLFTCompletedEventHandler(object sender, GetWISURGYLFTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWISURGYLFTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWISURGYLFTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWISURGYRGTCompletedEventHandler(object sender, GetWISURGYRGTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWISURGYRGTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWISURGYRGTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIADJCHMEOCompletedEventHandler(object sender, GetWIADJCHMEOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIADJCHMEOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIADJCHMEOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIADJTTRTCompletedEventHandler(object sender, GetWIADJTTRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIADJTTRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIADJTTRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIPRSCOMCompletedEventHandler(object sender, GetWIPRSCOMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIPRSCOMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIPRSCOMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIPATDTLS_INTERVNTNCompletedEventHandler(object sender, GetWIPATDTLS_INTERVNTNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIPATDTLS_INTERVNTNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIPATDTLS_INTERVNTNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIPITSSUECompletedEventHandler(object sender, GetWIPITSSUECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIPITSSUECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIPITSSUECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWITDIMGCompletedEventHandler(object sender, GetWITDIMGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWITDIMGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWITDIMGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIPICNEOCompletedEventHandler(object sender, GetWIPICNEOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIPICNEOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIPICNEOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIPICLRLRCompletedEventHandler(object sender, GetWIPICLRLRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIPICLRLRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIPICLRLRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIPALLCHMOCompletedEventHandler(object sender, GetWIPALLCHMOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIPALLCHMOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIPALLCHMOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIPTTTCompletedEventHandler(object sender, GetWIPTTTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIPTTTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIPTTTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWIPTHTSRTCompletedEventHandler(object sender, GetWIPTHTSRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWIPTHTSRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWIPTHTSRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDrugName2CompletedEventHandler(object sender, GetDrugName2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrugName2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrugName2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AppendDrugNameCompletedEventHandler(object sender, AppendDrugNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AppendDrugNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AppendDrugNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDFNReportCompletedEventHandler(object sender, GetDFNReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDFNReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDFNReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPMConditionsCompletedEventHandler(object sender, GetPMConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPMConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPMConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetConsciousDataCompletedEventHandler(object sender, GetConsciousDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConsciousDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConsciousDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOHFDataCompletedEventHandler(object sender, GetOHFDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOHFDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOHFDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetFollowUpCompletedEventHandler(object sender, GetFollowUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFollowUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFollowUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckDeathStatusCompletedEventHandler(object sender, CheckDeathStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDeathStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDeathStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrimaryDiseaseDescriptionCompletedEventHandler(object sender, GetPrimaryDiseaseDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrimaryDiseaseDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrimaryDiseaseDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAddressDetailsCompletedEventHandler(object sender, GetAddressDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetNewRegDataCompletedEventHandler(object sender, GetNewRegDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewRegDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewRegDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetEmployeeTitleCompletedEventHandler(object sender, GetEmployeeTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetNewRequisitionDataCompletedEventHandler(object sender, GetNewRequisitionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewRequisitionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewRequisitionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRequisitionDataCompletedEventHandler(object sender, GetRequisitionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequisitionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequisitionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllSurgicalListCompletedEventHandler(object sender, GetAllSurgicalListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSurgicalListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSurgicalListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SelectListItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SelectListItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPAE_No_ListCompletedEventHandler(object sender, GetPAE_No_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPAE_No_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPAE_No_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SelectListItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SelectListItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Anesthesia_ProcNo_List1CompletedEventHandler(object sender, Get_Anesthesia_ProcNo_List1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Anesthesia_ProcNo_List1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Anesthesia_ProcNo_List1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SelectListItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SelectListItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSurgicalListCompletedEventHandler(object sender, GetSurgicalListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSurgicalListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSurgicalListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SelectListItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SelectListItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrescriptionMasterCompletedEventHandler(object sender, GetPrescriptionMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrescriptionDetailAmountCompletedEventHandler(object sender, GetPrescriptionDetailAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionDetailAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionDetailAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrescriptionMasterByCaseNoCompletedEventHandler(object sender, GetPrescriptionMasterByCaseNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionMasterByCaseNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionMasterByCaseNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrescriptionDetailsByPresIdCompletedEventHandler(object sender, GetPrescriptionDetailsByPresIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionDetailsByPresIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionDetailsByPresIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrescriptionMasterByIdCompletedEventHandler(object sender, GetPrescriptionMasterByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionMasterByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionMasterByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPatientDetailsByCaseNoCompletedEventHandler(object sender, GetPatientDetailsByCaseNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientDetailsByCaseNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientDetailsByCaseNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrescriptionDetailByIdCompletedEventHandler(object sender, GetPrescriptionDetailByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionDetailByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionDetailByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetConcessionByPrescriptionIdCompletedEventHandler(object sender, GetConcessionByPrescriptionIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConcessionByPrescriptionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConcessionByPrescriptionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrescriptionMasterById1CompletedEventHandler(object sender, GetPrescriptionMasterById1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionMasterById1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionMasterById1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTA101DetailsCompletedEventHandler(object sender, GetTA101DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTA101DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTA101DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrescriptionDetailCompletedEventHandler(object sender, GetPrescriptionDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetConcessionDataCompletedEventHandler(object sender, GetConcessionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConcessionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConcessionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetNameCompletedEventHandler(object sender, GetNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPresByCompletedEventHandler(object sender, GetPresByCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPresByCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPresByCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_RadioReferral_By_CaseNoCompletedEventHandler(object sender, Get_RadioReferral_By_CaseNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RadioReferral_By_CaseNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RadioReferral_By_CaseNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_RadioReferral_By_CaseNo_ACTCompletedEventHandler(object sender, Get_RadioReferral_By_CaseNo_ACTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RadioReferral_By_CaseNo_ACTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RadioReferral_By_CaseNo_ACTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDistinctJCNoCompletedEventHandler(object sender, GetDistinctJCNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistinctJCNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistinctJCNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetChemoReferralCompletedEventHandler(object sender, GetChemoReferralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChemoReferralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChemoReferralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetChemoReferralactCompletedEventHandler(object sender, GetChemoReferralactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChemoReferralactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChemoReferralactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOTProLatCompletedEventHandler(object sender, GetOTProLatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOTProLatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOTProLatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAnesProcCompletedEventHandler(object sender, GetAnesProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnesProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnesProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOTInopFindingsCompletedEventHandler(object sender, GetOTInopFindingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOTInopFindingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOTInopFindingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOTReSurgeryDetailsCompletedEventHandler(object sender, GetOTReSurgeryDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOTReSurgeryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOTReSurgeryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOTSubSiterDetailsCompletedEventHandler(object sender, GetOTSubSiterDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOTSubSiterDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOTSubSiterDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOTReprocesDetailsCompletedEventHandler(object sender, GetOTReprocesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOTReprocesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOTReprocesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMaxCycleNoFromMTCYCLEDTLCompletedEventHandler(object sender, GetMaxCycleNoFromMTCYCLEDTLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxCycleNoFromMTCYCLEDTLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxCycleNoFromMTCYCLEDTLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMTDistDetDetailsCompletedEventHandler(object sender, GetMTDistDetDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMTDistDetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMTDistDetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCycleDrugDayDetailsCompletedEventHandler(object sender, GetCycleDrugDayDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCycleDrugDayDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCycleDrugDayDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void executespqueryCompletedEventHandler(object sender, executespqueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executespqueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executespqueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserLoginDetailsCompletedEventHandler(object sender, GetUserLoginDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLoginDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLoginDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserLoginDetails1CompletedEventHandler(object sender, GetUserLoginDetails1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLoginDetails1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLoginDetails1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateUserPasswordCompletedEventHandler(object sender, UpdateUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRequisitionDetailsCompletedEventHandler(object sender, GetRequisitionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequisitionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequisitionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTJCINVRVWDetailsCompletedEventHandler(object sender, GetCTJCINVRVWDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTJCINVRVWDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTJCINVRVWDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRREQUISITNDetailsCompletedEventHandler(object sender, GetRREQUISITNDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRREQUISITNDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRREQUISITNDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetHistoricalExamsCompletedEventHandler(object sender, GetHistoricalExamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoricalExamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoricalExamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTHSTEXDTLByExamNoCompletedEventHandler(object sender, GetCTHSTEXDTLByExamNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTHSTEXDTLByExamNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTHSTEXDTLByExamNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetHistExamDetailsCompletedEventHandler(object sender, GetHistExamDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistExamDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistExamDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTCANCHISTCompletedEventHandler(object sender, GetCTCANCHISTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTCANCHISTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTCANCHISTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCMSERVICESCompletedEventHandler(object sender, GetCMSERVICESCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCMSERVICESCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCMSERVICESCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetEMPDTLSLFCompletedEventHandler(object sender, GetEMPDTLSLFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMPDTLSLFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMPDTLSLFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTMHSTCMPLCompletedEventHandler(object sender, GetCTMHSTCMPLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTMHSTCMPLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTMHSTCMPLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTMHSTCBSDCompletedEventHandler(object sender, GetCTMHSTCBSDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTMHSTCBSDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTMHSTCBSDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTMHSTCBSFCompletedEventHandler(object sender, GetCTMHSTCBSFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTMHSTCBSFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTMHSTCBSFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTMHSTCBSOCompletedEventHandler(object sender, GetCTMHSTCBSOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTMHSTCBSOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTMHSTCBSOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTMHSTCBSPCompletedEventHandler(object sender, GetCTMHSTCBSPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTMHSTCBSPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTMHSTCBSPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTMHSTCBSSCompletedEventHandler(object sender, GetCTMHSTCBSSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTMHSTCBSSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTMHSTCBSSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDiagnosisDetailsCompletedEventHandler(object sender, GetDiagnosisDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiagnosisDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiagnosisDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDigStsValueCompletedEventHandler(object sender, GetDigStsValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDigStsValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDigStsValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDiagnosisDetails1CompletedEventHandler(object sender, GetDiagnosisDetails1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiagnosisDetails1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiagnosisDetails1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDiagnosisStatusCompletedEventHandler(object sender, GetDiagnosisStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiagnosisStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiagnosisStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetInterventionDetailsCompletedEventHandler(object sender, GetInterventionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInterventionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInterventionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSurgeryDetailsCompletedEventHandler(object sender, GetSurgeryDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSurgeryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSurgeryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetExternalRTDetailsCompletedEventHandler(object sender, GetExternalRTDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalRTDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalRTDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBrachytherapyDetailsCompletedEventHandler(object sender, GetBrachytherapyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBrachytherapyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBrachytherapyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetChemotherapyDetailsCompletedEventHandler(object sender, GetChemotherapyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChemotherapyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChemotherapyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDrugNameCompletedEventHandler(object sender, GetDrugNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrugNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrugNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDrugName1CompletedEventHandler(object sender, GetDrugName1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrugName1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrugName1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMedicalHistoryCompletedEventHandler(object sender, GetMedicalHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedicalHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedicalHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllergyDetailsCompletedEventHandler(object sender, GetAllergyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllergyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllergyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMenstrualHistoryCompletedEventHandler(object sender, GetMenstrualHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenstrualHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenstrualHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetObstetricHistoryCompletedEventHandler(object sender, GetObstetricHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObstetricHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObstetricHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetContraceptiveHistoryCompletedEventHandler(object sender, GetContraceptiveHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContraceptiveHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContraceptiveHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetHormoneTherapyHistoryCompletedEventHandler(object sender, GetHormoneTherapyHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHormoneTherapyHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHormoneTherapyHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetEnvOccupationalHistoryCompletedEventHandler(object sender, GetEnvOccupationalHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnvOccupationalHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnvOccupationalHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetFamilyHistoryCompletedEventHandler(object sender, GetFamilyHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFamilyHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFamilyHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLifeStyleCompletedEventHandler(object sender, GetLifeStyleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLifeStyleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLifeStyleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCMServicesCompletedEventHandler(object sender, GetCMServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCMServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCMServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetHistExamDtTmCompletedEventHandler(object sender, GetHistExamDtTmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistExamDtTmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistExamDtTmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCISReferralCompletedEventHandler(object sender, GetCISReferralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCISReferralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCISReferralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPalliativeDetailsCompletedEventHandler(object sender, GetPalliativeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPalliativeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPalliativeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPalliativeInfoCompletedEventHandler(object sender, GetPalliativeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPalliativeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPalliativeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRadicalDetailCompletedEventHandler(object sender, GetRadicalDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadicalDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadicalDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRadicalCompletedEventHandler(object sender, GetRadicalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadicalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadicalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDiagnosisDetails2CompletedEventHandler(object sender, GetDiagnosisDetails2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiagnosisDetails2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiagnosisDetails2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetInvestigationOutReviewCompletedEventHandler(object sender, GetInvestigationOutReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvestigationOutReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvestigationOutReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetInvestigationOutCompletedEventHandler(object sender, GetInvestigationOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvestigationOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvestigationOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTJCINVRVWCompletedEventHandler(object sender, GetCTJCINVRVWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTJCINVRVWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTJCINVRVWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRREQUISITNCompletedEventHandler(object sender, GetRREQUISITNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRREQUISITNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRREQUISITNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPREVCANCER_HISTORYCompletedEventHandler(object sender, GetPREVCANCER_HISTORYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPREVCANCER_HISTORYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPREVCANCER_HISTORYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSurgeryAllCompletedEventHandler(object sender, GetSurgeryAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSurgeryAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSurgeryAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetExternalRTCompletedEventHandler(object sender, GetExternalRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBrachytherapyCompletedEventHandler(object sender, GetBrachytherapyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBrachytherapyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBrachytherapyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetChemotherapyCompletedEventHandler(object sender, GetChemotherapyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChemotherapyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChemotherapyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetGeneralExamCompletedEventHandler(object sender, GetGeneralExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCTDiagnosisCompletedEventHandler(object sender, GetCTDiagnosisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTDiagnosisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTDiagnosisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetHistExamDtTm1CompletedEventHandler(object sender, GetHistExamDtTm1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistExamDtTm1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistExamDtTm1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetJCNoCompletedEventHandler(object sender, GetJCNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJCNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJCNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetClinicalNotesCompletedEventHandler(object sender, GetClinicalNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinicalNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClinicalNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAdditionalRemarksCompletedEventHandler(object sender, GetAdditionalRemarksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdditionalRemarksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdditionalRemarksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCranialDetailsCompletedEventHandler(object sender, GetCranialDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCranialDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCranialDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetGaitDetailsCompletedEventHandler(object sender, GetGaitDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGaitDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGaitDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSensoryDetailsCompletedEventHandler(object sender, GetSensoryDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSensoryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSensoryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMotorSystemDetailsCompletedEventHandler(object sender, GetMotorSystemDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMotorSystemDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMotorSystemDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMuscleDetailsCompletedEventHandler(object sender, GetMuscleDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMuscleDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMuscleDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetReflexesDetailsCompletedEventHandler(object sender, GetReflexesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReflexesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReflexesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCerebellarDetailsCompletedEventHandler(object sender, GetCerebellarDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCerebellarDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCerebellarDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetEndocrineDetailsCompletedEventHandler(object sender, GetEndocrineDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEndocrineDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEndocrineDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRemarksCompletedEventHandler(object sender, GetRemarksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRemarksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRemarksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPatientOutcomeCompletedEventHandler(object sender, GetPatientOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetClinicExtCompletedEventHandler(object sender, GetClinicExtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinicExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClinicExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAdvancedDiseaseCompletedEventHandler(object sender, GetAdvancedDiseaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdvancedDiseaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdvancedDiseaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRecurrentCancerCompletedEventHandler(object sender, GetRecurrentCancerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecurrentCancerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecurrentCancerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetNOSCompletedEventHandler(object sender, GetNOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCSFDCompletedEventHandler(object sender, GetCSFDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCSFDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCSFDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMeningealCompletedEventHandler(object sender, GetMeningealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeningealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeningealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetNPSCompletedEventHandler(object sender, GetNPSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNPSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNPSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetEyesDetailsCompletedEventHandler(object sender, GetEyesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEyesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEyesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetExternalEyeExamCompletedEventHandler(object sender, GetExternalEyeExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalEyeExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalEyeExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetInternalEyeExamCompletedEventHandler(object sender, GetInternalEyeExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInternalEyeExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInternalEyeExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetHeadNeckDetailsCompletedEventHandler(object sender, GetHeadNeckDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHeadNeckDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHeadNeckDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMetastasisDetailsCompletedEventHandler(object sender, GetMetastasisDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetastasisDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetastasisDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMOCDetailsCompletedEventHandler(object sender, GetMOCDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMOCDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMOCDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetJawDetailsCompletedEventHandler(object sender, GetJawDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJawDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJawDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetNeckDetailsCompletedEventHandler(object sender, GetNeckDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNeckDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNeckDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTSHNDetailsCompletedEventHandler(object sender, GetTSHNDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTSHNDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTSHNDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSystemExamDetailsCompletedEventHandler(object sender, GetSystemExamDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemExamDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemExamDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTumorExamDetailsCompletedEventHandler(object sender, GetTumorExamDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTumorExamDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTumorExamDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTumorDetailsLeftCompletedEventHandler(object sender, GetTumorDetailsLeftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTumorDetailsLeftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTumorDetailsLeftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMetastasisDetails1CompletedEventHandler(object sender, GetMetastasisDetails1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetastasisDetails1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetastasisDetails1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetResidualDiseaseDetailsCompletedEventHandler(object sender, GetResidualDiseaseDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResidualDiseaseDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResidualDiseaseDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetExamNodesCompletedEventHandler(object sender, GetExamNodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExamNodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExamNodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProfilePathologyCompletedEventHandler(object sender, GetProfilePathologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfilePathologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfilePathologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProcedureUsedCompletedEventHandler(object sender, GetProcedureUsedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcedureUsedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcedureUsedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProcedureSoftTissueUsedCompletedEventHandler(object sender, GetProcedureSoftTissueUsedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcedureSoftTissueUsedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcedureSoftTissueUsedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProcedureMandibleUsedCompletedEventHandler(object sender, GetProcedureMandibleUsedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcedureMandibleUsedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcedureMandibleUsedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProcedureDraftAssessmentCompletedEventHandler(object sender, GetProcedureDraftAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcedureDraftAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcedureDraftAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSkinHairExamCompletedEventHandler(object sender, GetSkinHairExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSkinHairExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSkinHairExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBeSensSignCompletedEventHandler(object sender, GetBeSensSignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBeSensSignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBeSensSignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBeMotPowerCompletedEventHandler(object sender, GetBeMotPowerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBeMotPowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBeMotPowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBeMovRangeCompletedEventHandler(object sender, GetBeMovRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBeMovRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBeMovRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBeDeformityCompletedEventHandler(object sender, GetBeDeformityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBeDeformityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBeDeformityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBeTendernessCompletedEventHandler(object sender, GetBeTendernessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBeTendernessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBeTendernessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBeSwellingCompletedEventHandler(object sender, GetBeSwellingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBeSwellingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBeSwellingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSystemExamCompletedEventHandler(object sender, GetSystemExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUroTumorExamCompletedEventHandler(object sender, GetUroTumorExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUroTumorExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUroTumorExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetGyneTumorExamCompletedEventHandler(object sender, GetGyneTumorExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGyneTumorExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGyneTumorExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetFemaleGenitaliaExamCompletedEventHandler(object sender, GetFemaleGenitaliaExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFemaleGenitaliaExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFemaleGenitaliaExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMaleGenitaliaExamCompletedEventHandler(object sender, GetMaleGenitaliaExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaleGenitaliaExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaleGenitaliaExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPerRectalExamCompletedEventHandler(object sender, GetPerRectalExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerRectalExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerRectalExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrimaryTumorGastroCompletedEventHandler(object sender, GetPrimaryTumorGastroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrimaryTumorGastroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrimaryTumorGastroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAscitesExaminationCompletedEventHandler(object sender, GetAscitesExaminationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAscitesExaminationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAscitesExaminationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPercussionAscitesCompletedEventHandler(object sender, GetPercussionAscitesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPercussionAscitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPercussionAscitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTumorDetailsRightCompletedEventHandler(object sender, GetTumorDetailsRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTumorDetailsRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTumorDetailsRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCVSDetailsCompletedEventHandler(object sender, GetCVSDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCVSDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCVSDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCVSInspectionCompletedEventHandler(object sender, GetCVSInspectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCVSInspectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCVSInspectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCVSAuscultationCompletedEventHandler(object sender, GetCVSAuscultationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCVSAuscultationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCVSAuscultationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetThoracicTumorExamCompletedEventHandler(object sender, GetThoracicTumorExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThoracicTumorExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThoracicTumorExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAbdomenInspectionCompletedEventHandler(object sender, GetAbdomenInspectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAbdomenInspectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAbdomenInspectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAbdomenPalpationCompletedEventHandler(object sender, GetAbdomenPalpationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAbdomenPalpationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAbdomenPalpationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetEmployeeDetailsCompletedEventHandler(object sender, GetEmployeeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetClinicalEventHistoryCompletedEventHandler(object sender, GetClinicalEventHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinicalEventHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClinicalEventHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDistinctClinicalEventDatesCompletedEventHandler(object sender, GetDistinctClinicalEventDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistinctClinicalEventDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistinctClinicalEventDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetHistologyDataCompletedEventHandler(object sender, GetHistologyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistologyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistologyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProcedureNameCompletedEventHandler(object sender, GetProcedureNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcedureNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcedureNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDBMAReportCompletedEventHandler(object sender, GetDBMAReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBMAReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBMAReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JCOutsideTreatmentReviewCompletedEventHandler(object sender, Get_emr_JCOutsideTreatmentReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JCOutsideTreatmentReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JCOutsideTreatmentReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CLINICAL_DIAGNOSIS_DETAILSCompletedEventHandler(object sender, Get_emr_CLINICAL_DIAGNOSIS_DETAILSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CLINICAL_DIAGNOSIS_DETAILSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CLINICAL_DIAGNOSIS_DETAILSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JC_DiagnMethodCompletedEventHandler(object sender, Get_emr_JC_DiagnMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JC_DiagnMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JC_DiagnMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JC_PriSiteCompletedEventHandler(object sender, Get_emr_JC_PriSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JC_PriSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JC_PriSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JC_PriHistologyCompletedEventHandler(object sender, Get_emr_JC_PriHistologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JC_PriHistologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JC_PriHistologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JC_StageGrouppingCompletedEventHandler(object sender, Get_emr_JC_StageGrouppingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JC_StageGrouppingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JC_StageGrouppingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JC_ICD9CompletedEventHandler(object sender, Get_emr_JC_ICD9CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JC_ICD9CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JC_ICD9CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JC_RadicalTreatmentDetailsCompletedEventHandler(object sender, Get_emr_JC_RadicalTreatmentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JC_RadicalTreatmentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JC_RadicalTreatmentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JC_RadicalDetailsCompletedEventHandler(object sender, Get_emr_JC_RadicalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JC_RadicalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JC_RadicalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JC_PalliativeTreatmentDetailsCompletedEventHandler(object sender, Get_emr_JC_PalliativeTreatmentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JC_PalliativeTreatmentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JC_PalliativeTreatmentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JC_PalliativeDetailsCompletedEventHandler(object sender, Get_emr_JC_PalliativeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JC_PalliativeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JC_PalliativeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ClinicalNoteCompletedEventHandler(object sender, Get_emr_ClinicalNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ClinicalNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ClinicalNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ReferralsCompletedEventHandler(object sender, Get_emr_ReferralsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ReferralsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ReferralsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ClinicalDiagnosisCompletedEventHandler(object sender, Get_emr_ClinicalDiagnosisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ClinicalDiagnosisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ClinicalDiagnosisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PreventiveOncologyCompletedEventHandler(object sender, Get_emr_PreventiveOncologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PreventiveOncologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PreventiveOncologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_REF_CLINDIS_MGMTPLANCompletedEventHandler(object sender, Get_emr_REF_CLINDIS_MGMTPLANCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_REF_CLINDIS_MGMTPLANCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_REF_CLINDIS_MGMTPLANCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AttendanceCounsellingCompletedEventHandler(object sender, Get_emr_AttendanceCounsellingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AttendanceCounsellingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AttendanceCounsellingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ToabccoCessationCounsellingCompletedEventHandler(object sender, Get_emr_ToabccoCessationCounsellingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ToabccoCessationCounsellingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ToabccoCessationCounsellingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_RemarksDetailsCompletedEventHandler(object sender, Get_emr_RemarksDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_RemarksDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_RemarksDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AddendumDetailsCompletedEventHandler(object sender, Get_emr_AddendumDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AddendumDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AddendumDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_PAE_No_ListCompletedEventHandler(object sender, Get_PAE_No_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_PAE_No_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_PAE_No_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_PAE_No_DetailsCompletedEventHandler(object sender, Get_PAE_No_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_PAE_No_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_PAE_No_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Eval_AnaesthetistCompletedEventHandler(object sender, Get_Eval_AnaesthetistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Eval_AnaesthetistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Eval_AnaesthetistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Pae_ExaminationCompletedEventHandler(object sender, Get_Pae_ExaminationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Pae_ExaminationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Pae_ExaminationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_otadviceCompletedEventHandler(object sender, Get_otadviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_otadviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_otadviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Anesthesia_ProcNo_ListCompletedEventHandler(object sender, Get_Anesthesia_ProcNo_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Anesthesia_ProcNo_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Anesthesia_ProcNo_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Anesthesia_DetailsCompletedEventHandler(object sender, Get_Anesthesia_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Anesthesia_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Anesthesia_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Ane_Patient_admit_DtlCompletedEventHandler(object sender, Get_Ane_Patient_admit_DtlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Ane_Patient_admit_DtlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Ane_Patient_admit_DtlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Surgical_ProcNo_ListCompletedEventHandler(object sender, Get_Surgical_ProcNo_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Surgical_ProcNo_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Surgical_ProcNo_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Other_Surgical_ProcNo_ListCompletedEventHandler(object sender, Get_Other_Surgical_ProcNo_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Other_Surgical_ProcNo_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Other_Surgical_ProcNo_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Surgical_DetailsCompletedEventHandler(object sender, Get_Surgical_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Surgical_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Surgical_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Other_Surgical_DetailsCompletedEventHandler(object sender, Get_Other_Surgical_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Other_Surgical_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Other_Surgical_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_AnesthProcNoCompletedEventHandler(object sender, Get_AnesthProcNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_AnesthProcNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_AnesthProcNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_OTImage_DetailCompletedEventHandler(object sender, Get_OTImage_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_OTImage_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_OTImage_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_OTTINOPFND_DetailCompletedEventHandler(object sender, Get_OTTINOPFND_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_OTTINOPFND_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_OTTINOPFND_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_RECON_SURGERY_DetailsCompletedEventHandler(object sender, Get_RECON_SURGERY_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RECON_SURGERY_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RECON_SURGERY_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Procedure_SURGERY_DetailsCompletedEventHandler(object sender, Get_Procedure_SURGERY_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Procedure_SURGERY_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Procedure_SURGERY_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_FindSubsiteCompletedEventHandler(object sender, Get_FindSubsiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_FindSubsiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_FindSubsiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_FindDefectCompletedEventHandler(object sender, Get_FindDefectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_FindDefectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_FindDefectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_ReProceduresCompletedEventHandler(object sender, Get_ReProceduresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ReProceduresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ReProceduresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_ROIS_CourseNoCompletedEventHandler(object sender, Get_ROIS_CourseNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ROIS_CourseNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ROIS_CourseNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_ROIS_PhaseNoCompletedEventHandler(object sender, Get_ROIS_PhaseNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ROIS_PhaseNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ROIS_PhaseNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_ROIS_PlanNoCompletedEventHandler(object sender, Get_ROIS_PlanNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ROIS_PlanNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ROIS_PlanNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Plan_ROISCompletedEventHandler(object sender, Get_Plan_ROISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Plan_ROISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Plan_ROISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_TeleTheradetCompletedEventHandler(object sender, Get_TeleTheradetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_TeleTheradetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_TeleTheradetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Unit_NameCompletedEventHandler(object sender, Get_Unit_NameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Unit_NameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Unit_NameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Unit_Name2CompletedEventHandler(object sender, Get_Unit_Name2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Unit_Name2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Unit_Name2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Plan1_ROISCompletedEventHandler(object sender, Get_Plan1_ROISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Plan1_ROISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Plan1_ROISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Energy_ROISCompletedEventHandler(object sender, Get_Energy_ROISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Energy_ROISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Energy_ROISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Energy1_ROISCompletedEventHandler(object sender, Get_Energy1_ROISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Energy1_ROISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Energy1_ROISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Beam_ROISCompletedEventHandler(object sender, Get_Beam_ROISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Beam_ROISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Beam_ROISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Beam1_ROISCompletedEventHandler(object sender, Get_Beam1_ROISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Beam1_ROISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Beam1_ROISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BeamWed_ROISCompletedEventHandler(object sender, Get_BeamWed_ROISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BeamWed_ROISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BeamWed_ROISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BeamWed1_ROISCompletedEventHandler(object sender, Get_BeamWed1_ROISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BeamWed1_ROISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BeamWed1_ROISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BeamPlan_ROISCompletedEventHandler(object sender, Get_BeamPlan_ROISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BeamPlan_ROISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BeamPlan_ROISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BeamPlan1_ROISCompletedEventHandler(object sender, Get_BeamPlan1_ROISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BeamPlan1_ROISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BeamPlan1_ROISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_ROTPRDOS_MCompletedEventHandler(object sender, Get_ROTPRDOS_MCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ROTPRDOS_MCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ROTPRDOS_MCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_ROTPDOS_M1CompletedEventHandler(object sender, Get_ROTPDOS_M1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ROTPDOS_M1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ROTPDOS_M1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_ROTPRDOS_DCompletedEventHandler(object sender, Get_ROTPRDOS_DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ROTPRDOS_DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ROTPRDOS_DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyNumber_ListCompletedEventHandler(object sender, Get_BrachyNumber_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyNumber_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyNumber_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyCountIntraCavitaryCompletedEventHandler(object sender, Get_BrachyCountIntraCavitaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyCountIntraCavitaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyCountIntraCavitaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_IntraCavitary_ROBTINTDETCompletedEventHandler(object sender, Get_IntraCavitary_ROBTINTDETCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_IntraCavitary_ROBTINTDETCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_IntraCavitary_ROBTINTDETCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_IntraCavitary_ROBTINCPLNCompletedEventHandler(object sender, Get_IntraCavitary_ROBTINCPLNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_IntraCavitary_ROBTINCPLNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_IntraCavitary_ROBTINCPLNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyIntraCavitary_SCHNOCompletedEventHandler(object sender, Get_BrachyIntraCavitary_SCHNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyIntraCavitary_SCHNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyIntraCavitary_SCHNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyIntraCavitary_OTTSRGRECNCompletedEventHandler(object sender, Get_BrachyIntraCavitary_OTTSRGRECNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyIntraCavitary_OTTSRGRECNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyIntraCavitary_OTTSRGRECNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyIntraCavitary_REQN_TYPECompletedEventHandler(object sender, Get_BrachyIntraCavitary_REQN_TYPECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyIntraCavitary_REQN_TYPECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyIntraCavitary_REQN_TYPECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyIntraCavitary_ROBTREQSNCompletedEventHandler(object sender, Get_BrachyIntraCavitary_ROBTREQSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyIntraCavitary_ROBTREQSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyIntraCavitary_ROBTREQSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyIntraCavitary_ROBTOTNOTECompletedEventHandler(object sender, Get_BrachyIntraCavitary_ROBTOTNOTECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyIntraCavitary_ROBTOTNOTECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyIntraCavitary_ROBTOTNOTECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyIntraCavitary_ROBTINTDETCompletedEventHandler(object sender, Get_BrachyIntraCavitary_ROBTINTDETCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyIntraCavitary_ROBTINTDETCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyIntraCavitary_ROBTINTDETCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyCountInterstitialCompletedEventHandler(object sender, Get_BrachyCountInterstitialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyCountInterstitialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyCountInterstitialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Interstitial_ROBTITSDLSCompletedEventHandler(object sender, Get_Interstitial_ROBTITSDLSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Interstitial_ROBTITSDLSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Interstitial_ROBTITSDLSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Interstitial_ROBTISPLNCompletedEventHandler(object sender, Get_Interstitial_ROBTISPLNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Interstitial_ROBTISPLNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Interstitial_ROBTISPLNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyInterstitial_SCHNOCompletedEventHandler(object sender, Get_BrachyInterstitial_SCHNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyInterstitial_SCHNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyInterstitial_SCHNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyInterstitial_OTTSRGRECNCompletedEventHandler(object sender, Get_BrachyInterstitial_OTTSRGRECNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyInterstitial_OTTSRGRECNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyInterstitial_OTTSRGRECNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyInterstitial_REQN_TYPECompletedEventHandler(object sender, Get_BrachyInterstitial_REQN_TYPECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyInterstitial_REQN_TYPECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyInterstitial_REQN_TYPECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyInterstitial_ROBTOTNOTECompletedEventHandler(object sender, Get_BrachyInterstitial_ROBTOTNOTECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyInterstitial_ROBTOTNOTECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyInterstitial_ROBTOTNOTECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyInterstitial_ROBTOTNOTE_DtlsCompletedEventHandler(object sender, Get_BrachyInterstitial_ROBTOTNOTE_DtlsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyInterstitial_ROBTOTNOTE_DtlsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyInterstitial_ROBTOTNOTE_DtlsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyInterstitial_ROBTITSDLSCompletedEventHandler(object sender, Get_BrachyInterstitial_ROBTITSDLSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyInterstitial_ROBTITSDLSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyInterstitial_ROBTITSDLSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachyCountSurfaceCompletedEventHandler(object sender, Get_BrachyCountSurfaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachyCountSurfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachyCountSurfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Surface_ROBTSADLSCompletedEventHandler(object sender, Get_Surface_ROBTSADLSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Surface_ROBTSADLSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Surface_ROBTSADLSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Surface_ROBTSAPLNCompletedEventHandler(object sender, Get_Surface_ROBTSAPLNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Surface_ROBTSAPLNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Surface_ROBTSAPLNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachySurface_SCHNOCompletedEventHandler(object sender, Get_BrachySurface_SCHNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachySurface_SCHNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachySurface_SCHNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachySurface_OTTSRGRECNCompletedEventHandler(object sender, Get_BrachySurface_OTTSRGRECNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachySurface_OTTSRGRECNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachySurface_OTTSRGRECNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachySurface_REQN_TYPECompletedEventHandler(object sender, Get_BrachySurface_REQN_TYPECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachySurface_REQN_TYPECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachySurface_REQN_TYPECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachySurface_ROBTOTNOTECompletedEventHandler(object sender, Get_BrachySurface_ROBTOTNOTECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachySurface_ROBTOTNOTECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachySurface_ROBTOTNOTECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachySurface_ROBTOTNOTE_DtlsCompletedEventHandler(object sender, Get_BrachySurface_ROBTOTNOTE_DtlsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachySurface_ROBTOTNOTE_DtlsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachySurface_ROBTOTNOTE_DtlsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_BrachySurface_ROBTSADLSCompletedEventHandler(object sender, Get_BrachySurface_ROBTSADLSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BrachySurface_ROBTSADLSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BrachySurface_ROBTSADLSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Brachy_HDR_LDRCompletedEventHandler(object sender, Get_Brachy_HDR_LDRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Brachy_HDR_LDRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Brachy_HDR_LDRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_BedCompletedEventHandler(object sender, Get_emr_BedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_BedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_BedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PrimSiteCompletedEventHandler(object sender, Get_emr_PrimSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PrimSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PrimSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CISLIBctdiagnsCompletedEventHandler(object sender, Get_emr_CISLIBctdiagnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CISLIBctdiagnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CISLIBctdiagnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_RadioNumber_ListCompletedEventHandler(object sender, Get_RadioNumber_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RadioNumber_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RadioNumber_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_JC_NoCompletedEventHandler(object sender, Get_JC_NoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_JC_NoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_JC_NoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_CPLAN_NoCompletedEventHandler(object sender, Get_CPLAN_NoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CPLAN_NoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CPLAN_NoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_JC_ParamCompletedEventHandler(object sender, Get_JC_ParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_JC_ParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_JC_ParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_CPLAN_ParamCompletedEventHandler(object sender, Get_CPLAN_ParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CPLAN_ParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CPLAN_ParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetmtproinfoCompletedEventHandler(object sender, GetmtproinfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetmtproinfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetmtproinfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_CycleMTCYCLEDTLCompletedEventHandler(object sender, Get_CycleMTCYCLEDTLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CycleMTCYCLEDTLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CycleMTCYCLEDTLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_medTypeCompletedEventHandler(object sender, Get_medTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_medTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_medTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_DistDrugCompletedEventHandler(object sender, Get_DistDrugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_DistDrugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_DistDrugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_MTDistDetCompletedEventHandler(object sender, Get_MTDistDetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_MTDistDetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_MTDistDetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void MTDistDet_detCompletedEventHandler(object sender, MTDistDet_detCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MTDistDet_detCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MTDistDet_detCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void MTDistDet_daydetCompletedEventHandler(object sender, MTDistDet_daydetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MTDistDet_daydetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MTDistDet_daydetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetVIEWChemCompletedEventHandler(object sender, GetVIEWChemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVIEWChemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVIEWChemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_ToxicityJCNoCompletedEventHandler(object sender, Get_ToxicityJCNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ToxicityJCNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ToxicityJCNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Follow_upCompletedEventHandler(object sender, Get_Follow_upCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Follow_upCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Follow_upCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Follow_up_diedCompletedEventHandler(object sender, Get_Follow_up_diedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Follow_up_diedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Follow_up_diedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Follow_up_recordCompletedEventHandler(object sender, Get_Follow_up_recordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Follow_up_recordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Follow_up_recordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Data_VW_WEBCISCCompletedEventHandler(object sender, Get_Data_VW_WEBCISCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Data_VW_WEBCISCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Data_VW_WEBCISCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Data_wipatdtlsCompletedEventHandler(object sender, Get_Data_wipatdtlsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Data_wipatdtlsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Data_wipatdtlsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Data_wipatdtlsOnINTERVNTNCompletedEventHandler(object sender, Get_Data_wipatdtlsOnINTERVNTNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Data_wipatdtlsOnINTERVNTNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Data_wipatdtlsOnINTERVNTNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Data_wiprscomCompletedEventHandler(object sender, Get_Data_wiprscomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Data_wiprscomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Data_wiprscomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Data_WIPITSSUECompletedEventHandler(object sender, Get_Data_WIPITSSUECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Data_WIPITSSUECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Data_WIPITSSUECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getemrVerifyOTPAndCaptchaCompletedEventHandler(object sender, getemrVerifyOTPAndCaptchaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getemrVerifyOTPAndCaptchaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getemrVerifyOTPAndCaptchaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getemrOTPCountCompletedEventHandler(object sender, getemrOTPCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getemrOTPCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getemrOTPCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_IncrementOtpCountCompletedEventHandler(object sender, Get_IncrementOtpCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_IncrementOtpCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_IncrementOtpCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_ResetOtpCountCompletedEventHandler(object sender, Get_ResetOtpCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ResetOtpCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ResetOtpCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_CheckCaseNoCompletedEventHandler(object sender, Get_CheckCaseNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CheckCaseNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CheckCaseNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPatientContactDetailsCompletedEventHandler(object sender, GetPatientContactDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientContactDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientContactDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckAndUpdatePasswordRecordCompletedEventHandler(object sender, CheckAndUpdatePasswordRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAndUpdatePasswordRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAndUpdatePasswordRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCaseCountCompletedEventHandler(object sender, GetCaseCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCaseLoginDetailsCompletedEventHandler(object sender, GetCaseLoginDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseLoginDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseLoginDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertPasswordRecordCompletedEventHandler(object sender, InsertPasswordRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPasswordRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPasswordRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLogPatientInfoCompletedEventHandler(object sender, GetLogPatientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogPatientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogPatientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLogPatientInfoByWebEMRCompletedEventHandler(object sender, GetLogPatientInfoByWebEMRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogPatientInfoByWebEMRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogPatientInfoByWebEMRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void executeSQLDSCompletedEventHandler(object sender, executeSQLDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executeSQLDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executeSQLDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void executeSQLDS1CompletedEventHandler(object sender, executeSQLDS1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executeSQLDS1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executeSQLDS1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void executeSQLCompletedEventHandler(object sender, executeSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executeSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executeSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_BE_TendernessCompletedEventHandler(object sender, Get_emr_BE_TendernessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_BE_TendernessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_BE_TendernessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_BE_DeformityCompletedEventHandler(object sender, Get_emr_BE_DeformityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_BE_DeformityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_BE_DeformityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_BE_MovRangeCompletedEventHandler(object sender, Get_emr_BE_MovRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_BE_MovRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_BE_MovRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_BE_MotorPowerCompletedEventHandler(object sender, Get_emr_BE_MotorPowerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_BE_MotorPowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_BE_MotorPowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_BE_SensationCompletedEventHandler(object sender, Get_emr_BE_SensationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_BE_SensationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_BE_SensationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ScanReportCompletedEventHandler(object sender, Get_emr_ScanReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ScanReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ScanReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AllRequisitionsCompletedEventHandler(object sender, Get_emr_AllRequisitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AllRequisitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AllRequisitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DISLIB_RequisitionsCompletedEventHandler(object sender, Get_emr_DISLIB_RequisitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DISLIB_RequisitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DISLIB_RequisitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_RequisitionsCompletedEventHandler(object sender, Get_emr_Count_RequisitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_RequisitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_RequisitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_StaffRequisitionsCompletedEventHandler(object sender, Get_emr_StaffRequisitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_StaffRequisitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_StaffRequisitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_EmployeeDtlCompletedEventHandler(object sender, Get_emr_EmployeeDtlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_EmployeeDtlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_EmployeeDtlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ServiceDescCompletedEventHandler(object sender, Get_emr_ServiceDescCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ServiceDescCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ServiceDescCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Addendum_DCompletedEventHandler(object sender, Get_emr_Addendum_DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Addendum_DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Addendum_DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Addendum_BFCompletedEventHandler(object sender, Get_emr_Addendum_BFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Addendum_BFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Addendum_BFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Addendum_CYCompletedEventHandler(object sender, Get_emr_Addendum_CYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Addendum_CYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Addendum_CYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Addendum_FACompletedEventHandler(object sender, Get_emr_Addendum_FACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Addendum_FACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Addendum_FACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Addendum_RCompletedEventHandler(object sender, Get_emr_Addendum_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Addendum_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Addendum_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_RSCBCCompletedEventHandler(object sender, Get_emr_RSCBCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_RSCBCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_RSCBCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_RSCBC2CompletedEventHandler(object sender, Get_emr_RSCBC2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_RSCBC2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_RSCBC2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DmulProceCompletedEventHandler(object sender, Get_emr_DmulProceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DmulProceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DmulProceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Radiology_AllRequisitionsCompletedEventHandler(object sender, Get_emr_Radiology_AllRequisitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Radiology_AllRequisitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Radiology_AllRequisitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_Radiology_RequisitionsCompletedEventHandler(object sender, Get_emr_Count_Radiology_RequisitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_Radiology_RequisitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_Radiology_RequisitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_NuclMed_AllRequisitionsCompletedEventHandler(object sender, Get_emr_NuclMed_AllRequisitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_NuclMed_AllRequisitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_NuclMed_AllRequisitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_NuclMed_ReportCompletedEventHandler(object sender, Get_emr_NuclMed_ReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_NuclMed_ReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_NuclMed_ReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_NuclMed_RequisitionCompletedEventHandler(object sender, Get_emr_NuclMed_RequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_NuclMed_RequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_NuclMed_RequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AllLab_RequisitionCompletedEventHandler(object sender, Get_emr_AllLab_RequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AllLab_RequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AllLab_RequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_LabRequisitionCompletedEventHandler(object sender, Get_emr_Count_LabRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_LabRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_LabRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Surgical_AllRequisitionCompletedEventHandler(object sender, Get_emr_Surgical_AllRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Surgical_AllRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Surgical_AllRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_SurgicalRequisitionCompletedEventHandler(object sender, Get_emr_Count_SurgicalRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_SurgicalRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_SurgicalRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CytologyRequisitionCompletedEventHandler(object sender, Get_emr_CytologyRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CytologyRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CytologyRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_CytologyRequisitionCompletedEventHandler(object sender, Get_emr_Count_CytologyRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_CytologyRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_CytologyRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CytoRequisitionCompletedEventHandler(object sender, Get_emr_CytoRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CytoRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CytoRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_CytoRequisitionCompletedEventHandler(object sender, Get_emr_Count_CytoRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_CytoRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_CytoRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_FNACRequisitionCompletedEventHandler(object sender, Get_emr_FNACRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_FNACRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_FNACRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_FNACRequisitionCompletedEventHandler(object sender, Get_emr_Count_FNACRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_FNACRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_FNACRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_BIOChemRequisitionCompletedEventHandler(object sender, Get_emr_BIOChemRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_BIOChemRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_BIOChemRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_BIOChemRequisitionCompletedEventHandler(object sender, Get_emr_Count_BIOChemRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_BIOChemRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_BIOChemRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_TumourRequisitionCompletedEventHandler(object sender, Get_emr_TumourRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_TumourRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_TumourRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_TumourRequisitionCompletedEventHandler(object sender, Get_emr_Count_TumourRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_TumourRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_TumourRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_MicroBioRequisitionCompletedEventHandler(object sender, Get_emr_MicroBioRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_MicroBioRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_MicroBioRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_MicroBioRequisitionCompletedEventHandler(object sender, Get_emr_Count_MicroBioRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_MicroBioRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_MicroBioRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AllRequisition_RptCompletedEventHandler(object sender, Get_emr_AllRequisition_RptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AllRequisition_RptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AllRequisition_RptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AllRequisition_Rpt_dTypeCompletedEventHandler(object sender, Get_emr_AllRequisition_Rpt_dTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AllRequisition_Rpt_dTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AllRequisition_Rpt_dTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AllRequisition_Report_DtlCompletedEventHandler(object sender, Get_emr_AllRequisition_Report_DtlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AllRequisition_Report_DtlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AllRequisition_Report_DtlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AllRequisition_MolecuLABCompletedEventHandler(object sender, Get_emr_AllRequisition_MolecuLABCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AllRequisition_MolecuLABCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AllRequisition_MolecuLABCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DFReportCompletedEventHandler(object sender, Get_emr_DFReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DFReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DFReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DRequisitionCompletedEventHandler(object sender, Get_emr_DRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_RTIMELOGCompletedEventHandler(object sender, Get_emr_RTIMELOGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_RTIMELOGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_RTIMELOGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CYTOGREPRTCompletedEventHandler(object sender, Get_emr_CYTOGREPRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CYTOGREPRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CYTOGREPRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DFNREPORTCompletedEventHandler(object sender, Get_emr_DFNREPORTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DFNREPORTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DFNREPORTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMPROCEDURCompletedEventHandler(object sender, Get_emr_DMPROCEDURCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMPROCEDURCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMPROCEDURCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMPROCEDUR_ELTESTCompletedEventHandler(object sender, Get_emr_DMPROCEDUR_ELTESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMPROCEDUR_ELTESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMPROCEDUR_ELTESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMBCCOMMCompletedEventHandler(object sender, Get_emr_DMBCCOMMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMBCCOMMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMBCCOMMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DHEMCYTO1CompletedEventHandler(object sender, Get_emr_DHEMCYTO1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DHEMCYTO1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DHEMCYTO1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DHEMCPDETCompletedEventHandler(object sender, Get_emr_DHEMCPDETCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DHEMCPDETCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DHEMCPDETCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_HINTERFACECompletedEventHandler(object sender, Get_emr_HINTERFACECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_HINTERFACECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_HINTERFACECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DHEMCBCDETCompletedEventHandler(object sender, Get_emr_DHEMCBCDETCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DHEMCBCDETCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DHEMCBCDETCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_REPORTHLF1CompletedEventHandler(object sender, Get_emr_REPORTHLF1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_REPORTHLF1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_REPORTHLF1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_REPORTHLF1_ObserTypewiseCompletedEventHandler(object sender, Get_emr_REPORTHLF1_ObserTypewiseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_REPORTHLF1_ObserTypewiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_REPORTHLF1_ObserTypewiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_HINTERFACE_MachineNoCompletedEventHandler(object sender, Get_emr_HINTERFACE_MachineNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_HINTERFACE_MachineNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_HINTERFACE_MachineNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_REPORTHLLFCompletedEventHandler(object sender, Get_emr_REPORTHLLFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_REPORTHLLFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_REPORTHLLFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DCBCREPACompletedEventHandler(object sender, Get_emr_DCBCREPACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DCBCREPACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DCBCREPACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DBMAREPORTCompletedEventHandler(object sender, Get_emr_DBMAREPORTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DBMAREPORTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DBMAREPORTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DBMASUBREPCompletedEventHandler(object sender, Get_emr_DBMASUBREPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DBMASUBREPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DBMASUBREPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DHBFREPORTCompletedEventHandler(object sender, Get_emr_DHBFREPORTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DHBFREPORTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DHBFREPORTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DIMBIOCHELCompletedEventHandler(object sender, Get_emr_DIMBIOCHELCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DIMBIOCHELCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DIMBIOCHELCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DIMBIOCHE1CompletedEventHandler(object sender, Get_emr_DIMBIOCHE1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DIMBIOCHE1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DIMBIOCHE1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMYCOBACTECompletedEventHandler(object sender, Get_emr_DMYCOBACTECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMYCOBACTECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMYCOBACTECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_MICROPROCECompletedEventHandler(object sender, Get_emr_MICROPROCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_MICROPROCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_MICROPROCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMOPRISMERCompletedEventHandler(object sender, Get_emr_DMOPRISMERCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMOPRISMERCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMOPRISMERCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMSPONANTICompletedEventHandler(object sender, Get_emr_DMSPONANTICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMSPONANTICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMSPONANTICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMBAANTICompletedEventHandler(object sender, Get_emr_DMBAANTICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMBAANTICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMBAANTICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMBAANTI_ANTIBIOTICCompletedEventHandler(object sender, Get_emr_DMBAANTI_ANTIBIOTICCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMBAANTI_ANTIBIOTICCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMBAANTI_ANTIBIOTICCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMBSEMCMOCompletedEventHandler(object sender, Get_emr_DMBSEMCMOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMBSEMCMOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMBSEMCMOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_MICRO_TESTCompletedEventHandler(object sender, Get_emr_MICRO_TESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_MICRO_TESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_MICRO_TESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_dmycobacteCompletedEventHandler(object sender, Get_emr_dmycobacteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_dmycobacteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_dmycobacteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMBSEMCMO_ResCompletedEventHandler(object sender, Get_emr_DMBSEMCMO_ResCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMBSEMCMO_ResCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMBSEMCMO_ResCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMURECompletedEventHandler(object sender, Get_emr_DMURECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMURECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMURECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DMSRECompletedEventHandler(object sender, Get_emr_DMSRECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DMSRECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DMSRECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_HaematoOncologyCompletedEventHandler(object sender, Get_emr_HaematoOncologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_HaematoOncologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_HaematoOncologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_HaematoOncologyCompletedEventHandler(object sender, Get_emr_Count_HaematoOncologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_HaematoOncologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_HaematoOncologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_HaematoPathologyCompletedEventHandler(object sender, Get_emr_HaematoPathologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_HaematoPathologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_HaematoPathologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_HaematoPathologyCompletedEventHandler(object sender, Get_emr_Count_HaematoPathologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_HaematoPathologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_HaematoPathologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_MedicalOncologyCompletedEventHandler(object sender, Get_emr_MedicalOncologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_MedicalOncologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_MedicalOncologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_MedicalOncologyCompletedEventHandler(object sender, Get_emr_Count_MedicalOncologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_MedicalOncologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_MedicalOncologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CardiologyCompletedEventHandler(object sender, Get_emr_CardiologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CardiologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CardiologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_CardiologyCompletedEventHandler(object sender, Get_emr_Count_CardiologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_CardiologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_CardiologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_EndoscopyCompletedEventHandler(object sender, Get_emr_EndoscopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_EndoscopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_EndoscopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Count_EndoscopyCompletedEventHandler(object sender, Get_emr_Count_EndoscopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Count_EndoscopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Count_EndoscopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_RadiologyReportCompletedEventHandler(object sender, Get_emr_RadiologyReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_RadiologyReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_RadiologyReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_RadiologyRptCompletedEventHandler(object sender, Get_emr_RadiologyRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_RadiologyRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_RadiologyRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_NuclearReportCompletedEventHandler(object sender, Get_emr_NuclearReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_NuclearReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_NuclearReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_NuclearRptCompletedEventHandler(object sender, Get_emr_NuclearRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_NuclearRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_NuclearRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_sPathologyReportCompletedEventHandler(object sender, Get_emr_sPathologyReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_sPathologyReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_sPathologyReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_sPathologyRptCompletedEventHandler(object sender, Get_emr_sPathologyRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_sPathologyRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_sPathologyRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CytologyReportCompletedEventHandler(object sender, Get_emr_CytologyReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CytologyReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CytologyReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CytologyRptCompletedEventHandler(object sender, Get_emr_CytologyRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CytologyRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CytologyRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CytogeneticsReportCompletedEventHandler(object sender, Get_emr_CytogeneticsReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CytogeneticsReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CytogeneticsReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CytogeneticsRptCompletedEventHandler(object sender, Get_emr_CytogeneticsRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CytogeneticsRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CytogeneticsRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DISIMPCompletedEventHandler(object sender, Get_emr_DISIMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DISIMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DISIMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DEDREPORTCompletedEventHandler(object sender, Get_emr_DEDREPORTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DEDREPORTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DEDREPORTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DECREPORTCompletedEventHandler(object sender, Get_emr_DECREPORTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DECREPORTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DECREPORTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DSTREPORTCompletedEventHandler(object sender, Get_emr_DSTREPORTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DSTREPORTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DSTREPORTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ECCHOREPCompletedEventHandler(object sender, Get_emr_ECCHOREPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ECCHOREPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ECCHOREPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_DPFREPORTCompletedEventHandler(object sender, Get_emr_DPFREPORTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_DPFREPORTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_DPFREPORTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_MOLECULABCompletedEventHandler(object sender, Get_emr_MOLECULABCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_MOLECULABCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_MOLECULABCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_FNACReportCompletedEventHandler(object sender, Get_emr_FNACReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_FNACReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_FNACReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_FNACRptCompletedEventHandler(object sender, Get_emr_FNACRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_FNACRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_FNACRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_BioChemReportCompletedEventHandler(object sender, Get_emr_BioChemReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_BioChemReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_BioChemReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_BioChemRptCompletedEventHandler(object sender, Get_emr_BioChemRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_BioChemRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_BioChemRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_TumorReportCompletedEventHandler(object sender, Get_emr_TumorReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_TumorReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_TumorReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_TumorRptCompletedEventHandler(object sender, Get_emr_TumorRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_TumorRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_TumorRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_MicroBiologyReportCompletedEventHandler(object sender, Get_emr_MicroBiologyReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_MicroBiologyReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_MicroBiologyReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_MicroBiologyRptCompletedEventHandler(object sender, Get_emr_MicroBiologyRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_MicroBiologyRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_MicroBiologyRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CardiologyReportCompletedEventHandler(object sender, Get_emr_CardiologyReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CardiologyReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CardiologyReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CardiologyRptCompletedEventHandler(object sender, Get_emr_CardiologyRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CardiologyRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CardiologyRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_EndoscopyReportCompletedEventHandler(object sender, Get_emr_EndoscopyReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_EndoscopyReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_EndoscopyReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_EndoscopyRptCompletedEventHandler(object sender, Get_emr_EndoscopyRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_EndoscopyRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_EndoscopyRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_MedOncologyReportCompletedEventHandler(object sender, Get_emr_MedOncologyReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_MedOncologyReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_MedOncologyReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_MicrobiologyReportCompletedEventHandler(object sender, Get_emr_MicrobiologyReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_MicrobiologyReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_MicrobiologyReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AllLabReqRptCompletedEventHandler(object sender, Get_emr_AllLabReqRptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AllLabReqRptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AllLabReqRptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AllLabReqRpt_DtlCompletedEventHandler(object sender, Get_emr_AllLabReqRpt_DtlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AllLabReqRpt_DtlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AllLabReqRpt_DtlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JointClinicNoListCompletedEventHandler(object sender, Get_emr_JointClinicNoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JointClinicNoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JointClinicNoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JointClinic_DetailsCompletedEventHandler(object sender, Get_emr_JointClinic_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JointClinic_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JointClinic_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JCRequisitionsCompletedEventHandler(object sender, Get_emr_JCRequisitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JCRequisitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JCRequisitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JCInvestigations_ReviewCompletedEventHandler(object sender, Get_emr_JCInvestigations_ReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JCInvestigations_ReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JCInvestigations_ReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JCInvestReview_ReqwiseCompletedEventHandler(object sender, Get_emr_JCInvestReview_ReqwiseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JCInvestReview_ReqwiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JCInvestReview_ReqwiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_JCInvest_OutsideTMHCompletedEventHandler(object sender, Get_emr_JCInvest_OutsideTMHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_JCInvest_OutsideTMHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_JCInvest_OutsideTMHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Emr_Marital_StatusCompletedEventHandler(object sender, Get_Emr_Marital_StatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Emr_Marital_StatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Emr_Marital_StatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Emr_EducationCompletedEventHandler(object sender, Get_Emr_EducationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Emr_EducationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Emr_EducationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Emr_OccupationCompletedEventHandler(object sender, Get_Emr_OccupationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Emr_OccupationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Emr_OccupationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Emr_NationalityCompletedEventHandler(object sender, Get_Emr_NationalityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Emr_NationalityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Emr_NationalityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Emr_ReligionCompletedEventHandler(object sender, Get_Emr_ReligionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Emr_ReligionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Emr_ReligionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Emr_Mother_TongueCompletedEventHandler(object sender, Get_Emr_Mother_TongueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Emr_Mother_TongueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Emr_Mother_TongueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Emr_PatientLoginCompletedEventHandler(object sender, Get_Emr_PatientLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Emr_PatientLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Emr_PatientLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Emr_PatientLogin2CompletedEventHandler(object sender, Get_Emr_PatientLogin2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Emr_PatientLogin2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Emr_PatientLogin2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Emr_PatientLogin3CompletedEventHandler(object sender, Get_Emr_PatientLogin3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Emr_PatientLogin3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Emr_PatientLogin3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_LastPatientVisitCompletedEventHandler(object sender, Get_LastPatientVisitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_LastPatientVisitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_LastPatientVisitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Update_PatientVisitCompletedEventHandler(object sender, Update_PatientVisitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_PatientVisitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_PatientVisitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_Emr_PatientDetailsCompletedEventHandler(object sender, Get_Emr_PatientDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Emr_PatientDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Emr_PatientDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_DMGRegCompletedEventHandler(object sender, Get_DMGRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_DMGRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_DMGRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Check_UserNameCompletedEventHandler(object sender, Check_UserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_UserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_UserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void emr_Update_PasswordCompletedEventHandler(object sender, emr_Update_PasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class emr_Update_PasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal emr_Update_PasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Insert_emrLoginCompletedEventHandler(object sender, Insert_emrLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_emrLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_emrLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PatientAddressDetailsCompletedEventHandler(object sender, Get_emr_PatientAddressDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PatientAddressDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PatientAddressDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PatientTypeCompletedEventHandler(object sender, Get_emr_PatientTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PatientTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PatientTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PatientPersonalDetailsCompletedEventHandler(object sender, Get_emr_PatientPersonalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PatientPersonalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PatientPersonalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PatientDMGDetailsCompletedEventHandler(object sender, Get_emr_PatientDMGDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PatientDMGDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PatientDMGDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_WardNameCompletedEventHandler(object sender, Get_emr_WardNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_WardNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_WardNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_WardCodeCompletedEventHandler(object sender, Get_emr_WardCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_WardCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_WardCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AdminDateCompletedEventHandler(object sender, Get_emr_AdminDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AdminDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AdminDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_BIOHazardCompletedEventHandler(object sender, Get_emr_BIOHazardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_BIOHazardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_BIOHazardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PreviousRegNoCompletedEventHandler(object sender, Get_emr_PreviousRegNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PreviousRegNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PreviousRegNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_EmpBasInfoCompletedEventHandler(object sender, Get_emr_EmpBasInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_EmpBasInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_EmpBasInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_EmpLoginCompletedEventHandler(object sender, Get_emr_EmpLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_EmpLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_EmpLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_GENCONSENTCompletedEventHandler(object sender, Get_emr_GENCONSENTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_GENCONSENTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_GENCONSENTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CONSTYPECompletedEventHandler(object sender, Get_emr_CONSTYPECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CONSTYPECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CONSTYPECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ConsentDetailsCompletedEventHandler(object sender, Get_emr_ConsentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ConsentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ConsentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AdmissionListCompletedEventHandler(object sender, Get_emr_AdmissionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AdmissionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AdmissionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_DischargeSummaryCompletedEventHandler(object sender, Get_emr_Patient_DischargeSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_DischargeSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_DischargeSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_DiagnosisDetailsCompletedEventHandler(object sender, Get_emr_Patient_DiagnosisDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_DiagnosisDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_DiagnosisDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_Significant_InvestigationsCompletedEventHandler(object sender, Get_emr_Patient_Significant_InvestigationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_Significant_InvestigationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_Significant_InvestigationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_RISLIB_RequisitionCompletedEventHandler(object sender, Get_emr_RISLIB_RequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_RISLIB_RequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_RISLIB_RequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_Surgery_DetailsCompletedEventHandler(object sender, Get_emr_Patient_Surgery_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_Surgery_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_Surgery_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_OT_THREGCompletedEventHandler(object sender, Get_emr_OT_THREGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_OT_THREGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_OT_THREGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_OT_THREGCNCompletedEventHandler(object sender, Get_emr_OT_THREGCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_OT_THREGCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_OT_THREGCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_OT_TSRGRECNCompletedEventHandler(object sender, Get_emr_OT_TSRGRECNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_OT_TSRGRECNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_OT_TSRGRECNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_External_BeamTherapyCompletedEventHandler(object sender, Get_emr_Patient_External_BeamTherapyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_External_BeamTherapyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_External_BeamTherapyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_Brachy_TherapyCompletedEventHandler(object sender, Get_emr_Patient_Brachy_TherapyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_Brachy_TherapyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_Brachy_TherapyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_ChemotherapyCompletedEventHandler(object sender, Get_emr_Patient_ChemotherapyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_ChemotherapyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_ChemotherapyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_Therapeutic_EndoscopyCompletedEventHandler(object sender, Get_emr_Patient_Therapeutic_EndoscopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_Therapeutic_EndoscopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_Therapeutic_EndoscopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_Other_MedicationsCompletedEventHandler(object sender, Get_emr_Patient_Other_MedicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_Other_MedicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_Other_MedicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_Other_ProceduresCompletedEventHandler(object sender, Get_emr_Patient_Other_ProceduresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_Other_ProceduresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_Other_ProceduresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_IV_FluidsCompletedEventHandler(object sender, Get_emr_Patient_IV_FluidsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_IV_FluidsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_IV_FluidsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_Blood_TransfusionCompletedEventHandler(object sender, Get_emr_Patient_Blood_TransfusionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_Blood_TransfusionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_Blood_TransfusionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_Medical_AdviceCompletedEventHandler(object sender, Get_emr_Patient_Medical_AdviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_Medical_AdviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_Medical_AdviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_Other_AdviceCompletedEventHandler(object sender, Get_emr_Patient_Other_AdviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_Other_AdviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_Other_AdviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Patient_Significant_New_InvestigationsCompletedEventHandler(object sender, Get_emr_Patient_Significant_New_InvestigationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Patient_Significant_New_InvestigationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Patient_Significant_New_InvestigationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Clinical_EvaluationCompletedEventHandler(object sender, Get_emr_Clinical_EvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Clinical_EvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Clinical_EvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Clinical_Evaluation_DetailsCompletedEventHandler(object sender, Get_emr_Clinical_Evaluation_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Clinical_Evaluation_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Clinical_Evaluation_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_History_ExamNoCompletedEventHandler(object sender, Get_emr_History_ExamNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_History_ExamNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_History_ExamNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_History_DetailsCompletedEventHandler(object sender, Get_emr_History_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_History_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_History_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ComplaintsCompletedEventHandler(object sender, Get_emr_ComplaintsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ComplaintsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ComplaintsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_History_ExaminationCompletedEventHandler(object sender, Get_emr_History_ExaminationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_History_ExaminationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_History_ExaminationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_AssessmentTypeCompletedEventHandler(object sender, Get_emr_AssessmentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_AssessmentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_AssessmentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Assessment_History_ListCompletedEventHandler(object sender, Get_emr_Assessment_History_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Assessment_History_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Assessment_History_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Assessment_History_DtlCompletedEventHandler(object sender, Get_emr_Assessment_History_DtlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Assessment_History_DtlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Assessment_History_DtlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Assessment_History_ComplaintsCompletedEventHandler(object sender, Get_emr_Assessment_History_ComplaintsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Assessment_History_ComplaintsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Assessment_History_ComplaintsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Symptom_DetailsCompletedEventHandler(object sender, Get_emr_Symptom_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Symptom_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Symptom_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Diagnosis_StatusCompletedEventHandler(object sender, Get_emr_Diagnosis_StatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Diagnosis_StatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Diagnosis_StatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Diagnosis_MethodCompletedEventHandler(object sender, Get_emr_Diagnosis_MethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Diagnosis_MethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Diagnosis_MethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Diagnosis_InvestigationCompletedEventHandler(object sender, Get_emr_Diagnosis_InvestigationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Diagnosis_InvestigationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Diagnosis_InvestigationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Intervention_DetailsCompletedEventHandler(object sender, Get_emr_Intervention_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Intervention_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Intervention_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Surgery_DetailsCompletedEventHandler(object sender, Get_emr_Surgery_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Surgery_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Surgery_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ExternalRT_DetailsCompletedEventHandler(object sender, Get_emr_ExternalRT_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ExternalRT_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ExternalRT_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Brachytherapy_DetailsCompletedEventHandler(object sender, Get_emr_Brachytherapy_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Brachytherapy_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Brachytherapy_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Chemotherapy_DetailsCompletedEventHandler(object sender, Get_emr_Chemotherapy_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Chemotherapy_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Chemotherapy_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Medical_HistoryCompletedEventHandler(object sender, Get_emr_Medical_HistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Medical_HistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Medical_HistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Allergies_DetailsCompletedEventHandler(object sender, Get_emr_Allergies_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Allergies_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Allergies_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Manstrual_historyCompletedEventHandler(object sender, Get_emr_Manstrual_historyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Manstrual_historyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Manstrual_historyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Obstesteric_historyCompletedEventHandler(object sender, Get_emr_Obstesteric_historyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Obstesteric_historyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Obstesteric_historyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Contraceptive_historyCompletedEventHandler(object sender, Get_emr_Contraceptive_historyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Contraceptive_historyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Contraceptive_historyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Harmone_historyCompletedEventHandler(object sender, Get_emr_Harmone_historyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Harmone_historyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Harmone_historyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Env_Occup_historyCompletedEventHandler(object sender, Get_emr_Env_Occup_historyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Env_Occup_historyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Env_Occup_historyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Family_historyCompletedEventHandler(object sender, Get_emr_Family_historyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Family_historyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Family_historyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_LifeStyle_historyCompletedEventHandler(object sender, Get_emr_LifeStyle_historyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_LifeStyle_historyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_LifeStyle_historyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PrevCancer_historyCompletedEventHandler(object sender, Get_emr_PrevCancer_historyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PrevCancer_historyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PrevCancer_historyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ServiceUnitCompletedEventHandler(object sender, Get_emr_ServiceUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ServiceUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ServiceUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_SeenByDocCompletedEventHandler(object sender, Get_emr_SeenByDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_SeenByDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_SeenByDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_General_Examination_DetailsCompletedEventHandler(object sender, Get_emr_General_Examination_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_General_Examination_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_General_Examination_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Examination_ListCompletedEventHandler(object sender, Get_emr_Examination_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Examination_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Examination_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Pre_Malignant_ConditionsCompletedEventHandler(object sender, Get_emr_Pre_Malignant_ConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Pre_Malignant_ConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Pre_Malignant_ConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ConsciousnessCompletedEventHandler(object sender, Get_emr_ConsciousnessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ConsciousnessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ConsciousnessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Other_Higher_FunctionsCompletedEventHandler(object sender, Get_emr_Other_Higher_FunctionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Other_Higher_FunctionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Other_Higher_FunctionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Cranial_NervesCompletedEventHandler(object sender, Get_emr_Cranial_NervesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Cranial_NervesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Cranial_NervesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_GaitCompletedEventHandler(object sender, Get_emr_GaitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_GaitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_GaitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Sensory_SystemCompletedEventHandler(object sender, Get_emr_Sensory_SystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Sensory_SystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Sensory_SystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Motor_SystemCompletedEventHandler(object sender, Get_emr_Motor_SystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Motor_SystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Motor_SystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Muscle_Group_DetailsCompletedEventHandler(object sender, Get_emr_Muscle_Group_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Muscle_Group_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Muscle_Group_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_ReflexesCompletedEventHandler(object sender, Get_emr_ReflexesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_ReflexesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_ReflexesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Cerebellar_SignsCompletedEventHandler(object sender, Get_emr_Cerebellar_SignsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Cerebellar_SignsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Cerebellar_SignsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_EndocrinopathiesCompletedEventHandler(object sender, Get_emr_EndocrinopathiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_EndocrinopathiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_EndocrinopathiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Neurocutaneous_OtherSyndromesCompletedEventHandler(object sender, Get_emr_Neurocutaneous_OtherSyndromesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Neurocutaneous_OtherSyndromesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Neurocutaneous_OtherSyndromesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CSF_DiversionCompletedEventHandler(object sender, Get_emr_CSF_DiversionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CSF_DiversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CSF_DiversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Meningeal_IrritationCompletedEventHandler(object sender, Get_emr_Meningeal_IrritationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Meningeal_IrritationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Meningeal_IrritationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Neurological_PerformanceCompletedEventHandler(object sender, Get_emr_Neurological_PerformanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Neurological_PerformanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Neurological_PerformanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_EyeDetailsCompletedEventHandler(object sender, Get_emr_EyeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_EyeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_EyeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_External_ExaminationCompletedEventHandler(object sender, Get_emr_External_ExaminationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_External_ExaminationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_External_ExaminationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Internal_ExaminationCompletedEventHandler(object sender, Get_emr_Internal_ExaminationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Internal_ExaminationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Internal_ExaminationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Head_NeckCompletedEventHandler(object sender, Get_emr_Head_NeckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Head_NeckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Head_NeckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Mouth_Oral_CavityCompletedEventHandler(object sender, Get_emr_Mouth_Oral_CavityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Mouth_Oral_CavityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Mouth_Oral_CavityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Jaw_DetailsCompletedEventHandler(object sender, Get_emr_Jaw_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Jaw_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Jaw_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Neck_DetailsCompletedEventHandler(object sender, Get_emr_Neck_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Neck_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Neck_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Tumour_SpecificCompletedEventHandler(object sender, Get_emr_Tumour_SpecificCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Tumour_SpecificCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Tumour_SpecificCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_TNMStageCompletedEventHandler(object sender, Get_emr_TNMStageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_TNMStageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_TNMStageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Systemic_ExaminationCompletedEventHandler(object sender, Get_emr_Systemic_ExaminationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Systemic_ExaminationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Systemic_ExaminationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Tumour_Specific_ExaminationCompletedEventHandler(object sender, Get_emr_Tumour_Specific_ExaminationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Tumour_Specific_ExaminationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Tumour_Specific_ExaminationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Tumour_Details_LeftCompletedEventHandler(object sender, Get_emr_Tumour_Details_LeftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Tumour_Details_LeftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Tumour_Details_LeftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Tumour_Details_RightCompletedEventHandler(object sender, Get_emr_Tumour_Details_RightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Tumour_Details_RightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Tumour_Details_RightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_CVSRSCompletedEventHandler(object sender, Get_emr_CVSRSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_CVSRSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_CVSRSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Inspection_DetailsCompletedEventHandler(object sender, Get_emr_Inspection_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Inspection_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Inspection_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Asculation_DetailsCompletedEventHandler(object sender, Get_emr_Asculation_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Asculation_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Asculation_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_TS_ThoracicCompletedEventHandler(object sender, Get_emr_TS_ThoracicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_TS_ThoracicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_TS_ThoracicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PerAbdomen_InspectionCompletedEventHandler(object sender, Get_emr_PerAbdomen_InspectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PerAbdomen_InspectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PerAbdomen_InspectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PerAbdomen_PalpationCompletedEventHandler(object sender, Get_emr_PerAbdomen_PalpationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PerAbdomen_PalpationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PerAbdomen_PalpationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PerAbdomen_Percussion_AsculationCompletedEventHandler(object sender, Get_emr_PerAbdomen_Percussion_AsculationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PerAbdomen_Percussion_AsculationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PerAbdomen_Percussion_AsculationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PerAbdomen_AscitisCompletedEventHandler(object sender, Get_emr_PerAbdomen_AscitisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PerAbdomen_AscitisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PerAbdomen_AscitisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PerAbdomen_TSGastroCompletedEventHandler(object sender, Get_emr_PerAbdomen_TSGastroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PerAbdomen_TSGastroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PerAbdomen_TSGastroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_PerRectal_DetailsCompletedEventHandler(object sender, Get_emr_PerRectal_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_PerRectal_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_PerRectal_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Male_GenitaliaCompletedEventHandler(object sender, Get_emr_Male_GenitaliaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Male_GenitaliaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Male_GenitaliaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_Female_GenitaliaCompletedEventHandler(object sender, Get_emr_Female_GenitaliaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_Female_GenitaliaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_Female_GenitaliaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_TumorSpecific_GynaecologyCompletedEventHandler(object sender, Get_emr_TumorSpecific_GynaecologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_TumorSpecific_GynaecologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_TumorSpecific_GynaecologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_TumorSpecific_UrologyCompletedEventHandler(object sender, Get_emr_TumorSpecific_UrologyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_TumorSpecific_UrologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_TumorSpecific_UrologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_SystemicExaminationCompletedEventHandler(object sender, Get_emr_SystemicExaminationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_SystemicExaminationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_SystemicExaminationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Get_emr_BE_SwellingCompletedEventHandler(object sender, Get_emr_BE_SwellingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_emr_BE_SwellingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_emr_BE_SwellingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591